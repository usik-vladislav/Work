<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Z.EntityFramework.Extensions.EFCore</name>
    </assembly>
    <members>
        <member name="M:DbContextExtensions.BulkDelete``1(Microsoft.EntityFrameworkCore.DbContext,System.Collections.Generic.IEnumerable{System.Object})">
            <summary>A DbContext extension method that bulk delete.</summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="this">The @this to act on.</param>
            <param name="entities">The entities.</param>
        </member>
        <member name="M:DbContextExtensions.BulkDelete``1(Microsoft.EntityFrameworkCore.DbContext,System.Collections.Generic.IEnumerable{System.Object},System.Action{Z.BulkOperations.BulkOperation{``0}})">
            <summary>A DbContext extension method that bulk delete.</summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="this">The @this to act on.</param>
            <param name="entities">The entities.</param>
            <param name="options">Options for controlling the operation.</param>
        </member>
        <member name="M:DbContextExtensions.BulkDelete(Microsoft.EntityFrameworkCore.DbContext,System.Type,System.Collections.Generic.IEnumerable{System.Object})">
            <summary>A DbContext extension method that bulk delete.</summary>
            <param name="this">The @this to act on.</param>
            <param name="type">The destination entity type.</param>
            <param name="entities">The entities.</param>
        </member>
        <member name="M:DbContextExtensions.BulkDelete(Microsoft.EntityFrameworkCore.DbContext,System.Type,System.Collections.Generic.IEnumerable{System.Object},System.Action{Z.BulkOperations.BulkOperation})">
            <summary>A DbContext extension method that bulk delete.</summary>
            <param name="this">The @this to act on.</param>
            <param name="type">The destination entity type.</param>
            <param name="entities">The entities.</param>
            <param name="options">Options for controlling the operation.</param>
        </member>
        <member name="M:DbContextExtensions.BulkDeleteAsync``1(Microsoft.EntityFrameworkCore.DbContext,System.Collections.Generic.IEnumerable{System.Object})">
            <summary>A DbContext extension method that bulk delete asynchronous.</summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="this">The @this to act on.</param>
            <param name="entities">The entities.</param>
            <returns>The asynchronous result.</returns>
        </member>
        <member name="M:DbContextExtensions.BulkDeleteAsync``1(Microsoft.EntityFrameworkCore.DbContext,System.Collections.Generic.IEnumerable{System.Object},System.Threading.CancellationToken)">
            <summary>A DbContext extension method that bulk delete asynchronous.</summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="this">The @this to act on.</param>
            <param name="entities">The entities.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>The asynchronous result.</returns>
        </member>
        <member name="M:DbContextExtensions.BulkDeleteAsync``1(Microsoft.EntityFrameworkCore.DbContext,System.Collections.Generic.IEnumerable{System.Object},System.Action{Z.BulkOperations.BulkOperation{``0}})">
            <summary>A DbContext extension method that bulk delete asynchronous.</summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="this">The @this to act on.</param>
            <param name="entities">The entities.</param>
            <param name="options">Options for controlling the operation.</param>
            <returns>The asynchronous result.</returns>
        </member>
        <member name="M:DbContextExtensions.BulkDeleteAsync``1(Microsoft.EntityFrameworkCore.DbContext,System.Collections.Generic.IEnumerable{System.Object},System.Action{Z.BulkOperations.BulkOperation{``0}},System.Threading.CancellationToken)">
            <summary>A DbContext extension method that bulk delete asynchronous.</summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="this">The @this to act on.</param>
            <param name="entities">The entities.</param>
            <param name="options">Options for controlling the operation.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>The asynchronous result.</returns>
        </member>
        <member name="M:DbContextExtensions.BulkDeleteAsync(Microsoft.EntityFrameworkCore.DbContext,System.Type,System.Collections.Generic.IEnumerable{System.Object})">
            <summary>A DbContext extension method that bulk delete asynchronous.</summary>
            <param name="this">The @this to act on.</param>
            <param name="type">The destination entity type.</param>
            <param name="entities">The entities.</param>
            <returns>The asynchronous result.</returns>
        </member>
        <member name="M:DbContextExtensions.BulkDeleteAsync(Microsoft.EntityFrameworkCore.DbContext,System.Type,System.Collections.Generic.IEnumerable{System.Object},System.Threading.CancellationToken)">
            <summary>A DbContext extension method that bulk delete asynchronous.</summary>
            <param name="this">The @this to act on.</param>
            <param name="type">The destination entity type.</param>
            <param name="entities">The entities.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>The asynchronous result.</returns>
        </member>
        <member name="M:DbContextExtensions.BulkDeleteAsync(Microsoft.EntityFrameworkCore.DbContext,System.Type,System.Collections.Generic.IEnumerable{System.Object},System.Action{Z.BulkOperations.BulkOperation})">
            <summary>A DbContext extension method that bulk delete asynchronous.</summary>
            <param name="this">The @this to act on.</param>
            <param name="type">The destination entity type.</param>
            <param name="entities">The entities.</param>
            <param name="options">Options for controlling the operation.</param>
            <returns>The asynchronous result.</returns>
        </member>
        <member name="M:DbContextExtensions.BulkDeleteAsync(Microsoft.EntityFrameworkCore.DbContext,System.Type,System.Collections.Generic.IEnumerable{System.Object},System.Action{Z.BulkOperations.BulkOperation},System.Threading.CancellationToken)">
            <summary>A DbContext extension method that bulk delete asynchronous.</summary>
            <param name="this">The @this to act on.</param>
            <param name="type">The destination entity type.</param>
            <param name="entities">The entities.</param>
            <param name="options">Options for controlling the operation.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>The asynchronous result.</returns>
        </member>
        <member name="M:DbContextExtensions.BulkInsert``1(Microsoft.EntityFrameworkCore.DbContext,System.Collections.Generic.IEnumerable{System.Object})">
            <summary>A DbContext extension method that bulk insert.</summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="this">The @this to act on.</param>
            <param name="entities">The entities.</param>
        </member>
        <member name="M:DbContextExtensions.BulkInsert``1(Microsoft.EntityFrameworkCore.DbContext,System.Collections.Generic.IEnumerable{System.Object},System.Action{Z.BulkOperations.BulkOperation{``0}})">
            <summary>A DbContext extension method that bulk insert.</summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="this">The @this to act on.</param>
            <param name="entities">The entities.</param>
            <param name="options">Options for controlling the operation.</param>
        </member>
        <member name="M:DbContextExtensions.BulkInsert(Microsoft.EntityFrameworkCore.DbContext,System.Type,System.Collections.Generic.IEnumerable{System.Object})">
            <summary>A DbContext extension method that bulk insert.</summary>
            <param name="this">The @this to act on.</param>
            <param name="type">The destination entity type.</param>
            <param name="entities">The entities.</param>
        </member>
        <member name="M:DbContextExtensions.BulkInsert(Microsoft.EntityFrameworkCore.DbContext,System.Type,System.Collections.Generic.IEnumerable{System.Object},System.Action{Z.BulkOperations.BulkOperation})">
            <summary>A DbContext extension method that bulk insert.</summary>
            <param name="this">The @this to act on.</param>
            <param name="type">The destination entity type.</param>
            <param name="entities">The entities.</param>
            <param name="options">Options for controlling the operation.</param>
        </member>
        <member name="M:DbContextExtensions.BulkInsertAsync``1(Microsoft.EntityFrameworkCore.DbContext,System.Collections.Generic.IEnumerable{System.Object})">
            <summary>A DbContext extension method that bulk insert asynchronous.</summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="this">The @this to act on.</param>
            <param name="entities">The entities.</param>
            <returns>The asynchronous result.</returns>
        </member>
        <member name="M:DbContextExtensions.BulkInsertAsync``1(Microsoft.EntityFrameworkCore.DbContext,System.Collections.Generic.IEnumerable{System.Object},System.Threading.CancellationToken)">
            <summary>A DbContext extension method that bulk insert asynchronous.</summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="this">The @this to act on.</param>
            <param name="entities">The entities.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>The asynchronous result.</returns>
        </member>
        <member name="M:DbContextExtensions.BulkInsertAsync``1(Microsoft.EntityFrameworkCore.DbContext,System.Collections.Generic.IEnumerable{System.Object},System.Action{Z.BulkOperations.BulkOperation{``0}})">
            <summary>A DbContext extension method that bulk insert asynchronous.</summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="this">The @this to act on.</param>
            <param name="entities">The entities.</param>
            <param name="options">Options for controlling the operation.</param>
            <returns>The asynchronous result.</returns>
        </member>
        <member name="M:DbContextExtensions.BulkInsertAsync``1(Microsoft.EntityFrameworkCore.DbContext,System.Collections.Generic.IEnumerable{System.Object},System.Action{Z.BulkOperations.BulkOperation{``0}},System.Threading.CancellationToken)">
            <summary>A DbContext extension method that bulk insert asynchronous.</summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="this">The @this to act on.</param>
            <param name="entities">The entities.</param>
            <param name="options">Options for controlling the operation.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>The asynchronous result.</returns>
        </member>
        <member name="M:DbContextExtensions.BulkInsertAsync(Microsoft.EntityFrameworkCore.DbContext,System.Type,System.Collections.Generic.IEnumerable{System.Object})">
            <summary>A DbContext extension method that bulk insert asynchronous.</summary>
            <param name="this">The @this to act on.</param>
            <param name="type">The destination entity type.</param>
            <param name="entities">The entities.</param>
            <returns>The asynchronous result.</returns>
        </member>
        <member name="M:DbContextExtensions.BulkInsertAsync(Microsoft.EntityFrameworkCore.DbContext,System.Type,System.Collections.Generic.IEnumerable{System.Object},System.Threading.CancellationToken)">
            <summary>A DbContext extension method that bulk insert asynchronous.</summary>
            <param name="this">The @this to act on.</param>
            <param name="type">The destination entity type.</param>
            <param name="entities">The entities.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>The asynchronous result.</returns>
        </member>
        <member name="M:DbContextExtensions.BulkInsertAsync(Microsoft.EntityFrameworkCore.DbContext,System.Type,System.Collections.Generic.IEnumerable{System.Object},System.Action{Z.BulkOperations.BulkOperation})">
            <summary>A DbContext extension method that bulk insert asynchronous.</summary>
            <param name="this">The @this to act on.</param>
            <param name="type">The destination entity type.</param>
            <param name="entities">The entities.</param>
            <param name="options">Options for controlling the operation.</param>
            <returns>The asynchronous result.</returns>
        </member>
        <member name="M:DbContextExtensions.BulkInsertAsync(Microsoft.EntityFrameworkCore.DbContext,System.Type,System.Collections.Generic.IEnumerable{System.Object},System.Action{Z.BulkOperations.BulkOperation},System.Threading.CancellationToken)">
            <summary>A DbContext extension method that bulk insert asynchronous.</summary>
            <param name="this">The @this to act on.</param>
            <param name="type">The destination entity type.</param>
            <param name="entities">The entities.</param>
            <param name="options">Options for controlling the operation.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>The asynchronous result.</returns>
        </member>
        <member name="M:DbContextExtensions.BulkMerge``1(Microsoft.EntityFrameworkCore.DbContext,System.Collections.Generic.IEnumerable{System.Object})">
            <summary>A DbContext extension method that bulk merge.</summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="this">The @this to act on.</param>
            <param name="entities">The entities.</param>
        </member>
        <member name="M:DbContextExtensions.BulkMerge``1(Microsoft.EntityFrameworkCore.DbContext,System.Collections.Generic.IEnumerable{System.Object},System.Action{Z.BulkOperations.BulkOperation{``0}})">
            <summary>A DbContext extension method that bulk merge.</summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="this">The @this to act on.</param>
            <param name="entities">The entities.</param>
            <param name="options">Options for controlling the operation.</param>
        </member>
        <member name="M:DbContextExtensions.BulkMerge(Microsoft.EntityFrameworkCore.DbContext,System.Type,System.Collections.Generic.IEnumerable{System.Object})">
            <summary>A DbContext extension method that bulk merge.</summary>
            <param name="this">The @this to act on.</param>
            <param name="type">The destination entity type.</param>
            <param name="entities">The entities.</param>
        </member>
        <member name="M:DbContextExtensions.BulkMerge(Microsoft.EntityFrameworkCore.DbContext,System.Type,System.Collections.Generic.IEnumerable{System.Object},System.Action{Z.BulkOperations.BulkOperation})">
            <summary>A DbContext extension method that bulk merge.</summary>
            <param name="this">The @this to act on.</param>
            <param name="type">The destination entity type.</param>
            <param name="entities">The entities.</param>
            <param name="options">Options for controlling the operation.</param>
        </member>
        <member name="M:DbContextExtensions.BulkMergeAsync``1(Microsoft.EntityFrameworkCore.DbContext,System.Collections.Generic.IEnumerable{System.Object})">
            <summary>A DbContext extension method that bulk merge asynchronous.</summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="this">The @this to act on.</param>
            <param name="entities">The entities.</param>
            <returns>The asynchronous result.</returns>
        </member>
        <member name="M:DbContextExtensions.BulkMergeAsync``1(Microsoft.EntityFrameworkCore.DbContext,System.Collections.Generic.IEnumerable{System.Object},System.Threading.CancellationToken)">
            <summary>A DbContext extension method that bulk merge asynchronous.</summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="this">The @this to act on.</param>
            <param name="entities">The entities.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>The asynchronous result.</returns>
        </member>
        <member name="M:DbContextExtensions.BulkMergeAsync``1(Microsoft.EntityFrameworkCore.DbContext,System.Collections.Generic.IEnumerable{System.Object},System.Action{Z.BulkOperations.BulkOperation{``0}})">
            <summary>A DbContext extension method that bulk merge asynchronous.</summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="this">The @this to act on.</param>
            <param name="entities">The entities.</param>
            <param name="options">Options for controlling the operation.</param>
            <returns>The asynchronous result.</returns>
        </member>
        <member name="M:DbContextExtensions.BulkMergeAsync``1(Microsoft.EntityFrameworkCore.DbContext,System.Collections.Generic.IEnumerable{System.Object},System.Action{Z.BulkOperations.BulkOperation{``0}},System.Threading.CancellationToken)">
            <summary>A DbContext extension method that bulk merge asynchronous.</summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="this">The @this to act on.</param>
            <param name="entities">The entities.</param>
            <param name="options">Options for controlling the operation.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>The asynchronous result.</returns>
        </member>
        <member name="M:DbContextExtensions.BulkMergeAsync(Microsoft.EntityFrameworkCore.DbContext,System.Type,System.Collections.Generic.IEnumerable{System.Object})">
            <summary>A DbContext extension method that bulk merge asynchronous.</summary>
            <param name="this">The @this to act on.</param>
            <param name="type">The destination entity type.</param>
            <param name="entities">The entities.</param>
            <returns>The asynchronous result.</returns>
        </member>
        <member name="M:DbContextExtensions.BulkMergeAsync(Microsoft.EntityFrameworkCore.DbContext,System.Type,System.Collections.Generic.IEnumerable{System.Object},System.Threading.CancellationToken)">
            <summary>A DbContext extension method that bulk merge asynchronous.</summary>
            <param name="this">The @this to act on.</param>
            <param name="type">The destination entity type.</param>
            <param name="entities">The entities.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>The asynchronous result.</returns>
        </member>
        <member name="M:DbContextExtensions.BulkMergeAsync(Microsoft.EntityFrameworkCore.DbContext,System.Type,System.Collections.Generic.IEnumerable{System.Object},System.Action{Z.BulkOperations.BulkOperation})">
            <summary>A DbContext extension method that bulk merge asynchronous.</summary>
            <param name="this">The @this to act on.</param>
            <param name="type">The destination entity type.</param>
            <param name="entities">The entities.</param>
            <param name="options">Options for controlling the operation.</param>
            <returns>The asynchronous result.</returns>
        </member>
        <member name="M:DbContextExtensions.BulkMergeAsync(Microsoft.EntityFrameworkCore.DbContext,System.Type,System.Collections.Generic.IEnumerable{System.Object},System.Action{Z.BulkOperations.BulkOperation},System.Threading.CancellationToken)">
            <summary>A DbContext extension method that bulk merge asynchronous.</summary>
            <param name="this">The @this to act on.</param>
            <param name="type">The destination entity type.</param>
            <param name="entities">The entities.</param>
            <param name="options">Options for controlling the operation.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>The asynchronous result.</returns>
        </member>
        <member name="M:DbContextExtensions.BulkSynchronize``1(Microsoft.EntityFrameworkCore.DbContext,System.Collections.Generic.IEnumerable{System.Object})">
            <summary>A DbContext extension method that bulk synchronize.</summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="this">The @this to act on.</param>
            <param name="entities">The entities.</param>
        </member>
        <member name="M:DbContextExtensions.BulkSynchronize``1(Microsoft.EntityFrameworkCore.DbContext,System.Collections.Generic.IEnumerable{System.Object},System.Action{Z.BulkOperations.BulkOperation{``0}})">
            <summary>A DbContext extension method that bulk synchronize.</summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="this">The @this to act on.</param>
            <param name="entities">The entities.</param>
            <param name="options">Options for controlling the operation.</param>
        </member>
        <member name="M:DbContextExtensions.BulkSynchronize(Microsoft.EntityFrameworkCore.DbContext,System.Type,System.Collections.Generic.IEnumerable{System.Object})">
            <summary>A DbContext extension method that bulk synchronize.</summary>
            <param name="this">The @this to act on.</param>
            <param name="type">The destination entity type.</param>
            <param name="entities">The entities.</param>
        </member>
        <member name="M:DbContextExtensions.BulkSynchronize(Microsoft.EntityFrameworkCore.DbContext,System.Type,System.Collections.Generic.IEnumerable{System.Object},System.Action{Z.BulkOperations.BulkOperation})">
            <summary>A DbContext extension method that bulk synchronize.</summary>
            <param name="this">The @this to act on.</param>
            <param name="type">The destination entity type.</param>
            <param name="entities">The entities.</param>
            <param name="options">Options for controlling the operation.</param>
        </member>
        <member name="M:DbContextExtensions.BulkSynchronizeAsync``1(Microsoft.EntityFrameworkCore.DbContext,System.Collections.Generic.IEnumerable{System.Object})">
            <summary>A DbContext extension method that bulk synchronize asynchronous.</summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="this">The @this to act on.</param>
            <param name="entities">The entities.</param>
            <returns>The asynchronous result.</returns>
        </member>
        <member name="M:DbContextExtensions.BulkSynchronizeAsync``1(Microsoft.EntityFrameworkCore.DbContext,System.Collections.Generic.IEnumerable{System.Object},System.Threading.CancellationToken)">
            <summary>A DbContext extension method that bulk synchronize asynchronous.</summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="this">The @this to act on.</param>
            <param name="entities">The entities.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>The asynchronous result.</returns>
        </member>
        <member name="M:DbContextExtensions.BulkSynchronizeAsync``1(Microsoft.EntityFrameworkCore.DbContext,System.Collections.Generic.IEnumerable{System.Object},System.Action{Z.BulkOperations.BulkOperation{``0}})">
            <summary>A DbContext extension method that bulk synchronize asynchronous.</summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="this">The @this to act on.</param>
            <param name="entities">The entities.</param>
            <param name="options">Options for controlling the operation.</param>
            <returns>The asynchronous result.</returns>
        </member>
        <member name="M:DbContextExtensions.BulkSynchronizeAsync``1(Microsoft.EntityFrameworkCore.DbContext,System.Collections.Generic.IEnumerable{System.Object},System.Action{Z.BulkOperations.BulkOperation{``0}},System.Threading.CancellationToken)">
            <summary>A DbContext extension method that bulk synchronize asynchronous.</summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="this">The @this to act on.</param>
            <param name="entities">The entities.</param>
            <param name="options">Options for controlling the operation.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>The asynchronous result.</returns>
        </member>
        <member name="M:DbContextExtensions.BulkSynchronizeAsync(Microsoft.EntityFrameworkCore.DbContext,System.Type,System.Collections.Generic.IEnumerable{System.Object})">
            <summary>A DbContext extension method that bulk synchronize asynchronous.</summary>
            <param name="this">The @this to act on.</param>
            <param name="type">The destination entity type.</param>
            <param name="entities">The entities.</param>
            <returns>The asynchronous result.</returns>
        </member>
        <member name="M:DbContextExtensions.BulkSynchronizeAsync(Microsoft.EntityFrameworkCore.DbContext,System.Type,System.Collections.Generic.IEnumerable{System.Object},System.Threading.CancellationToken)">
            <summary>A DbContext extension method that bulk synchronize asynchronous.</summary>
            <param name="this">The @this to act on.</param>
            <param name="type">The destination entity type.</param>
            <param name="entities">The entities.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>The asynchronous result.</returns>
        </member>
        <member name="M:DbContextExtensions.BulkSynchronizeAsync(Microsoft.EntityFrameworkCore.DbContext,System.Type,System.Collections.Generic.IEnumerable{System.Object},System.Action{Z.BulkOperations.BulkOperation})">
            <summary>A DbContext extension method that bulk synchronize asynchronous.</summary>
            <param name="this">The @this to act on.</param>
            <param name="type">The destination entity type.</param>
            <param name="entities">The entities.</param>
            <param name="options">Options for controlling the operation.</param>
            <returns>The asynchronous result.</returns>
        </member>
        <member name="M:DbContextExtensions.BulkSynchronizeAsync(Microsoft.EntityFrameworkCore.DbContext,System.Type,System.Collections.Generic.IEnumerable{System.Object},System.Action{Z.BulkOperations.BulkOperation},System.Threading.CancellationToken)">
            <summary>A DbContext extension method that bulk synchronize asynchronous.</summary>
            <param name="this">The @this to act on.</param>
            <param name="type">The destination entity type.</param>
            <param name="entities">The entities.</param>
            <param name="options">Options for controlling the operation.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>The asynchronous result.</returns>
        </member>
        <member name="M:DbContextExtensions.BulkUpdate``1(Microsoft.EntityFrameworkCore.DbContext,System.Collections.Generic.IEnumerable{System.Object})">
            <summary>A DbContext extension method that bulk update.</summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="this">The @this to act on.</param>
            <param name="entities">The entities.</param>
        </member>
        <member name="M:DbContextExtensions.BulkUpdate``1(Microsoft.EntityFrameworkCore.DbContext,System.Collections.Generic.IEnumerable{System.Object},System.Action{Z.BulkOperations.BulkOperation{``0}})">
            <summary>A DbContext extension method that bulk update.</summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="this">The @this to act on.</param>
            <param name="entities">The entities.</param>
            <param name="options">Options for controlling the operation.</param>
        </member>
        <member name="M:DbContextExtensions.BulkUpdate(Microsoft.EntityFrameworkCore.DbContext,System.Type,System.Collections.Generic.IEnumerable{System.Object})">
            <summary>A DbContext extension method that bulk update.</summary>
            <param name="this">The @this to act on.</param>
            <param name="type">The destination entity type.</param>
            <param name="entities">The entities.</param>
        </member>
        <member name="M:DbContextExtensions.BulkUpdate(Microsoft.EntityFrameworkCore.DbContext,System.Type,System.Collections.Generic.IEnumerable{System.Object},System.Action{Z.BulkOperations.BulkOperation})">
            <summary>A DbContext extension method that bulk update.</summary>
            <param name="this">The @this to act on.</param>
            <param name="type">The destination entity type.</param>
            <param name="entities">The entities.</param>
            <param name="options">Options for controlling the operation.</param>
        </member>
        <member name="M:DbContextExtensions.BulkUpdateAsync``1(Microsoft.EntityFrameworkCore.DbContext,System.Collections.Generic.IEnumerable{System.Object})">
            <summary>A DbContext extension method that bulk update asynchronous.</summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="this">The @this to act on.</param>
            <param name="entities">The entities.</param>
            <returns>The asynchronous result.</returns>
        </member>
        <member name="M:DbContextExtensions.BulkUpdateAsync``1(Microsoft.EntityFrameworkCore.DbContext,System.Collections.Generic.IEnumerable{System.Object},System.Threading.CancellationToken)">
            <summary>A DbContext extension method that bulk update asynchronous.</summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="this">The @this to act on.</param>
            <param name="entities">The entities.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>The asynchronous result.</returns>
        </member>
        <member name="M:DbContextExtensions.BulkUpdateAsync``1(Microsoft.EntityFrameworkCore.DbContext,System.Collections.Generic.IEnumerable{System.Object},System.Action{Z.BulkOperations.BulkOperation{``0}})">
            <summary>A DbContext extension method that bulk update asynchronous.</summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="this">The @this to act on.</param>
            <param name="entities">The entities.</param>
            <param name="options">Options for controlling the operation.</param>
            <returns>The asynchronous result.</returns>
        </member>
        <member name="M:DbContextExtensions.BulkUpdateAsync``1(Microsoft.EntityFrameworkCore.DbContext,System.Collections.Generic.IEnumerable{System.Object},System.Action{Z.BulkOperations.BulkOperation{``0}},System.Threading.CancellationToken)">
            <summary>A DbContext extension method that bulk update asynchronous.</summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="this">The @this to act on.</param>
            <param name="entities">The entities.</param>
            <param name="options">Options for controlling the operation.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>The asynchronous result.</returns>
        </member>
        <member name="M:DbContextExtensions.BulkUpdateAsync(Microsoft.EntityFrameworkCore.DbContext,System.Type,System.Collections.Generic.IEnumerable{System.Object})">
            <summary>A DbContext extension method that bulk update asynchronous.</summary>
            <param name="this">The @this to act on.</param>
            <param name="type">The destination entity type.</param>
            <param name="entities">The entities.</param>
            <returns>The asynchronous result.</returns>
        </member>
        <member name="M:DbContextExtensions.BulkUpdateAsync(Microsoft.EntityFrameworkCore.DbContext,System.Type,System.Collections.Generic.IEnumerable{System.Object},System.Threading.CancellationToken)">
            <summary>A DbContext extension method that bulk update asynchronous.</summary>
            <param name="this">The @this to act on.</param>
            <param name="type">The destination entity type.</param>
            <param name="entities">The entities.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>The asynchronous result.</returns>
        </member>
        <member name="M:DbContextExtensions.BulkUpdateAsync(Microsoft.EntityFrameworkCore.DbContext,System.Type,System.Collections.Generic.IEnumerable{System.Object},System.Action{Z.BulkOperations.BulkOperation})">
            <summary>A DbContext extension method that bulk update asynchronous.</summary>
            <param name="this">The @this to act on.</param>
            <param name="type">The destination entity type.</param>
            <param name="entities">The entities.</param>
            <param name="options">Options for controlling the operation.</param>
            <returns>The asynchronous result.</returns>
        </member>
        <member name="M:DbContextExtensions.BulkUpdateAsync(Microsoft.EntityFrameworkCore.DbContext,System.Type,System.Collections.Generic.IEnumerable{System.Object},System.Action{Z.BulkOperations.BulkOperation},System.Threading.CancellationToken)">
            <summary>A DbContext extension method that bulk update asynchronous.</summary>
            <param name="this">The @this to act on.</param>
            <param name="type">The destination entity type.</param>
            <param name="entities">The entities.</param>
            <param name="options">Options for controlling the operation.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>The asynchronous result.</returns>
        </member>
        <member name="M:DbContextExtensions.SingleDelete``1(Microsoft.EntityFrameworkCore.DbContext,System.Object)">
            <summary>A DbContext extension method that will perform a single delete.</summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="this">The @this to act on.</param>
            <param name="entity">The entity.</param>
        </member>
        <member name="M:DbContextExtensions.SingleDelete``1(Microsoft.EntityFrameworkCore.DbContext,System.Object,System.Action{Z.BulkOperations.BulkOperation{``0}})">
            <summary>A DbContext extension method that will perform a single delete.</summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="this">The @this to act on.</param>
            <param name="entity">The entity.</param>
            <param name="options">Options for controlling the operation.</param>
        </member>
        <member name="M:DbContextExtensions.SingleDelete(Microsoft.EntityFrameworkCore.DbContext,System.Type,System.Object)">
            <summary>A DbContext extension method that will perform a single delete.</summary>
            <param name="this">The @this to act on.</param>
            <param name="type">The destination entity type.</param>
            <param name="entity">The entity.</param>
        </member>
        <member name="M:DbContextExtensions.SingleDelete(Microsoft.EntityFrameworkCore.DbContext,System.Type,System.Object,System.Action{Z.BulkOperations.BulkOperation})">
            <summary>A DbContext extension method that will perform a single delete.</summary>
            <param name="this">The @this to act on.</param>
            <param name="type">The destination entity type.</param>
            <param name="entity">The entity.</param>
            <param name="options">Options for controlling the operation.</param>
        </member>
        <member name="M:DbContextExtensions.SingleDeleteAsync``1(Microsoft.EntityFrameworkCore.DbContext,System.Object)">
            <summary>A DbContext extension method that will perform a single delete asynchronous.</summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="this">The @this to act on.</param>
            <param name="entity">The entity.</param>
            <returns>A Task.</returns>
        </member>
        <member name="M:DbContextExtensions.SingleDeleteAsync``1(Microsoft.EntityFrameworkCore.DbContext,System.Object,System.Threading.CancellationToken)">
            <summary>A DbContext extension method that will perform a single delete asynchronous.</summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="this">The @this to act on.</param>
            <param name="entity">The entity.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>A Task.</returns>
        </member>
        <member name="M:DbContextExtensions.SingleDeleteAsync``1(Microsoft.EntityFrameworkCore.DbContext,System.Object,System.Action{Z.BulkOperations.BulkOperation{``0}})">
            <summary>A DbContext extension method that will perform a single delete asynchronous.</summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="this">The @this to act on.</param>
            <param name="entity">The entity.</param>
            <param name="options">Options for controlling the operation.</param>
            <returns>A Task.</returns>
        </member>
        <member name="M:DbContextExtensions.SingleDeleteAsync``1(Microsoft.EntityFrameworkCore.DbContext,System.Object,System.Action{Z.BulkOperations.BulkOperation{``0}},System.Threading.CancellationToken)">
            <summary>A DbContext extension method that will perform a single delete asynchronous.</summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="this">The @this to act on.</param>
            <param name="entity">The entity.</param>
            <param name="options">Options for controlling the operation.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>A Task.</returns>
        </member>
        <member name="M:DbContextExtensions.SingleDeleteAsync(Microsoft.EntityFrameworkCore.DbContext,System.Type,System.Object)">
            <summary>A DbContext extension method that will perform a single delete asynchronous.</summary>
            <param name="this">The @this to act on.</param>
            <param name="type">The destination entity type.</param>
            <param name="entity">The entity.</param>
            <returns>A Task.</returns>
        </member>
        <member name="M:DbContextExtensions.SingleDeleteAsync(Microsoft.EntityFrameworkCore.DbContext,System.Type,System.Object,System.Threading.CancellationToken)">
            <summary>A DbContext extension method that will perform a single delete asynchronous.</summary>
            <param name="this">The @this to act on.</param>
            <param name="type">The destination entity type.</param>
            <param name="entity">The entity.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>A Task.</returns>
        </member>
        <member name="M:DbContextExtensions.SingleDeleteAsync(Microsoft.EntityFrameworkCore.DbContext,System.Type,System.Object,System.Action{Z.BulkOperations.BulkOperation})">
            <summary>A DbContext extension method that will perform a single delete asynchronous.</summary>
            <param name="this">The @this to act on.</param>
            <param name="type">The destination entity type.</param>
            <param name="entity">The entity.</param>
            <param name="options">Options for controlling the operation.</param>
            <returns>A Task.</returns>
        </member>
        <member name="M:DbContextExtensions.SingleDeleteAsync(Microsoft.EntityFrameworkCore.DbContext,System.Type,System.Object,System.Action{Z.BulkOperations.BulkOperation},System.Threading.CancellationToken)">
            <summary>A DbContext extension method that will perform a single delete asynchronous.</summary>
            <param name="this">The @this to act on.</param>
            <param name="type">The destination entity type.</param>
            <param name="entity">The entity.</param>
            <param name="options">Options for controlling the operation.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>A Task.</returns>
        </member>
        <member name="M:DbContextExtensions.SingleInsert``1(Microsoft.EntityFrameworkCore.DbContext,System.Object)">
            <summary>A DbContext extension method that will perform a single insert.</summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="this">The @this to act on.</param>
            <param name="entity">The entity.</param>
        </member>
        <member name="M:DbContextExtensions.SingleInsert``1(Microsoft.EntityFrameworkCore.DbContext,System.Object,System.Action{Z.BulkOperations.BulkOperation{``0}})">
            <summary>A DbContext extension method that will perform a single insert.</summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="this">The @this to act on.</param>
            <param name="entity">The entity.</param>
            <param name="options">Options for controlling the operation.</param>
        </member>
        <member name="M:DbContextExtensions.SingleInsert(Microsoft.EntityFrameworkCore.DbContext,System.Type,System.Object)">
            <summary>A DbContext extension method that will perform a single insert.</summary>
            <param name="this">The @this to act on.</param>
            <param name="type">The destination entity type.</param>
            <param name="entity">The entity.</param>
        </member>
        <member name="M:DbContextExtensions.SingleInsert(Microsoft.EntityFrameworkCore.DbContext,System.Type,System.Object,System.Action{Z.BulkOperations.BulkOperation})">
            <summary>A DbContext extension method that will perform a single insert.</summary>
            <param name="this">The @this to act on.</param>
            <param name="type">The destination entity type.</param>
            <param name="entity">The entity.</param>
            <param name="options">Options for controlling the operation.</param>
        </member>
        <member name="M:DbContextExtensions.SingleInsertAsync``1(Microsoft.EntityFrameworkCore.DbContext,System.Object)">
            <summary>A DbContext extension method that will perform a single insert asynchronous.</summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="this">The @this to act on.</param>
            <param name="entity">The entity.</param>
            <returns>A Task.</returns>
        </member>
        <member name="M:DbContextExtensions.SingleInsertAsync``1(Microsoft.EntityFrameworkCore.DbContext,System.Object,System.Threading.CancellationToken)">
            <summary>A DbContext extension method that will perform a single insert asynchronous.</summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="this">The @this to act on.</param>
            <param name="entity">The entity.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>A Task.</returns>
        </member>
        <member name="M:DbContextExtensions.SingleInsertAsync``1(Microsoft.EntityFrameworkCore.DbContext,System.Object,System.Action{Z.BulkOperations.BulkOperation{``0}})">
            <summary>A DbContext extension method that will perform a single insert asynchronous.</summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="this">The @this to act on.</param>
            <param name="entity">The entity.</param>
            <param name="options">Options for controlling the operation.</param>
            <returns>A Task.</returns>
        </member>
        <member name="M:DbContextExtensions.SingleInsertAsync``1(Microsoft.EntityFrameworkCore.DbContext,System.Object,System.Action{Z.BulkOperations.BulkOperation{``0}},System.Threading.CancellationToken)">
            <summary>A DbContext extension method that will perform a single insert asynchronous.</summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="this">The @this to act on.</param>
            <param name="entity">The entity.</param>
            <param name="options">Options for controlling the operation.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>A Task.</returns>
        </member>
        <member name="M:DbContextExtensions.SingleInsertAsync(Microsoft.EntityFrameworkCore.DbContext,System.Type,System.Object)">
            <summary>A DbContext extension method that will perform a single insert asynchronous.</summary>
            <param name="this">The @this to act on.</param>
            <param name="type">The destination entity type.</param>
            <param name="entity">The entity.</param>
            <returns>A Task.</returns>
        </member>
        <member name="M:DbContextExtensions.SingleInsertAsync(Microsoft.EntityFrameworkCore.DbContext,System.Type,System.Object,System.Threading.CancellationToken)">
            <summary>A DbContext extension method that will perform a single insert asynchronous.</summary>
            <param name="this">The @this to act on.</param>
            <param name="type">The destination entity type.</param>
            <param name="entity">The entity.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>A Task.</returns>
        </member>
        <member name="M:DbContextExtensions.SingleInsertAsync(Microsoft.EntityFrameworkCore.DbContext,System.Type,System.Object,System.Action{Z.BulkOperations.BulkOperation})">
            <summary>A DbContext extension method that will perform a single insert asynchronous.</summary>
            <param name="this">The @this to act on.</param>
            <param name="type">The destination entity type.</param>
            <param name="entity">The entity.</param>
            <param name="options">Options for controlling the operation.</param>
            <returns>A Task.</returns>
        </member>
        <member name="M:DbContextExtensions.SingleInsertAsync(Microsoft.EntityFrameworkCore.DbContext,System.Type,System.Object,System.Action{Z.BulkOperations.BulkOperation},System.Threading.CancellationToken)">
            <summary>A DbContext extension method that will perform a single insert asynchronous.</summary>
            <param name="this">The @this to act on.</param>
            <param name="type">The destination entity type.</param>
            <param name="entity">The entity.</param>
            <param name="options">Options for controlling the operation.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>A Task.</returns>
        </member>
        <member name="M:DbContextExtensions.SingleMerge``1(Microsoft.EntityFrameworkCore.DbContext,System.Object)">
            <summary>A DbContext extension method that will perform a single merge.</summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="this">The @this to act on.</param>
            <param name="entity">The entity.</param>
        </member>
        <member name="M:DbContextExtensions.SingleMerge``1(Microsoft.EntityFrameworkCore.DbContext,System.Object,System.Action{Z.BulkOperations.BulkOperation{``0}})">
            <summary>A DbContext extension method that will perform a single merge.</summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="this">The @this to act on.</param>
            <param name="entity">The entity.</param>
            <param name="options">Options for controlling the operation.</param>
        </member>
        <member name="M:DbContextExtensions.SingleMerge(Microsoft.EntityFrameworkCore.DbContext,System.Type,System.Object)">
            <summary>A DbContext extension method that will perform a single merge.</summary>
            <param name="this">The @this to act on.</param>
            <param name="type">The destination entity type.</param>
            <param name="entity">The entity.</param>
        </member>
        <member name="M:DbContextExtensions.SingleMerge(Microsoft.EntityFrameworkCore.DbContext,System.Type,System.Object,System.Action{Z.BulkOperations.BulkOperation})">
            <summary>A DbContext extension method that will perform a single merge.</summary>
            <param name="this">The @this to act on.</param>
            <param name="type">The destination entity type.</param>
            <param name="entity">The entity.</param>
            <param name="options">Options for controlling the operation.</param>
        </member>
        <member name="M:DbContextExtensions.SingleMergeAsync``1(Microsoft.EntityFrameworkCore.DbContext,System.Object)">
            <summary>A DbContext extension method that will perform a single merge asynchronous.</summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="this">The @this to act on.</param>
            <param name="entity">The entity.</param>
            <returns>A Task.</returns>
        </member>
        <member name="M:DbContextExtensions.SingleMergeAsync``1(Microsoft.EntityFrameworkCore.DbContext,System.Object,System.Threading.CancellationToken)">
            <summary>A DbContext extension method that will perform a single merge asynchronous.</summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="this">The @this to act on.</param>
            <param name="entity">The entity.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>A Task.</returns>
        </member>
        <member name="M:DbContextExtensions.SingleMergeAsync``1(Microsoft.EntityFrameworkCore.DbContext,System.Object,System.Action{Z.BulkOperations.BulkOperation{``0}})">
            <summary>A DbContext extension method that will perform a single merge asynchronous.</summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="this">The @this to act on.</param>
            <param name="entity">The entity.</param>
            <param name="options">Options for controlling the operation.</param>
            <returns>A Task.</returns>
        </member>
        <member name="M:DbContextExtensions.SingleMergeAsync``1(Microsoft.EntityFrameworkCore.DbContext,System.Object,System.Action{Z.BulkOperations.BulkOperation{``0}},System.Threading.CancellationToken)">
            <summary>A DbContext extension method that will perform a single merge asynchronous.</summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="this">The @this to act on.</param>
            <param name="entity">The entity.</param>
            <param name="options">Options for controlling the operation.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>A Task.</returns>
        </member>
        <member name="M:DbContextExtensions.SingleMergeAsync(Microsoft.EntityFrameworkCore.DbContext,System.Type,System.Object)">
            <summary>A DbContext extension method that will perform a single merge asynchronous.</summary>
            <param name="this">The @this to act on.</param>
            <param name="type">The destination entity type.</param>
            <param name="entity">The entity.</param>
            <returns>A Task.</returns>
        </member>
        <member name="M:DbContextExtensions.SingleMergeAsync(Microsoft.EntityFrameworkCore.DbContext,System.Type,System.Object,System.Threading.CancellationToken)">
            <summary>A DbContext extension method that will perform a single merge asynchronous.</summary>
            <param name="this">The @this to act on.</param>
            <param name="type">The destination entity type.</param>
            <param name="entity">The entity.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>A Task.</returns>
        </member>
        <member name="M:DbContextExtensions.SingleMergeAsync(Microsoft.EntityFrameworkCore.DbContext,System.Type,System.Object,System.Action{Z.BulkOperations.BulkOperation})">
            <summary>A DbContext extension method that will perform a single merge asynchronous.</summary>
            <param name="this">The @this to act on.</param>
            <param name="type">The destination entity type.</param>
            <param name="entity">The entity.</param>
            <param name="options">Options for controlling the operation.</param>
            <returns>A Task.</returns>
        </member>
        <member name="M:DbContextExtensions.SingleMergeAsync(Microsoft.EntityFrameworkCore.DbContext,System.Type,System.Object,System.Action{Z.BulkOperations.BulkOperation},System.Threading.CancellationToken)">
            <summary>A DbContext extension method that will perform a single merge asynchronous.</summary>
            <param name="this">The @this to act on.</param>
            <param name="type">The destination entity type.</param>
            <param name="entity">The entity.</param>
            <param name="options">Options for controlling the operation.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>A Task.</returns>
        </member>
        <member name="M:DbContextExtensions.SingleSynchronize``1(Microsoft.EntityFrameworkCore.DbContext,System.Object)">
            <summary>A DbContext extension method that will perform a single synchronize.</summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="this">The @this to act on.</param>
            <param name="entity">The entity.</param>
        </member>
        <member name="M:DbContextExtensions.SingleSynchronize``1(Microsoft.EntityFrameworkCore.DbContext,System.Object,System.Action{Z.BulkOperations.BulkOperation{``0}})">
            <summary>A DbContext extension method that will perform a single synchronize.</summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="this">The @this to act on.</param>
            <param name="entity">The entity.</param>
            <param name="options">Options for controlling the operation.</param>
        </member>
        <member name="M:DbContextExtensions.SingleSynchronize(Microsoft.EntityFrameworkCore.DbContext,System.Type,System.Object)">
            <summary>A DbContext extension method that will perform a single synchronize.</summary>
            <param name="this">The @this to act on.</param>
            <param name="type">The destination entity type.</param>
            <param name="entity">The entity.</param>
        </member>
        <member name="M:DbContextExtensions.SingleSynchronize(Microsoft.EntityFrameworkCore.DbContext,System.Type,System.Object,System.Action{Z.BulkOperations.BulkOperation})">
            <summary>A DbContext extension method that will perform a single synchronize.</summary>
            <param name="this">The @this to act on.</param>
            <param name="type">The destination entity type.</param>
            <param name="entity">The entity.</param>
            <param name="options">Options for controlling the operation.</param>
        </member>
        <member name="M:DbContextExtensions.SingleSynchronizeAsync``1(Microsoft.EntityFrameworkCore.DbContext,System.Object)">
            <summary>A DbContext extension method that will perform a single synchronize asynchronous.</summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="this">The @this to act on.</param>
            <param name="entity">The entity.</param>
            <returns>A Task.</returns>
        </member>
        <member name="M:DbContextExtensions.SingleSynchronizeAsync``1(Microsoft.EntityFrameworkCore.DbContext,System.Object,System.Threading.CancellationToken)">
            <summary>A DbContext extension method that will perform a single synchronize asynchronous.</summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="this">The @this to act on.</param>
            <param name="entity">The entity.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>A Task.</returns>
        </member>
        <member name="M:DbContextExtensions.SingleSynchronizeAsync``1(Microsoft.EntityFrameworkCore.DbContext,System.Object,System.Action{Z.BulkOperations.BulkOperation{``0}})">
            <summary>A DbContext extension method that will perform a single synchronize asynchronous.</summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="this">The @this to act on.</param>
            <param name="entity">The entity.</param>
            <param name="options">Options for controlling the operation.</param>
            <returns>A Task.</returns>
        </member>
        <member name="M:DbContextExtensions.SingleSynchronizeAsync``1(Microsoft.EntityFrameworkCore.DbContext,System.Object,System.Action{Z.BulkOperations.BulkOperation{``0}},System.Threading.CancellationToken)">
            <summary>A DbContext extension method that will perform a single synchronize asynchronous.</summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="this">The @this to act on.</param>
            <param name="entity">The entity.</param>
            <param name="options">Options for controlling the operation.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>A Task.</returns>
        </member>
        <member name="M:DbContextExtensions.SingleSynchronizeAsync(Microsoft.EntityFrameworkCore.DbContext,System.Type,System.Object)">
            <summary>A DbContext extension method that will perform a single synchronize asynchronous.</summary>
            <param name="this">The @this to act on.</param>
            <param name="type">The destination entity type.</param>
            <param name="entity">The entity.</param>
            <returns>A Task.</returns>
        </member>
        <member name="M:DbContextExtensions.SingleSynchronizeAsync(Microsoft.EntityFrameworkCore.DbContext,System.Type,System.Object,System.Threading.CancellationToken)">
            <summary>A DbContext extension method that will perform a single synchronize asynchronous.</summary>
            <param name="this">The @this to act on.</param>
            <param name="type">The destination entity type.</param>
            <param name="entity">The entity.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>A Task.</returns>
        </member>
        <member name="M:DbContextExtensions.SingleSynchronizeAsync(Microsoft.EntityFrameworkCore.DbContext,System.Type,System.Object,System.Action{Z.BulkOperations.BulkOperation})">
            <summary>A DbContext extension method that will perform a single synchronize asynchronous.</summary>
            <param name="this">The @this to act on.</param>
            <param name="type">The destination entity type.</param>
            <param name="entity">The entity.</param>
            <param name="options">Options for controlling the operation.</param>
            <returns>A Task.</returns>
        </member>
        <member name="M:DbContextExtensions.SingleSynchronizeAsync(Microsoft.EntityFrameworkCore.DbContext,System.Type,System.Object,System.Action{Z.BulkOperations.BulkOperation},System.Threading.CancellationToken)">
            <summary>A DbContext extension method that will perform a single synchronize asynchronous.</summary>
            <param name="this">The @this to act on.</param>
            <param name="type">The destination entity type.</param>
            <param name="entity">The entity.</param>
            <param name="options">Options for controlling the operation.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>A Task.</returns>
        </member>
        <member name="M:DbContextExtensions.SingleUpdate``1(Microsoft.EntityFrameworkCore.DbContext,System.Object)">
            <summary>A DbContext extension method that will perform a single update.</summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="this">The @this to act on.</param>
            <param name="entity">The entity.</param>
        </member>
        <member name="M:DbContextExtensions.SingleUpdate``1(Microsoft.EntityFrameworkCore.DbContext,System.Object,System.Action{Z.BulkOperations.BulkOperation{``0}})">
            <summary>A DbContext extension method that will perform a single update.</summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="this">The @this to act on.</param>
            <param name="entity">The entity.</param>
            <param name="options">Options for controlling the operation.</param>
        </member>
        <member name="M:DbContextExtensions.SingleUpdate(Microsoft.EntityFrameworkCore.DbContext,System.Type,System.Object)">
            <summary>A DbContext extension method that will perform a single update.</summary>
            <param name="this">The @this to act on.</param>
            <param name="type">The destination entity type.</param>
            <param name="entity">The entity.</param>
        </member>
        <member name="M:DbContextExtensions.SingleUpdate(Microsoft.EntityFrameworkCore.DbContext,System.Type,System.Object,System.Action{Z.BulkOperations.BulkOperation})">
            <summary>A DbContext extension method that will perform a single update.</summary>
            <param name="this">The @this to act on.</param>
            <param name="type">The destination entity type.</param>
            <param name="entity">The entity.</param>
            <param name="options">Options for controlling the operation.</param>
        </member>
        <member name="M:DbContextExtensions.SingleUpdateAsync``1(Microsoft.EntityFrameworkCore.DbContext,System.Object)">
            <summary>A DbContext extension method that will perform a single update asynchronous.</summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="this">The @this to act on.</param>
            <param name="entity">The entity.</param>
            <returns>A Task.</returns>
        </member>
        <member name="M:DbContextExtensions.SingleUpdateAsync``1(Microsoft.EntityFrameworkCore.DbContext,System.Object,System.Threading.CancellationToken)">
            <summary>A DbContext extension method that will perform a single update asynchronous.</summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="this">The @this to act on.</param>
            <param name="entity">The entity.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>A Task.</returns>
        </member>
        <member name="M:DbContextExtensions.SingleUpdateAsync``1(Microsoft.EntityFrameworkCore.DbContext,System.Object,System.Action{Z.BulkOperations.BulkOperation{``0}})">
            <summary>A DbContext extension method that will perform a single update asynchronous.</summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="this">The @this to act on.</param>
            <param name="entity">The entity.</param>
            <param name="options">Options for controlling the operation.</param>
            <returns>A Task.</returns>
        </member>
        <member name="M:DbContextExtensions.SingleUpdateAsync``1(Microsoft.EntityFrameworkCore.DbContext,System.Object,System.Action{Z.BulkOperations.BulkOperation{``0}},System.Threading.CancellationToken)">
            <summary>A DbContext extension method that will perform a single update asynchronous.</summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="this">The @this to act on.</param>
            <param name="entity">The entity.</param>
            <param name="options">Options for controlling the operation.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>A Task.</returns>
        </member>
        <member name="M:DbContextExtensions.SingleUpdateAsync(Microsoft.EntityFrameworkCore.DbContext,System.Type,System.Object)">
            <summary>A DbContext extension method that will perform a single update asynchronous.</summary>
            <param name="this">The @this to act on.</param>
            <param name="type">The destination entity type.</param>
            <param name="entity">The entity.</param>
            <returns>A Task.</returns>
        </member>
        <member name="M:DbContextExtensions.SingleUpdateAsync(Microsoft.EntityFrameworkCore.DbContext,System.Type,System.Object,System.Threading.CancellationToken)">
            <summary>A DbContext extension method that will perform a single update asynchronous.</summary>
            <param name="this">The @this to act on.</param>
            <param name="type">The destination entity type.</param>
            <param name="entity">The entity.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>A Task.</returns>
        </member>
        <member name="M:DbContextExtensions.SingleUpdateAsync(Microsoft.EntityFrameworkCore.DbContext,System.Type,System.Object,System.Action{Z.BulkOperations.BulkOperation})">
            <summary>A DbContext extension method that will perform a single update asynchronous.</summary>
            <param name="this">The @this to act on.</param>
            <param name="type">The destination entity type.</param>
            <param name="entity">The entity.</param>
            <param name="options">Options for controlling the operation.</param>
            <returns>A Task.</returns>
        </member>
        <member name="M:DbContextExtensions.SingleUpdateAsync(Microsoft.EntityFrameworkCore.DbContext,System.Type,System.Object,System.Action{Z.BulkOperations.BulkOperation},System.Threading.CancellationToken)">
            <summary>A DbContext extension method that will perform a single update asynchronous.</summary>
            <param name="this">The @this to act on.</param>
            <param name="type">The destination entity type.</param>
            <param name="entity">The entity.</param>
            <param name="options">Options for controlling the operation.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>A Task.</returns>
        </member>
        <member name="M:DbContextExtensions.BulkDelete``1(Microsoft.EntityFrameworkCore.DbContext,System.Collections.Generic.IEnumerable{``0})">
            <summary>A DbContext extension method that bulk delete.</summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="this">The @this to act on.</param>
            <param name="entities">The entities.</param>
        </member>
        <member name="M:DbContextExtensions.BulkDelete``1(Microsoft.EntityFrameworkCore.DbContext,System.Collections.Generic.IEnumerable{``0},System.Action{Z.BulkOperations.BulkOperation{``0}})">
            <summary>A DbContext extension method that bulk delete.</summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="this">The @this to act on.</param>
            <param name="entities">The entities.</param>
            <param name="options">Options for controlling the operation.</param>
        </member>
        <member name="M:DbContextExtensions.BulkDeleteAsync``1(Microsoft.EntityFrameworkCore.DbContext,System.Collections.Generic.IEnumerable{``0})">
            <summary>A DbContext extension method that bulk delete asynchronous.</summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="this">The @this to act on.</param>
            <param name="entities">The entities.</param>
            <returns>The asynchronous result.</returns>
        </member>
        <member name="M:DbContextExtensions.BulkDeleteAsync``1(Microsoft.EntityFrameworkCore.DbContext,System.Collections.Generic.IEnumerable{``0},System.Threading.CancellationToken)">
            <summary>A DbContext extension method that bulk delete asynchronous.</summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="this">The @this to act on.</param>
            <param name="entities">The entities.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>The asynchronous result.</returns>
        </member>
        <member name="M:DbContextExtensions.BulkDeleteAsync``1(Microsoft.EntityFrameworkCore.DbContext,System.Collections.Generic.IEnumerable{``0},System.Action{Z.BulkOperations.BulkOperation{``0}})">
            <summary>A DbContext extension method that bulk delete asynchronous.</summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="this">The @this to act on.</param>
            <param name="entities">The entities.</param>
            <param name="options">Options for controlling the operation.</param>
            <returns>The asynchronous result.</returns>
        </member>
        <member name="M:DbContextExtensions.BulkDeleteAsync``1(Microsoft.EntityFrameworkCore.DbContext,System.Collections.Generic.IEnumerable{``0},System.Action{Z.BulkOperations.BulkOperation{``0}},System.Threading.CancellationToken)">
            <summary>A DbContext extension method that bulk delete asynchronous.</summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="this">The @this to act on.</param>
            <param name="entities">The entities.</param>
            <param name="options">Options for controlling the operation.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>The asynchronous result.</returns>
        </member>
        <member name="M:DbContextExtensions.BulkInsert``1(Microsoft.EntityFrameworkCore.DbContext,System.Collections.Generic.IEnumerable{``0})">
            <summary>A DbContext extension method that bulk insert.</summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="this">The @this to act on.</param>
            <param name="entities">The entities.</param>
        </member>
        <member name="M:DbContextExtensions.BulkInsert``1(Microsoft.EntityFrameworkCore.DbContext,System.Collections.Generic.IEnumerable{``0},System.Action{Z.BulkOperations.BulkOperation{``0}})">
            <summary>A DbContext extension method that bulk insert.</summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="this">The @this to act on.</param>
            <param name="entities">The entities.</param>
            <param name="options">Options for controlling the operation.</param>
        </member>
        <member name="M:DbContextExtensions.BulkInsertAsync``1(Microsoft.EntityFrameworkCore.DbContext,System.Collections.Generic.IEnumerable{``0})">
            <summary>A DbContext extension method that bulk insert asynchronous.</summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="this">The @this to act on.</param>
            <param name="entities">The entities.</param>
            <returns>The asynchronous result.</returns>
        </member>
        <member name="M:DbContextExtensions.BulkInsertAsync``1(Microsoft.EntityFrameworkCore.DbContext,System.Collections.Generic.IEnumerable{``0},System.Threading.CancellationToken)">
            <summary>A DbContext extension method that bulk insert asynchronous.</summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="this">The @this to act on.</param>
            <param name="entities">The entities.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>The asynchronous result.</returns>
        </member>
        <member name="M:DbContextExtensions.BulkInsertAsync``1(Microsoft.EntityFrameworkCore.DbContext,System.Collections.Generic.IEnumerable{``0},System.Action{Z.BulkOperations.BulkOperation{``0}})">
            <summary>A DbContext extension method that bulk insert asynchronous.</summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="this">The @this to act on.</param>
            <param name="entities">The entities.</param>
            <param name="options">Options for controlling the operation.</param>
            <returns>The asynchronous result.</returns>
        </member>
        <member name="M:DbContextExtensions.BulkInsertAsync``1(Microsoft.EntityFrameworkCore.DbContext,System.Collections.Generic.IEnumerable{``0},System.Action{Z.BulkOperations.BulkOperation{``0}},System.Threading.CancellationToken)">
            <summary>A DbContext extension method that bulk insert asynchronous.</summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="this">The @this to act on.</param>
            <param name="entities">The entities.</param>
            <param name="options">Options for controlling the operation.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>The asynchronous result.</returns>
        </member>
        <member name="M:DbContextExtensions.BulkMerge``1(Microsoft.EntityFrameworkCore.DbContext,System.Collections.Generic.IEnumerable{``0})">
            <summary>A DbContext extension method that bulk merge.</summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="this">The @this to act on.</param>
            <param name="entities">The entities.</param>
        </member>
        <member name="M:DbContextExtensions.BulkMerge``1(Microsoft.EntityFrameworkCore.DbContext,System.Collections.Generic.IEnumerable{``0},System.Action{Z.BulkOperations.BulkOperation{``0}})">
            <summary>A DbContext extension method that bulk merge.</summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="this">The @this to act on.</param>
            <param name="entities">The entities.</param>
            <param name="options">Options for controlling the operation.</param>
        </member>
        <member name="M:DbContextExtensions.BulkMergeAsync``1(Microsoft.EntityFrameworkCore.DbContext,System.Collections.Generic.IEnumerable{``0})">
            <summary>A DbContext extension method that bulk merge asynchronous.</summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="this">The @this to act on.</param>
            <param name="entities">The entities.</param>
            <returns>The asynchronous result.</returns>
        </member>
        <member name="M:DbContextExtensions.BulkMergeAsync``1(Microsoft.EntityFrameworkCore.DbContext,System.Collections.Generic.IEnumerable{``0},System.Threading.CancellationToken)">
            <summary>A DbContext extension method that bulk merge asynchronous.</summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="this">The @this to act on.</param>
            <param name="entities">The entities.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>The asynchronous result.</returns>
        </member>
        <member name="M:DbContextExtensions.BulkMergeAsync``1(Microsoft.EntityFrameworkCore.DbContext,System.Collections.Generic.IEnumerable{``0},System.Action{Z.BulkOperations.BulkOperation{``0}})">
            <summary>A DbContext extension method that bulk merge asynchronous.</summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="this">The @this to act on.</param>
            <param name="entities">The entities.</param>
            <param name="options">Options for controlling the operation.</param>
            <returns>The asynchronous result.</returns>
        </member>
        <member name="M:DbContextExtensions.BulkMergeAsync``1(Microsoft.EntityFrameworkCore.DbContext,System.Collections.Generic.IEnumerable{``0},System.Action{Z.BulkOperations.BulkOperation{``0}},System.Threading.CancellationToken)">
            <summary>A DbContext extension method that bulk merge asynchronous.</summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="this">The @this to act on.</param>
            <param name="entities">The entities.</param>
            <param name="options">Options for controlling the operation.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>The asynchronous result.</returns>
        </member>
        <member name="M:DbContextExtensions.BulkSynchronize``1(Microsoft.EntityFrameworkCore.DbContext,System.Collections.Generic.IEnumerable{``0})">
            <summary>A DbContext extension method that bulk synchronize.</summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="this">The @this to act on.</param>
            <param name="entities">The entities.</param>
        </member>
        <member name="M:DbContextExtensions.BulkSynchronize``1(Microsoft.EntityFrameworkCore.DbContext,System.Collections.Generic.IEnumerable{``0},System.Action{Z.BulkOperations.BulkOperation{``0}})">
            <summary>A DbContext extension method that bulk synchronize.</summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="this">The @this to act on.</param>
            <param name="entities">The entities.</param>
            <param name="options">Options for controlling the operation.</param>
        </member>
        <member name="M:DbContextExtensions.BulkSynchronizeAsync``1(Microsoft.EntityFrameworkCore.DbContext,System.Collections.Generic.IEnumerable{``0})">
            <summary>A DbContext extension method that bulk synchronize asynchronous.</summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="this">The @this to act on.</param>
            <param name="entities">The entities.</param>
            <returns>The asynchronous result.</returns>
        </member>
        <member name="M:DbContextExtensions.BulkSynchronizeAsync``1(Microsoft.EntityFrameworkCore.DbContext,System.Collections.Generic.IEnumerable{``0},System.Threading.CancellationToken)">
            <summary>A DbContext extension method that bulk synchronize asynchronous.</summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="this">The @this to act on.</param>
            <param name="entities">The entities.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>The asynchronous result.</returns>
        </member>
        <member name="M:DbContextExtensions.BulkSynchronizeAsync``1(Microsoft.EntityFrameworkCore.DbContext,System.Collections.Generic.IEnumerable{``0},System.Action{Z.BulkOperations.BulkOperation{``0}})">
            <summary>A DbContext extension method that bulk synchronize asynchronous.</summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="this">The @this to act on.</param>
            <param name="entities">The entities.</param>
            <param name="options">Options for controlling the operation.</param>
            <returns>The asynchronous result.</returns>
        </member>
        <member name="M:DbContextExtensions.BulkSynchronizeAsync``1(Microsoft.EntityFrameworkCore.DbContext,System.Collections.Generic.IEnumerable{``0},System.Action{Z.BulkOperations.BulkOperation{``0}},System.Threading.CancellationToken)">
            <summary>A DbContext extension method that bulk synchronize asynchronous.</summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="this">The @this to act on.</param>
            <param name="entities">The entities.</param>
            <param name="options">Options for controlling the operation.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>The asynchronous result.</returns>
        </member>
        <member name="M:DbContextExtensions.BulkUpdate``1(Microsoft.EntityFrameworkCore.DbContext,System.Collections.Generic.IEnumerable{``0})">
            <summary>A DbContext extension method that bulk update.</summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="this">The @this to act on.</param>
            <param name="entities">The entities.</param>
        </member>
        <member name="M:DbContextExtensions.BulkUpdate``1(Microsoft.EntityFrameworkCore.DbContext,System.Collections.Generic.IEnumerable{``0},System.Action{Z.BulkOperations.BulkOperation{``0}})">
            <summary>A DbContext extension method that bulk update.</summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="this">The @this to act on.</param>
            <param name="entities">The entities.</param>
            <param name="options">Options for controlling the operation.</param>
        </member>
        <member name="M:DbContextExtensions.BulkUpdateAsync``1(Microsoft.EntityFrameworkCore.DbContext,System.Collections.Generic.IEnumerable{``0})">
            <summary>A DbContext extension method that bulk update asynchronous.</summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="this">The @this to act on.</param>
            <param name="entities">The entities.</param>
            <returns>The asynchronous result.</returns>
        </member>
        <member name="M:DbContextExtensions.BulkUpdateAsync``1(Microsoft.EntityFrameworkCore.DbContext,System.Collections.Generic.IEnumerable{``0},System.Threading.CancellationToken)">
            <summary>A DbContext extension method that bulk update asynchronous.</summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="this">The @this to act on.</param>
            <param name="entities">The entities.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>The asynchronous result.</returns>
        </member>
        <member name="M:DbContextExtensions.BulkUpdateAsync``1(Microsoft.EntityFrameworkCore.DbContext,System.Collections.Generic.IEnumerable{``0},System.Action{Z.BulkOperations.BulkOperation{``0}})">
            <summary>A DbContext extension method that bulk update asynchronous.</summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="this">The @this to act on.</param>
            <param name="entities">The entities.</param>
            <param name="options">Options for controlling the operation.</param>
            <returns>The asynchronous result.</returns>
        </member>
        <member name="M:DbContextExtensions.BulkUpdateAsync``1(Microsoft.EntityFrameworkCore.DbContext,System.Collections.Generic.IEnumerable{``0},System.Action{Z.BulkOperations.BulkOperation{``0}},System.Threading.CancellationToken)">
            <summary>A DbContext extension method that bulk update asynchronous.</summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="this">The @this to act on.</param>
            <param name="entities">The entities.</param>
            <param name="options">Options for controlling the operation.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>The asynchronous result.</returns>
        </member>
        <member name="M:DbContextExtensions.SingleDelete``1(Microsoft.EntityFrameworkCore.DbContext,``0)">
            <summary>A DbContext extension method that will perform a single delete.</summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="this">The @this to act on.</param>
            <param name="entity">The entity.</param>
        </member>
        <member name="M:DbContextExtensions.SingleDelete``1(Microsoft.EntityFrameworkCore.DbContext,``0,System.Action{Z.BulkOperations.BulkOperation{``0}})">
            <summary>A DbContext extension method that will perform a single delete.</summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="this">The @this to act on.</param>
            <param name="entity">The entity.</param>
            <param name="options">Options for controlling the operation.</param>
        </member>
        <member name="M:DbContextExtensions.SingleDeleteAsync``1(Microsoft.EntityFrameworkCore.DbContext,``0)">
            <summary>A DbContext extension method that will perform a single delete asynchronous.</summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="this">The @this to act on.</param>
            <param name="entity">The entity.</param>
            <returns>A Task.</returns>
        </member>
        <member name="M:DbContextExtensions.SingleDeleteAsync``1(Microsoft.EntityFrameworkCore.DbContext,``0,System.Threading.CancellationToken)">
            <summary>A DbContext extension method that will perform a single delete asynchronous.</summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="this">The @this to act on.</param>
            <param name="entity">The entity.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>A Task.</returns>
        </member>
        <member name="M:DbContextExtensions.SingleDeleteAsync``1(Microsoft.EntityFrameworkCore.DbContext,``0,System.Action{Z.BulkOperations.BulkOperation{``0}})">
            <summary>A DbContext extension method that will perform a single delete asynchronous.</summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="this">The @this to act on.</param>
            <param name="entity">The entity.</param>
            <param name="options">Options for controlling the operation.</param>
            <returns>A Task.</returns>
        </member>
        <member name="M:DbContextExtensions.SingleDeleteAsync``1(Microsoft.EntityFrameworkCore.DbContext,``0,System.Action{Z.BulkOperations.BulkOperation{``0}},System.Threading.CancellationToken)">
            <summary>A DbContext extension method that will perform a single delete asynchronous.</summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="this">The @this to act on.</param>
            <param name="entity">The entity.</param>
            <param name="options">Options for controlling the operation.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>A Task.</returns>
        </member>
        <member name="M:DbContextExtensions.SingleInsert``1(Microsoft.EntityFrameworkCore.DbContext,``0)">
            <summary>A DbContext extension method that will perform a single insert.</summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="this">The @this to act on.</param>
            <param name="entity">The entity.</param>
        </member>
        <member name="M:DbContextExtensions.SingleInsert``1(Microsoft.EntityFrameworkCore.DbContext,``0,System.Action{Z.BulkOperations.BulkOperation{``0}})">
            <summary>A DbContext extension method that will perform a single insert.</summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="this">The @this to act on.</param>
            <param name="entity">The entity.</param>
            <param name="options">Options for controlling the operation.</param>
        </member>
        <member name="M:DbContextExtensions.SingleInsertAsync``1(Microsoft.EntityFrameworkCore.DbContext,``0)">
            <summary>A DbContext extension method that will perform a single insert asynchronous.</summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="this">The @this to act on.</param>
            <param name="entity">The entity.</param>
            <returns>A Task.</returns>
        </member>
        <member name="M:DbContextExtensions.SingleInsertAsync``1(Microsoft.EntityFrameworkCore.DbContext,``0,System.Threading.CancellationToken)">
            <summary>A DbContext extension method that will perform a single insert asynchronous.</summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="this">The @this to act on.</param>
            <param name="entity">The entity.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>A Task.</returns>
        </member>
        <member name="M:DbContextExtensions.SingleInsertAsync``1(Microsoft.EntityFrameworkCore.DbContext,``0,System.Action{Z.BulkOperations.BulkOperation{``0}})">
            <summary>A DbContext extension method that will perform a single insert asynchronous.</summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="this">The @this to act on.</param>
            <param name="entity">The entity.</param>
            <param name="options">Options for controlling the operation.</param>
            <returns>A Task.</returns>
        </member>
        <member name="M:DbContextExtensions.SingleInsertAsync``1(Microsoft.EntityFrameworkCore.DbContext,``0,System.Action{Z.BulkOperations.BulkOperation{``0}},System.Threading.CancellationToken)">
            <summary>A DbContext extension method that will perform a single insert asynchronous.</summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="this">The @this to act on.</param>
            <param name="entity">The entity.</param>
            <param name="options">Options for controlling the operation.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>A Task.</returns>
        </member>
        <member name="M:DbContextExtensions.SingleMerge``1(Microsoft.EntityFrameworkCore.DbContext,``0)">
            <summary>A DbContext extension method that will perform a single merge.</summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="this">The @this to act on.</param>
            <param name="entity">The entity.</param>
        </member>
        <member name="M:DbContextExtensions.SingleMerge``1(Microsoft.EntityFrameworkCore.DbContext,``0,System.Action{Z.BulkOperations.BulkOperation{``0}})">
            <summary>A DbContext extension method that will perform a single merge.</summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="this">The @this to act on.</param>
            <param name="entity">The entity.</param>
            <param name="options">Options for controlling the operation.</param>
        </member>
        <member name="M:DbContextExtensions.SingleMergeAsync``1(Microsoft.EntityFrameworkCore.DbContext,``0)">
            <summary>A DbContext extension method that will perform a single merge asynchronous.</summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="this">The @this to act on.</param>
            <param name="entity">The entity.</param>
            <returns>A Task.</returns>
        </member>
        <member name="M:DbContextExtensions.SingleMergeAsync``1(Microsoft.EntityFrameworkCore.DbContext,``0,System.Threading.CancellationToken)">
            <summary>A DbContext extension method that will perform a single merge asynchronous.</summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="this">The @this to act on.</param>
            <param name="entity">The entity.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>A Task.</returns>
        </member>
        <member name="M:DbContextExtensions.SingleMergeAsync``1(Microsoft.EntityFrameworkCore.DbContext,``0,System.Action{Z.BulkOperations.BulkOperation{``0}})">
            <summary>A DbContext extension method that will perform a single merge asynchronous.</summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="this">The @this to act on.</param>
            <param name="entity">The entity.</param>
            <param name="options">Options for controlling the operation.</param>
            <returns>A Task.</returns>
        </member>
        <member name="M:DbContextExtensions.SingleMergeAsync``1(Microsoft.EntityFrameworkCore.DbContext,``0,System.Action{Z.BulkOperations.BulkOperation{``0}},System.Threading.CancellationToken)">
            <summary>A DbContext extension method that will perform a single merge asynchronous.</summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="this">The @this to act on.</param>
            <param name="entity">The entity.</param>
            <param name="options">Options for controlling the operation.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>A Task.</returns>
        </member>
        <member name="M:DbContextExtensions.SingleSynchronize``1(Microsoft.EntityFrameworkCore.DbContext,``0)">
            <summary>A DbContext extension method that will perform a single synchronize.</summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="this">The @this to act on.</param>
            <param name="entity">The entity.</param>
        </member>
        <member name="M:DbContextExtensions.SingleSynchronize``1(Microsoft.EntityFrameworkCore.DbContext,``0,System.Action{Z.BulkOperations.BulkOperation{``0}})">
            <summary>A DbContext extension method that will perform a single synchronize.</summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="this">The @this to act on.</param>
            <param name="entity">The entity.</param>
            <param name="options">Options for controlling the operation.</param>
        </member>
        <member name="M:DbContextExtensions.SingleSynchronizeAsync``1(Microsoft.EntityFrameworkCore.DbContext,``0)">
            <summary>A DbContext extension method that will perform a single synchronize asynchronous.</summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="this">The @this to act on.</param>
            <param name="entity">The entity.</param>
            <returns>A Task.</returns>
        </member>
        <member name="M:DbContextExtensions.SingleSynchronizeAsync``1(Microsoft.EntityFrameworkCore.DbContext,``0,System.Threading.CancellationToken)">
            <summary>A DbContext extension method that will perform a single synchronize asynchronous.</summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="this">The @this to act on.</param>
            <param name="entity">The entity.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>A Task.</returns>
        </member>
        <member name="M:DbContextExtensions.SingleSynchronizeAsync``1(Microsoft.EntityFrameworkCore.DbContext,``0,System.Action{Z.BulkOperations.BulkOperation{``0}})">
            <summary>A DbContext extension method that will perform a single synchronize asynchronous.</summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="this">The @this to act on.</param>
            <param name="entity">The entity.</param>
            <param name="options">Options for controlling the operation.</param>
            <returns>A Task.</returns>
        </member>
        <member name="M:DbContextExtensions.SingleSynchronizeAsync``1(Microsoft.EntityFrameworkCore.DbContext,``0,System.Action{Z.BulkOperations.BulkOperation{``0}},System.Threading.CancellationToken)">
            <summary>A DbContext extension method that will perform a single synchronize asynchronous.</summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="this">The @this to act on.</param>
            <param name="entity">The entity.</param>
            <param name="options">Options for controlling the operation.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>A Task.</returns>
        </member>
        <member name="M:DbContextExtensions.SingleUpdate``1(Microsoft.EntityFrameworkCore.DbContext,``0)">
            <summary>A DbContext extension method that will perform a single update.</summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="this">The @this to act on.</param>
            <param name="entity">The entity.</param>
        </member>
        <member name="M:DbContextExtensions.SingleUpdate``1(Microsoft.EntityFrameworkCore.DbContext,``0,System.Action{Z.BulkOperations.BulkOperation{``0}})">
            <summary>A DbContext extension method that will perform a single update.</summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="this">The @this to act on.</param>
            <param name="entity">The entity.</param>
            <param name="options">Options for controlling the operation.</param>
        </member>
        <member name="M:DbContextExtensions.SingleUpdateAsync``1(Microsoft.EntityFrameworkCore.DbContext,``0)">
            <summary>A DbContext extension method that will perform a single update asynchronous.</summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="this">The @this to act on.</param>
            <param name="entity">The entity.</param>
            <returns>A Task.</returns>
        </member>
        <member name="M:DbContextExtensions.SingleUpdateAsync``1(Microsoft.EntityFrameworkCore.DbContext,``0,System.Threading.CancellationToken)">
            <summary>A DbContext extension method that will perform a single update asynchronous.</summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="this">The @this to act on.</param>
            <param name="entity">The entity.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>A Task.</returns>
        </member>
        <member name="M:DbContextExtensions.SingleUpdateAsync``1(Microsoft.EntityFrameworkCore.DbContext,``0,System.Action{Z.BulkOperations.BulkOperation{``0}})">
            <summary>A DbContext extension method that will perform a single update asynchronous.</summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="this">The @this to act on.</param>
            <param name="entity">The entity.</param>
            <param name="options">Options for controlling the operation.</param>
            <returns>A Task.</returns>
        </member>
        <member name="M:DbContextExtensions.SingleUpdateAsync``1(Microsoft.EntityFrameworkCore.DbContext,``0,System.Action{Z.BulkOperations.BulkOperation{``0}},System.Threading.CancellationToken)">
            <summary>A DbContext extension method that will perform a single update asynchronous.</summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="this">The @this to act on.</param>
            <param name="entity">The entity.</param>
            <param name="options">Options for controlling the operation.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>A Task.</returns>
        </member>
        <member name="M:DbContextExtensions.BulkSaveChanges(Microsoft.EntityFrameworkCore.DbContext)">
            <summary>A DbContext extension method that bulk save changes.</summary>
            <param name="this">The @this to act on.</param>
        </member>
        <member name="M:DbContextExtensions.BulkSaveChanges(Microsoft.EntityFrameworkCore.DbContext,System.Action{Z.BulkOperations.BulkOperation})">
            <summary>A DbContext extension method that bulk save changes.</summary>
            <param name="this">The @this to act on.</param>
            <param name="options">Options for controlling the operation.</param>
        </member>
        <member name="M:DbContextExtensions.BulkSaveChangesAsync(Microsoft.EntityFrameworkCore.DbContext)">
            <summary>A DbContext extension method that bulk save changes asynchronous.</summary>
            <param name="this">The @this to act on.</param>
            <returns>The asynchronous result.</returns>
        </member>
        <member name="M:DbContextExtensions.BulkSaveChangesAsync(Microsoft.EntityFrameworkCore.DbContext,System.Threading.CancellationToken)">
            <summary>A DbContext extension method that bulk save changes asynchronous.</summary>
            <param name="this">The @this to act on.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>The asynchronous result.</returns>
        </member>
        <member name="M:DbContextExtensions.BulkSaveChangesAsync(Microsoft.EntityFrameworkCore.DbContext,System.Action{Z.BulkOperations.BulkOperation})">
            <summary>A DbContext extension method that bulk save changes asynchronous.</summary>
            <param name="this">The @this to act on.</param>
            <param name="options">Options for controlling the operation.</param>
            <returns>The asynchronous result.</returns>
        </member>
        <member name="M:DbContextExtensions.BulkSaveChangesAsync(Microsoft.EntityFrameworkCore.DbContext,System.Action{Z.BulkOperations.BulkOperation},System.Threading.CancellationToken)">
            <summary>A DbContext extension method that bulk save changes asynchronous.</summary>
            <param name="this">The @this to act on.</param>
            <param name="options">Options for controlling the operation.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>The asynchronous result.</returns>
        </member>
        <member name="M:DbContextExtensions.InsertFromQuery``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Object}})">
            <summary>An IQueryable&lt;TEntity&gt; extension method that updates from query.</summary>
            <typeparam name="TEntity">Type of the entity.</typeparam>
            <param name="query">The query to act on.</param>
            <param name="updateExpression">The update expression.</param>
            <returns>The number of row affected.</returns>
        </member>
        <member name="M:DbContextExtensions.InsertFromQuery``1(System.Linq.IQueryable{``0},System.String,System.Linq.Expressions.Expression{System.Func{``0,System.Object}})">
            <summary>An IQueryable&lt;TEntity&gt; extension method that updates from query.</summary>
            <typeparam name="TEntity">Type of the entity.</typeparam>
            <param name="query">The query to act on.</param>
            <param name="tableName">The destination table name.</param>
            <param name="selectFieldsExpression">The select fields expression.</param>
            <returns>The number of row affected.</returns>
        </member>
        <member name="M:DbContextExtensions.InsertFromQuery``1(System.Linq.IQueryable{``0},System.Type,System.Linq.Expressions.Expression{System.Func{``0,System.Object}})">
            <summary>An IQueryable&lt;TEntity&gt; extension method that updates from query.</summary>
            <typeparam name="TEntity">Type of the entity.</typeparam>
            <param name="query">The query to act on.</param>
            <param name="tableType">The type from which the destination table name will be taken.</param>
            <param name="selectFieldsExpression">The select fields expression.</param>
            <returns>The number of row affected.</returns>
        </member>
        <member name="M:DbContextExtensions.InsertFromQuery``1(System.Linq.IQueryable{``0},System.String,System.String,System.Linq.Expressions.Expression{System.Func{``0,System.Object}})">
            <summary>An IQueryable&lt;TEntity&gt; extension method that updates from query.</summary>
            <typeparam name="TEntity">Type of the entity.</typeparam>
            <param name="query">The query to act on.</param>
            <param name="schemaName">The destination schema name.</param>
            <param name="tableName">The destination table name.</param>
            <param name="selectFieldsExpression">The select fields expression.</param>
            <returns>The number of row affected.</returns>
        </member>
        <member name="M:DbContextExtensions.InsertFromQuery``1(System.Linq.IQueryable{``0},System.String,System.Type,System.Linq.Expressions.Expression{System.Func{``0,System.Object}})">
            <summary>An IQueryable&lt;TEntity&gt; extension method that updates from query.</summary>
            <typeparam name="TEntity">Type of the entity.</typeparam>
            <param name="query">The query to act on.</param>
            <param name="schemaName">The destination schema name.</param>
            <param name="tableType">The type from which the destination table name will be taken.</param>
            <param name="selectFieldsExpression">The select fields expression.</param>
            <returns>The number of row affected.</returns>
        </member>
        <member name="M:DbContextExtensions.InsertFromQuery``1(System.Linq.IQueryable{``0},System.String,System.String,System.String,System.Linq.Expressions.Expression{System.Func{``0,System.Object}})">
            <summary>An IQueryable&lt;TEntity&gt; extension method that updates from query.</summary>
            <typeparam name="TEntity">Type of the entity.</typeparam>
            <param name="query">The query to act on.</param>
            <param name="databaseName">The destination database name.</param>
            <param name="schemaName">The destination schema name.</param>
            <param name="tableName">The destination table name.</param>
            <param name="selectFieldsExpression">The select fields expression.</param>
            <returns>The number of row affected.</returns>
        </member>
        <member name="M:DbContextExtensions.InsertFromQuery``1(System.Linq.IQueryable{``0},System.String,System.String,System.Type,System.Linq.Expressions.Expression{System.Func{``0,System.Object}})">
            <summary>An IQueryable&lt;TEntity&gt; extension method that updates from query.</summary>
            <typeparam name="TEntity">Type of the entity.</typeparam>
            <param name="query">The query to act on.</param>
            <param name="databaseName">The destination database name.</param>
            <param name="schemaName">The destination schema name.</param>
            <param name="tableType">The type from which the destination table name will be taken.</param>
            <param name="selectFieldsExpression">The select fields expression.</param>
            <returns>The number of row affected.</returns>
        </member>
        <member name="M:DbContextExtensions.ExecuteFutureAction``1(``0)">
            <summary>A T extension method that executes the future action.</summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="this">The @this to act on.</param>
        </member>
        <member name="M:DbContextExtensions.FutureAction``1(``0,System.Action{``0})">
            <summary>A T extension method that future action.</summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="this">The @this to act on.</param>
            <param name="action">The action.</param>
        </member>
        <member name="M:DbSetExtensions.BulkDelete``1(Microsoft.EntityFrameworkCore.DbSet{``0},System.Collections.Generic.IEnumerable{``0})">
            <summary>A DbSet extension method that bulk delete.</summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="this">The @this to act on.</param>
            <param name="entities">The entities.</param>
        </member>
        <member name="M:DbSetExtensions.BulkDelete``1(Microsoft.EntityFrameworkCore.DbSet{``0},System.Collections.Generic.IEnumerable{``0},System.Action{Z.BulkOperations.BulkOperation{``0}})">
            <summary>A DbSet extension method that bulk delete.</summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="this">The @this to act on.</param>
            <param name="entities">The entities.</param>
            <param name="options">Options for controlling the operation.</param>
        </member>
        <member name="M:DbSetExtensions.BulkDeleteAsync``1(Microsoft.EntityFrameworkCore.DbSet{``0},System.Collections.Generic.IEnumerable{``0},System.Action{Z.BulkOperations.BulkOperation{``0}})">
            <summary>A DbSet extension method that bulk delete asynchronous.</summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="this">The @this to act on.</param>
            <param name="entities">The entities.</param>
            <param name="options">The bulk operation factory.</param>
            <returns>A Task.</returns>
        </member>
        <member name="M:DbSetExtensions.BulkDeleteAsync``1(Microsoft.EntityFrameworkCore.DbSet{``0},System.Collections.Generic.IEnumerable{``0},System.Action{Z.BulkOperations.BulkOperation{``0}},System.Threading.CancellationToken)">
            <summary>A DbSet extension method that bulk delete asynchronous.</summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="this">The @this to act on.</param>
            <param name="entities">The entities.</param>
            <param name="options">The bulk operation factory.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>A Task.</returns>
        </member>
        <member name="M:DbSetExtensions.BulkDeleteAsync``1(Microsoft.EntityFrameworkCore.DbSet{``0},System.Collections.Generic.IEnumerable{``0})">
            <summary>A DbSet extension method that bulk delete asynchronous.</summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="this">The @this to act on.</param>
            <param name="entities">The entities.</param>
            <returns>A Task.</returns>
        </member>
        <member name="M:DbSetExtensions.BulkDeleteAsync``1(Microsoft.EntityFrameworkCore.DbSet{``0},System.Collections.Generic.IEnumerable{``0},System.Threading.CancellationToken)">
            <summary>A DbSet extension method that bulk delete asynchronous.</summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="this">The @this to act on.</param>
            <param name="entities">The entities.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>A Task.</returns>
        </member>
        <member name="M:DbSetExtensions.BulkInsert``1(Microsoft.EntityFrameworkCore.DbSet{``0},System.Collections.Generic.IEnumerable{``0})">
            <summary>A DbSet extension method that bulk insert.</summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="this">The @this to act on.</param>
            <param name="entities">The entities.</param>
        </member>
        <member name="M:DbSetExtensions.BulkInsert``1(Microsoft.EntityFrameworkCore.DbSet{``0},System.Collections.Generic.IEnumerable{``0},System.Action{Z.BulkOperations.BulkOperation{``0}})">
            <summary>A DbSet extension method that bulk insert.</summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="this">The @this to act on.</param>
            <param name="entities">The entities.</param>
            <param name="options">Options for controlling the operation.</param>
        </member>
        <member name="M:DbSetExtensions.BulkInsertAsync``1(Microsoft.EntityFrameworkCore.DbSet{``0},System.Collections.Generic.IEnumerable{``0},System.Action{Z.BulkOperations.BulkOperation{``0}})">
            <summary>A DbSet extension method that bulk insert asynchronous.</summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="this">The @this to act on.</param>
            <param name="entities">The entities.</param>
            <param name="options">The bulk operation factory.</param>
            <returns>A Task.</returns>
        </member>
        <member name="M:DbSetExtensions.BulkInsertAsync``1(Microsoft.EntityFrameworkCore.DbSet{``0},System.Collections.Generic.IEnumerable{``0},System.Action{Z.BulkOperations.BulkOperation{``0}},System.Threading.CancellationToken)">
            <summary>A DbSet extension method that bulk insert asynchronous.</summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="this">The @this to act on.</param>
            <param name="entities">The entities.</param>
            <param name="options">The bulk operation factory.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>A Task.</returns>
        </member>
        <member name="M:DbSetExtensions.BulkInsertAsync``1(Microsoft.EntityFrameworkCore.DbSet{``0},System.Collections.Generic.IEnumerable{``0})">
            <summary>A DbSet extension method that bulk insert asynchronous.</summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="this">The @this to act on.</param>
            <param name="entities">The entities.</param>
            <returns>A Task.</returns>
        </member>
        <member name="M:DbSetExtensions.BulkInsertAsync``1(Microsoft.EntityFrameworkCore.DbSet{``0},System.Collections.Generic.IEnumerable{``0},System.Threading.CancellationToken)">
            <summary>A DbSet extension method that bulk insert asynchronous.</summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="this">The @this to act on.</param>
            <param name="entities">The entities.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>A Task.</returns>
        </member>
        <member name="M:DbSetExtensions.BulkMerge``1(Microsoft.EntityFrameworkCore.DbSet{``0},System.Collections.Generic.IEnumerable{``0})">
            <summary>A DbSet extension method that bulk merge.</summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="this">The @this to act on.</param>
            <param name="entities">The entities.</param>
        </member>
        <member name="M:DbSetExtensions.BulkMerge``1(Microsoft.EntityFrameworkCore.DbSet{``0},System.Collections.Generic.IEnumerable{``0},System.Action{Z.BulkOperations.BulkOperation{``0}})">
            <summary>A DbSet extension method that bulk merge.</summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="this">The @this to act on.</param>
            <param name="entities">The entities.</param>
            <param name="options">Options for controlling the operation.</param>
        </member>
        <member name="M:DbSetExtensions.BulkMergeAsync``1(Microsoft.EntityFrameworkCore.DbSet{``0},System.Collections.Generic.IEnumerable{``0},System.Action{Z.BulkOperations.BulkOperation{``0}})">
            <summary>A DbSet extension method that bulk merge asynchronous.</summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="this">The @this to act on.</param>
            <param name="entities">The entities.</param>
            <param name="options">The bulk operation factory.</param>
            <returns>A Task.</returns>
        </member>
        <member name="M:DbSetExtensions.BulkMergeAsync``1(Microsoft.EntityFrameworkCore.DbSet{``0},System.Collections.Generic.IEnumerable{``0},System.Action{Z.BulkOperations.BulkOperation{``0}},System.Threading.CancellationToken)">
            <summary>A DbSet extension method that bulk merge asynchronous.</summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="this">The @this to act on.</param>
            <param name="entities">The entities.</param>
            <param name="options">The bulk operation factory.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>A Task.</returns>
        </member>
        <member name="M:DbSetExtensions.BulkMergeAsync``1(Microsoft.EntityFrameworkCore.DbSet{``0},System.Collections.Generic.IEnumerable{``0})">
            <summary>A DbSet extension method that bulk merge asynchronous.</summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="this">The @this to act on.</param>
            <param name="entities">The entities.</param>
            <returns>A Task.</returns>
        </member>
        <member name="M:DbSetExtensions.BulkMergeAsync``1(Microsoft.EntityFrameworkCore.DbSet{``0},System.Collections.Generic.IEnumerable{``0},System.Threading.CancellationToken)">
            <summary>A DbSet extension method that bulk merge asynchronous.</summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="this">The @this to act on.</param>
            <param name="entities">The entities.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>A Task.</returns>
        </member>
        <member name="M:DbSetExtensions.BulkSynchronize``1(Microsoft.EntityFrameworkCore.DbSet{``0},System.Collections.Generic.IEnumerable{``0})">
            <summary>A DbSet extension method that bulk synchronize.</summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="this">The @this to act on.</param>
            <param name="entities">The entities.</param>
        </member>
        <member name="M:DbSetExtensions.BulkSynchronize``1(Microsoft.EntityFrameworkCore.DbSet{``0},System.Collections.Generic.IEnumerable{``0},System.Action{Z.BulkOperations.BulkOperation{``0}})">
            <summary>A DbSet extension method that bulk synchronize.</summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="this">The @this to act on.</param>
            <param name="entities">The entities.</param>
            <param name="options">Options for controlling the operation.</param>
        </member>
        <member name="M:DbSetExtensions.BulkSynchronizeAsync``1(Microsoft.EntityFrameworkCore.DbSet{``0},System.Collections.Generic.IEnumerable{``0},System.Action{Z.BulkOperations.BulkOperation{``0}})">
            <summary>A DbSet extension method that bulk synchronize asynchronous.</summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="this">The @this to act on.</param>
            <param name="entities">The entities.</param>
            <param name="options">The bulk operation factory.</param>
            <returns>A Task.</returns>
        </member>
        <member name="M:DbSetExtensions.BulkSynchronizeAsync``1(Microsoft.EntityFrameworkCore.DbSet{``0},System.Collections.Generic.IEnumerable{``0},System.Action{Z.BulkOperations.BulkOperation{``0}},System.Threading.CancellationToken)">
            <summary>A DbSet extension method that bulk synchronize asynchronous.</summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="this">The @this to act on.</param>
            <param name="entities">The entities.</param>
            <param name="options">The bulk operation factory.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>A Task.</returns>
        </member>
        <member name="M:DbSetExtensions.BulkSynchronizeAsync``1(Microsoft.EntityFrameworkCore.DbSet{``0},System.Collections.Generic.IEnumerable{``0})">
            <summary>A DbSet extension method that bulk synchronize asynchronous.</summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="this">The @this to act on.</param>
            <param name="entities">The entities.</param>
            <returns>A Task.</returns>
        </member>
        <member name="M:DbSetExtensions.BulkSynchronizeAsync``1(Microsoft.EntityFrameworkCore.DbSet{``0},System.Collections.Generic.IEnumerable{``0},System.Threading.CancellationToken)">
            <summary>A DbSet extension method that bulk synchronize asynchronous.</summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="this">The @this to act on.</param>
            <param name="entities">The entities.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>A Task.</returns>
        </member>
        <member name="M:DbSetExtensions.BulkUpdate``1(Microsoft.EntityFrameworkCore.DbSet{``0},System.Collections.Generic.IEnumerable{``0})">
            <summary>A DbSet extension method that bulk update.</summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="this">The @this to act on.</param>
            <param name="entities">The entities.</param>
        </member>
        <member name="M:DbSetExtensions.BulkUpdate``1(Microsoft.EntityFrameworkCore.DbSet{``0},System.Collections.Generic.IEnumerable{``0},System.Action{Z.BulkOperations.BulkOperation{``0}})">
            <summary>A DbSet extension method that bulk update.</summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="this">The @this to act on.</param>
            <param name="entities">The entities.</param>
            <param name="options">Options for controlling the operation.</param>
        </member>
        <member name="M:DbSetExtensions.BulkUpdateAsync``1(Microsoft.EntityFrameworkCore.DbSet{``0},System.Collections.Generic.IEnumerable{``0},System.Action{Z.BulkOperations.BulkOperation{``0}})">
            <summary>A DbSet extension method that bulk update asynchronous.</summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="this">The @this to act on.</param>
            <param name="entities">The entities.</param>
            <param name="options">The bulk operation factory.</param>
            <returns>A Task.</returns>
        </member>
        <member name="M:DbSetExtensions.BulkUpdateAsync``1(Microsoft.EntityFrameworkCore.DbSet{``0},System.Collections.Generic.IEnumerable{``0},System.Action{Z.BulkOperations.BulkOperation{``0}},System.Threading.CancellationToken)">
            <summary>A DbSet extension method that bulk update asynchronous.</summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="this">The @this to act on.</param>
            <param name="entities">The entities.</param>
            <param name="options">The bulk operation factory.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>A Task.</returns>
        </member>
        <member name="M:DbSetExtensions.BulkUpdateAsync``1(Microsoft.EntityFrameworkCore.DbSet{``0},System.Collections.Generic.IEnumerable{``0})">
            <summary>A DbSet extension method that bulk update asynchronous.</summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="this">The @this to act on.</param>
            <param name="entities">The entities.</param>
            <returns>A Task.</returns>
        </member>
        <member name="M:DbSetExtensions.BulkUpdateAsync``1(Microsoft.EntityFrameworkCore.DbSet{``0},System.Collections.Generic.IEnumerable{``0},System.Threading.CancellationToken)">
            <summary>A DbSet extension method that bulk update asynchronous.</summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="this">The @this to act on.</param>
            <param name="entities">The entities.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>A Task.</returns>
        </member>
        <member name="M:DbSetExtensions.SingleDelete``1(Microsoft.EntityFrameworkCore.DbSet{``0},``0)">
            <summary>A DbSet extension method that will perform a single delete.</summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="this">The @this to act on.</param>
            <param name="entity">The entity.</param>
        </member>
        <member name="M:DbSetExtensions.SingleDelete``1(Microsoft.EntityFrameworkCore.DbSet{``0},``0,System.Action{Z.BulkOperations.BulkOperation{``0}})">
            <summary>A DbSet extension method that will perform a single delete.</summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="this">The @this to act on.</param>
            <param name="entity">The entity.</param>
            <param name="options">Options for controlling the operation.</param>
        </member>
        <member name="M:DbSetExtensions.SingleInsert``1(Microsoft.EntityFrameworkCore.DbSet{``0},``0)">
            <summary>A DbSet extension method that will perform a single insert.</summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="this">The @this to act on.</param>
            <param name="entity">The entity.</param>
        </member>
        <member name="M:DbSetExtensions.SingleInsert``1(Microsoft.EntityFrameworkCore.DbSet{``0},``0,System.Action{Z.BulkOperations.BulkOperation{``0}})">
            <summary>A DbSet extension method that will perform a single insert.</summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="this">The @this to act on.</param>
            <param name="entity">The entity.</param>
            <param name="options">Options for controlling the operation.</param>
        </member>
        <member name="M:DbSetExtensions.SingleMerge``1(Microsoft.EntityFrameworkCore.DbSet{``0},``0)">
            <summary>A DbSet extension method that will perform a single merge.</summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="this">The @this to act on.</param>
            <param name="entity">The entity.</param>
        </member>
        <member name="M:DbSetExtensions.SingleMerge``1(Microsoft.EntityFrameworkCore.DbSet{``0},``0,System.Action{Z.BulkOperations.BulkOperation{``0}})">
            <summary>A DbSet extension method that will perform a single merge.</summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="this">The @this to act on.</param>
            <param name="entity">The entity.</param>
            <param name="options">Options for controlling the operation.</param>
        </member>
        <member name="M:DbSetExtensions.SingleSynchronize``1(Microsoft.EntityFrameworkCore.DbSet{``0},``0)">
            <summary>A DbSet extension method that will perform a single synchronize.</summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="this">The @this to act on.</param>
            <param name="entity">The entity.</param>
        </member>
        <member name="M:DbSetExtensions.SingleSynchronize``1(Microsoft.EntityFrameworkCore.DbSet{``0},``0,System.Action{Z.BulkOperations.BulkOperation{``0}})">
            <summary>A DbSet extension method that will perform a single synchronize.</summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="this">The @this to act on.</param>
            <param name="entity">The entity.</param>
            <param name="options">Options for controlling the operation.</param>
        </member>
        <member name="M:DbSetExtensions.SingleUpdate``1(Microsoft.EntityFrameworkCore.DbSet{``0},``0)">
            <summary>A DbSet extension method that will perform a single update.</summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="this">The @this to act on.</param>
            <param name="entity">The entity.</param>
        </member>
        <member name="M:DbSetExtensions.SingleUpdate``1(Microsoft.EntityFrameworkCore.DbSet{``0},``0,System.Action{Z.BulkOperations.BulkOperation{``0}})">
            <summary>A DbSet extension method that will perform a single update.</summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="this">The @this to act on.</param>
            <param name="entity">The entity.</param>
            <param name="options">Options for controlling the operation.</param>
        </member>
        <member name="M:DbSetExtensions.SingleDeleteAsync``1(Microsoft.EntityFrameworkCore.DbSet{``0},``0)">
            <summary>A DbSet extension method that will perform a single delete asynchronous.</summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="this">The @this to act on.</param>
            <param name="entity">The entity.</param>
            <returns>A Task.</returns>
        </member>
        <member name="M:DbSetExtensions.SingleDeleteAsync``1(Microsoft.EntityFrameworkCore.DbSet{``0},``0,System.Threading.CancellationToken)">
            <summary>A DbSet extension method that will perform a single delete asynchronous.</summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="this">The @this to act on.</param>
            <param name="entity">The entity.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>A Task.</returns>
        </member>
        <member name="M:DbSetExtensions.SingleDeleteAsync``1(Microsoft.EntityFrameworkCore.DbSet{``0},``0,System.Action{Z.BulkOperations.BulkOperation{``0}})">
            <summary>A DbSet extension method that will perform a single delete asynchronous.</summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="this">The @this to act on.</param>
            <param name="entity">The entity.</param>
            <param name="options">Options for controlling the operation.</param>
            <returns>A Task.</returns>
        </member>
        <member name="M:DbSetExtensions.SingleDeleteAsync``1(Microsoft.EntityFrameworkCore.DbSet{``0},``0,System.Action{Z.BulkOperations.BulkOperation{``0}},System.Threading.CancellationToken)">
            <summary>A DbSet extension method that will perform a single delete asynchronous.</summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="this">The @this to act on.</param>
            <param name="entity">The entity.</param>
            <param name="options">Options for controlling the operation.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>A Task.</returns>
        </member>
        <member name="M:DbSetExtensions.SingleInsertAsync``1(Microsoft.EntityFrameworkCore.DbSet{``0},``0)">
            <summary>A DbSet extension method that will perform a single insert asynchronous.</summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="this">The @this to act on.</param>
            <param name="entity">The entity.</param>
            <returns>A Task.</returns>
        </member>
        <member name="M:DbSetExtensions.SingleInsertAsync``1(Microsoft.EntityFrameworkCore.DbSet{``0},``0,System.Threading.CancellationToken)">
            <summary>A DbSet extension method that will perform a single insert asynchronous.</summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="this">The @this to act on.</param>
            <param name="entity">The entity.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>A Task.</returns>
        </member>
        <member name="M:DbSetExtensions.SingleInsertAsync``1(Microsoft.EntityFrameworkCore.DbSet{``0},``0,System.Action{Z.BulkOperations.BulkOperation{``0}})">
            <summary>A DbSet extension method that will perform a single insert asynchronous.</summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="this">The @this to act on.</param>
            <param name="entity">The entity.</param>
            <param name="options">Options for controlling the operation.</param>
            <returns>A Task.</returns>
        </member>
        <member name="M:DbSetExtensions.SingleInsertAsync``1(Microsoft.EntityFrameworkCore.DbSet{``0},``0,System.Action{Z.BulkOperations.BulkOperation{``0}},System.Threading.CancellationToken)">
            <summary>A DbSet extension method that will perform a single insert asynchronous.</summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="this">The @this to act on.</param>
            <param name="entity">The entity.</param>
            <param name="options">Options for controlling the operation.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>A Task.</returns>
        </member>
        <member name="M:DbSetExtensions.SingleMergeAsync``1(Microsoft.EntityFrameworkCore.DbSet{``0},``0)">
            <summary>A DbSet extension method that will perform a single merge asynchronous.</summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="this">The @this to act on.</param>
            <param name="entity">The entity.</param>
            <returns>A Task.</returns>
        </member>
        <member name="M:DbSetExtensions.SingleMergeAsync``1(Microsoft.EntityFrameworkCore.DbSet{``0},``0,System.Threading.CancellationToken)">
            <summary>A DbSet extension method that will perform a single merge asynchronous.</summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="this">The @this to act on.</param>
            <param name="entity">The entity.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>A Task.</returns>
        </member>
        <member name="M:DbSetExtensions.SingleMergeAsync``1(Microsoft.EntityFrameworkCore.DbSet{``0},``0,System.Action{Z.BulkOperations.BulkOperation{``0}})">
            <summary>A DbSet extension method that will perform a single merge asynchronous.</summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="this">The @this to act on.</param>
            <param name="entity">The entity.</param>
            <param name="options">Options for controlling the operation.</param>
            <returns>A Task.</returns>
        </member>
        <member name="M:DbSetExtensions.SingleMergeAsync``1(Microsoft.EntityFrameworkCore.DbSet{``0},``0,System.Action{Z.BulkOperations.BulkOperation{``0}},System.Threading.CancellationToken)">
            <summary>A DbSet extension method that will perform a single merge asynchronous.</summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="this">The @this to act on.</param>
            <param name="entity">The entity.</param>
            <param name="options">Options for controlling the operation.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>A Task.</returns>
        </member>
        <member name="M:DbSetExtensions.SingleSynchronizeAsync``1(Microsoft.EntityFrameworkCore.DbSet{``0},``0)">
            <summary>A DbSet extension method that will perform a single synchronize asynchronous.</summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="this">The @this to act on.</param>
            <param name="entity">The entity.</param>
            <returns>A Task.</returns>
        </member>
        <member name="M:DbSetExtensions.SingleSynchronizeAsync``1(Microsoft.EntityFrameworkCore.DbSet{``0},``0,System.Threading.CancellationToken)">
            <summary>A DbSet extension method that will perform a single synchronize asynchronous.</summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="this">The @this to act on.</param>
            <param name="entity">The entity.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>A Task.</returns>
        </member>
        <member name="M:DbSetExtensions.SingleSynchronizeAsync``1(Microsoft.EntityFrameworkCore.DbSet{``0},``0,System.Action{Z.BulkOperations.BulkOperation{``0}})">
            <summary>A DbSet extension method that will perform a single synchronize asynchronous.</summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="this">The @this to act on.</param>
            <param name="entity">The entity.</param>
            <param name="options">Options for controlling the operation.</param>
            <returns>A Task.</returns>
        </member>
        <member name="M:DbSetExtensions.SingleSynchronizeAsync``1(Microsoft.EntityFrameworkCore.DbSet{``0},``0,System.Action{Z.BulkOperations.BulkOperation{``0}},System.Threading.CancellationToken)">
            <summary>A DbSet extension method that will perform a single synchronize asynchronous.</summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="this">The @this to act on.</param>
            <param name="entity">The entity.</param>
            <param name="options">Options for controlling the operation.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>A Task.</returns>
        </member>
        <member name="M:DbSetExtensions.SingleUpdateAsync``1(Microsoft.EntityFrameworkCore.DbSet{``0},``0)">
            <summary>A DbSet extension method that will perform a single update asynchronous.</summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="this">The @this to act on.</param>
            <param name="entity">The entity.</param>
            <returns>A Task.</returns>
        </member>
        <member name="M:DbSetExtensions.SingleUpdateAsync``1(Microsoft.EntityFrameworkCore.DbSet{``0},``0,System.Threading.CancellationToken)">
            <summary>A DbSet extension method that will perform a single update asynchronous.</summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="this">The @this to act on.</param>
            <param name="entity">The entity.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>A Task.</returns>
        </member>
        <member name="M:DbSetExtensions.SingleUpdateAsync``1(Microsoft.EntityFrameworkCore.DbSet{``0},``0,System.Action{Z.BulkOperations.BulkOperation{``0}})">
            <summary>A DbSet extension method that will perform a single update asynchronous.</summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="this">The @this to act on.</param>
            <param name="entity">The entity.</param>
            <param name="options">Options for controlling the operation.</param>
            <returns>A Task.</returns>
        </member>
        <member name="M:DbSetExtensions.SingleUpdateAsync``1(Microsoft.EntityFrameworkCore.DbSet{``0},``0,System.Action{Z.BulkOperations.BulkOperation{``0}},System.Threading.CancellationToken)">
            <summary>A DbSet extension method that will perform a single update asynchronous.</summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="this">The @this to act on.</param>
            <param name="entity">The entity.</param>
            <param name="options">Options for controlling the operation.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>A Task.</returns>
        </member>
        <member name="T:Z.EntityFramework.Extensions.EFCoreConfig">
            <summary>EF Core Config</summary>
        </member>
        <member name="F:Z.EntityFramework.Extensions.EFCoreConfig.ContextFactory">
            <summary>Gets or sets the context factory. A new context must be created for internal use (DO NOT return the context from parameter).</summary>
            <value>The context factory. A new context must be created for internal use (DO NOT return the context from parameter).</value>
        </member>
        <member name="M:Z.EntityFramework.Extensions.EFCoreConfig.AddLicense(System.String,System.String)">
            <summary>Adds a license key (Multiple license key can be added).</summary>
            <param name="licenseName">Name of the license.</param>
            <param name="licenseKey">The license key.</param>
        </member>
        <member name="M:Z.EntityFramework.Extensions.EFCoreConfig.ValidateLicense(Z.BulkOperations.ProviderType)">
            <summary>Validates if license added is valid.</summary>
            <param name="provider">(Optional) The provider specific for the license.</param>
            <returns>true if it's valid, false if it's invalid.</returns>
        </member>
        <member name="M:Z.EntityFramework.Extensions.EFCoreConfig.ValidateLicense(System.String@,Z.BulkOperations.ProviderType)">
            <summary>Validates if license added is valid.</summary>
            <param name="errorMessage">[out] Error message if the license is invalid.</param>
            <param name="provider">(Optional) The provider specific for the license.</param>
            <returns>true if it's valid, false if it's invalid.</returns>
        </member>
        <member name="P:Z.EntityFramework.Extensions.EFCoreConfig.IsCommunity">
            <summary>Gets or sets a value indicating whether the library is in community mode (automatically throw an error for all paid features).</summary>
            <value>True if the library is in community mode (automatically throw an error for all paid features).</value>
        </member>
        <member name="P:Z.EntityFramework.Extensions.EFCoreConfig.IsEntityFrameworkPlus">
            <summary>
            Gets or sets a value indicating whether Entity Framework Plus is used.
            </summary>
            <value>True if Entity Framework Plus is used.</value>
        </member>
        <member name="P:Z.EntityFramework.Extensions.EFCoreConfig.PreBulkSaveChanges">
            <summary>Gets or sets an action to perform before the BulkSaveChanges is executed.</summary>
            <value>The action to perform before the BulkSaveChanges is executed.</value>
        </member>
        <member name="P:Z.EntityFramework.Extensions.EFCoreConfig.PreBulkInsert">
            <summary>Gets or sets an action to perform before the BulkInsert is executed.</summary>
            <value>The action to perform before the BulkInsert is executed.</value>
        </member>
        <member name="P:Z.EntityFramework.Extensions.EFCoreConfig.PreBulkUpdate">
            <summary>Gets or sets an action to perform before the BulkUpdate is executed.</summary>
            <value>The action to perform before the BulkUpdate is executed.</value>
        </member>
        <member name="P:Z.EntityFramework.Extensions.EFCoreConfig.PreBulkMerge">
            <summary>Gets or sets an action to perform before the BulkMerge is executed.</summary>
            <value>The action to perform before the BulkMerge is executed.</value>
        </member>
        <member name="P:Z.EntityFramework.Extensions.EFCoreConfig.PreBulkDelete">
            <summary>Gets or sets an action to perform before the BulkDelete is executed.</summary>
            <value>The action to perform before the BulkDelete is executed.</value>
        </member>
        <member name="P:Z.EntityFramework.Extensions.EFCoreConfig.PreBulkSynchronize">
            <summary>Gets or sets an action to perform before the BulkSynchronize is executed.</summary>
            <value>The action to perform before the BulkSynchronize is executed.</value>
        </member>
        <member name="T:Z.EntityFramework.Extensions.BatchDelete">
            <summary>Class to batch delete.</summary>
        </member>
        <member name="M:Z.EntityFramework.Extensions.BatchDelete.#ctor">
            <summary>Default constructor.</summary>
        </member>
        <member name="P:Z.EntityFramework.Extensions.BatchDelete.BatchSize">
            <summary>Gets or sets the size of the batch.</summary>
            <value>The size of the batch.</value>
        </member>
        <member name="P:Z.EntityFramework.Extensions.BatchDelete.InMemoryDbContextFactory">
            <summary>Gets or sets the factory to create an InMemory DbContext.</summary>
            <value>The factory to create an InMemory DbContext.</value>
        </member>
        <member name="P:Z.EntityFramework.Extensions.BatchDelete.BatchDelayInterval">
            <summary>Gets or sets the batch delay interval in milliseconds (The wait time between batch).</summary>
            <value>The batch delay interval in milliseconds (The wait time between batch).</value>
        </member>
        <member name="P:Z.EntityFramework.Extensions.BatchDelete.UseTableLock">
            <summary>Gets or sets a value indicating whether the query use table lock.</summary>
            <value>True if use table lock, false if not.</value>
        </member>
        <member name="P:Z.EntityFramework.Extensions.BatchDelete.IgnoreInMemoryAsNoTracking">
            <summary>
            Gets or sets a value indicating whether the ignore the AsNoTracking for InMemory provider
            </summary>
        </member>
        <member name="P:Z.EntityFramework.Extensions.BatchDelete.Executing">
            <summary>Gets or sets the DbCommand before being executed.</summary>
            <value>The DbCommand before being executed.</value>
        </member>
        <member name="M:Z.EntityFramework.Extensions.BatchDelete.Execute``1(System.Linq.IQueryable{``0})">
            <summary>Executes the batch delete operation.</summary>
            <typeparam name="T">The type of elements of the query.</typeparam>
            <param name="query">The query used to execute the batch operation.</param>
            <returns>The number of rows affected.</returns>
        </member>
        <member name="T:Z.EntityFramework.Extensions.BatchDeleteManager">
            <summary>Manage EF+ Batch Delete Configuration.</summary>
        </member>
        <member name="P:Z.EntityFramework.Extensions.BatchDeleteManager.BatchDeleteBuilder">
            <summary>Gets or sets the batch delete builder to change default configuration.</summary>
            <value>The batch delete builder to change default configuration.</value>
        </member>
        <member name="P:Z.EntityFramework.Extensions.BatchDeleteManager.InMemoryDbContextFactory">
            <summary>Gets or sets the factory to create an InMemory DbContext.</summary>
            <value>The factory to create an InMemory DbContext.</value>
        </member>
        <member name="T:Z.EntityFramework.Extensions.BatchUpdate">
            <summary>Class to batch Update.</summary>
        </member>
        <member name="P:Z.EntityFramework.Extensions.BatchUpdate.Executing">
            <summary>Gets or sets the DbCommand before being executed.</summary>
            <value>The DbCommand before being executed.</value>
        </member>
        <member name="P:Z.EntityFramework.Extensions.BatchUpdate.UseTableLock">
            <summary>Gets or sets a value indicating whether the query use table lock.</summary>
            <value>True if use table lock, false if not.</value>
        </member>
        <member name="P:Z.EntityFramework.Extensions.BatchUpdate.IgnoreInMemoryAsNoTracking">
            <summary>
            Gets or sets a value indicating whether the ignore the AsNoTracking for InMemory provider
            </summary>
        </member>
        <member name="P:Z.EntityFramework.Extensions.BatchUpdate.UseRowLock">
            <summary>Gets or sets a value indicating whether this object use row lock.</summary>
            <value>True if use row lock, false if not.</value>
        </member>
        <member name="P:Z.EntityFramework.Extensions.BatchUpdate.InMemoryDbContextFactory">
            <summary>Gets or sets the factory to create an InMemory DbContext.</summary>
            <value>The factory to create an InMemory DbContext.</value>
        </member>
        <member name="M:Z.EntityFramework.Extensions.BatchUpdate.Execute``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``0}})">
            <summary>Executes the batch update operation.</summary>
            <typeparam name="T">The type of elements of the query.</typeparam>
            <param name="query">The query used to execute the batch operation.</param>
            <param name="updateFactory">The update factory.</param>
            <returns>The number of rows affected.</returns>
        </member>
        <member name="T:Z.EntityFramework.Extensions.BatchUpdateManager">
            <summary>Manage EF+ Batch Update Configuration.</summary>
        </member>
        <member name="P:Z.EntityFramework.Extensions.BatchUpdateManager.BatchUpdateBuilder">
            <summary>Gets or sets the batch update builder to change default configuration.</summary>
            <value>The batch update builder to change default configuration.</value>
        </member>
        <member name="P:Z.EntityFramework.Extensions.BatchUpdateManager.InMemoryDbContextFactory">
            <summary>Gets or sets the factory to create an InMemory DbContext.</summary>
            <value>The factory to create an InMemory DbContext.</value>
        </member>
        <member name="M:Z.EntityFramework.Extensions.BatchUpdateManager.Hook``1(System.Linq.Expressions.Expression{System.Func{``0,``0}})">
            <summary>Adds a hook that will always happen when the BatchUpdate will be called for a specific type.</summary>
            <param name="hook">The hook.</param>
        </member>
        <member name="T:Z.EntityFramework.Extensions.EntityFrameworkManager">
            <summary>Entity Framework Manager</summary>
        </member>
        <member name="P:Z.EntityFramework.Extensions.EntityFrameworkManager.ContextFactory">
            <summary>Gets or sets the context factory. A new context must be created for internal use (DO NOT return the context from parameter).</summary>
            <value>The context factory. A new context must be created for internal use (DO NOT return the context from parameter).</value>
        </member>
        <member name="P:Z.EntityFramework.Extensions.EntityFrameworkManager.IsCommunity">
            <summary>Gets or sets a value indicating whether the library is in community mode (automatically throw an error for all paid features).</summary>
            <value>True if the library is in community mode (automatically throw an error for all paid features).</value>
        </member>
        <member name="P:Z.EntityFramework.Extensions.EntityFrameworkManager.IsEntityFrameworkPlus">
            <summary>
            Gets or sets a value indicating whether Entity Framework Plus is used.
            </summary>
            <value>True if Entity Framework Plus is used.</value>
        </member>
        <member name="P:Z.EntityFramework.Extensions.EntityFrameworkManager.PreBulkSaveChanges">
            <summary>Gets or sets an action to perform before the BulkSaveChanges is executed.</summary>
            <value>The action to perform before the BulkSaveChanges is executed.</value>
        </member>
        <member name="P:Z.EntityFramework.Extensions.EntityFrameworkManager.PreBulkInsert">
            <summary>Gets or sets an action to perform before the BulkInsert is executed.</summary>
            <value>The action to perform before the BulkInsert is executed.</value>
        </member>
        <member name="P:Z.EntityFramework.Extensions.EntityFrameworkManager.PreBulkUpdate">
            <summary>Gets or sets an action to perform before the BulkUpdate is executed.</summary>
            <value>The action to perform before the BulkUpdate is executed.</value>
        </member>
        <member name="P:Z.EntityFramework.Extensions.EntityFrameworkManager.PreBulkMerge">
            <summary>Gets or sets an action to perform before the BulkMerge is executed.</summary>
            <value>The action to perform before the BulkMerge is executed.</value>
        </member>
        <member name="P:Z.EntityFramework.Extensions.EntityFrameworkManager.PreBulkDelete">
            <summary>Gets or sets an action to perform before the BulkDelete is executed.</summary>
            <value>The action to perform before the BulkDelete is executed.</value>
        </member>
        <member name="P:Z.EntityFramework.Extensions.EntityFrameworkManager.PreBulkSynchronize">
            <summary>Gets or sets an action to perform before the BulkSynchronize is executed.</summary>
            <value>The action to perform before the BulkSynchronize is executed.</value>
        </member>
        <member name="T:Z.EntityFramework.Extensions.DbCommandInterceptionContext`1">
            <summary>Represents contextual information associated with the call into DbCommandInterceptor.</summary>
            <typeparam name="TResult">The type of the operation's results.</typeparam>
        </member>
        <member name="M:Z.EntityFramework.Extensions.DbCommandInterceptionContext`1.#ctor(Microsoft.EntityFrameworkCore.Diagnostics.CommandEventData,Microsoft.EntityFrameworkCore.DbContext)">
            <summary>Constructor.</summary>
            <param name="eventData">The CommandEventData associated with this interception context.</param>
            <param name="dbContext">The DbContext instances associated with this interception context.</param>
        </member>
        <member name="P:Z.EntityFramework.Extensions.DbCommandInterceptionContext`1.Result">
            <summary>
                if the operation succeeds, then this property will be set to the returned result.
            </summary>
        </member>
        <member name="T:Z.EntityFramework.Extensions.BaseInterceptionContext`1">
            <summary>Represents contextual information associated with the call into DbCommandInterceptor.</summary>
            <typeparam name="TEventData">The type of the EventData.</typeparam>
        </member>
        <member name="M:Z.EntityFramework.Extensions.BaseInterceptionContext`1.#ctor(`0,Microsoft.EntityFrameworkCore.DbContext)">
            <summary>Constructor.</summary>
            <param name="eventData">The EventData associated with this interception context.</param>
            <param name="dbContext">The DbContext instances associated with this interception context.</param>
        </member>
        <member name="P:Z.EntityFramework.Extensions.BaseInterceptionContext`1.EventData">
            <summary>Gets the EventData associated with this interception context.</summary>
            <value>The EventData associated with this interception context.</value>
        </member>
        <member name="P:Z.EntityFramework.Extensions.BaseInterceptionContext`1.DbContext">
            <summary>Gets the DbContext instances associated with this interception context.</summary>
            <value>The DbContext instances associated with this interception context.</value>
        </member>
        <member name="M:Z.EntityFramework.Extensions.BaseInterceptor`1.OnCompleted">
            <inheritdoc />
        </member>
        <member name="M:Z.EntityFramework.Extensions.BaseInterceptor`1.OnError(System.Exception)">
            <inheritdoc />
        </member>
        <member name="M:Z.EntityFramework.Extensions.BaseInterceptor`1.OnNext(System.Diagnostics.DiagnosticListener)">
            <inheritdoc />
        </member>
        <member name="T:Z.EntityFramework.Extensions.DbConnectionInterceptionContext">
            <summary>Represents contextual information associated with the call into DbConnectionInterceptor.</summary>
        </member>
        <member name="M:Z.EntityFramework.Extensions.DbConnectionInterceptionContext.#ctor(Microsoft.EntityFrameworkCore.Diagnostics.ConnectionEventData,Microsoft.EntityFrameworkCore.DbContext)">
            <summary>Constructor.</summary>
            <param name="eventData">The ConnectionEventData associated with this interception context.</param>
            <param name="dbContext">The DbContext instances associated with this interception context.</param>
        </member>
        <member name="T:Z.EntityFramework.Extensions.DbConnectionInterceptor">
            <summary>
                An class that can receive notifications when Entity Framework use a connection. You must override method from this
                class.
            </summary>
        </member>
        <member name="M:Z.EntityFramework.Extensions.DbConnectionInterceptor.#ctor">
            <summary>Default constructor.</summary>
        </member>
        <member name="M:Z.EntityFramework.Extensions.DbConnectionInterceptor.Closing(System.Data.Common.DbConnection,Z.EntityFramework.Extensions.DbConnectionInterceptionContext)">
            <summary>
                This method is called before the connection is closed.
            </summary>
            <param name="connection">The connection being closed.</param>
            <param name="interceptionContext">Contextual information associated with the call.</param>
        </member>
        <member name="M:Z.EntityFramework.Extensions.DbConnectionInterceptor.Closed(System.Data.Common.DbConnection,Z.EntityFramework.Extensions.DbConnectionInterceptionContext)">
            <summary>
                This method is called after the connection is closed.
            </summary>
            <param name="connection">The connection being closed.</param>
            <param name="interceptionContext">Contextual information associated with the call.</param>
        </member>
        <member name="M:Z.EntityFramework.Extensions.DbConnectionInterceptor.Opening(System.Data.Common.DbConnection,Z.EntityFramework.Extensions.DbConnectionInterceptionContext)">
            <summary>
                This method is called before the connection is opened.
            </summary>
            <param name="connection">The connection being opened.</param>
            <param name="interceptionContext">Contextual information associated with the call.</param>
        </member>
        <member name="M:Z.EntityFramework.Extensions.DbConnectionInterceptor.Opened(System.Data.Common.DbConnection,Z.EntityFramework.Extensions.DbConnectionInterceptionContext)">
            <summary>
                This method is called after the connection is opened.
            </summary>
            <param name="connection">The connection being open.</param>
            <param name="interceptionContext">Contextual information associated with the call.</param>
        </member>
        <member name="M:Z.EntityFramework.Extensions.DbConnectionInterceptor.Error(System.Data.Common.DbConnection,Z.EntityFramework.Extensions.DbConnectionInterceptionContext,System.Exception)">
            <summary>
                This method is called when an error occurs in the connection.
            </summary>
            <param name="connection">The connection in error.</param>
            <param name="interceptionContext">Contextual information associated with the call.</param>
            <param name="exception">The exception that occured.</param>
        </member>
        <member name="M:Z.EntityFramework.Extensions.BaseInterceptorObserver`1.OnCompleted">
            <inheritdoc />
        </member>
        <member name="M:Z.EntityFramework.Extensions.BaseInterceptorObserver`1.OnError(System.Exception)">
            <inheritdoc />
        </member>
        <member name="M:Z.EntityFramework.Extensions.BaseInterceptorObserver`1.OnNext(System.Collections.Generic.KeyValuePair{System.String,System.Object})">
            <inheritdoc />
        </member>
        <member name="T:Z.EntityFramework.Extensions.IDbInterceptor">
            <summary>
                This is the base interface for all interfaces that provide interception points for various
                different types and operations.
            </summary>
        </member>
        <member name="T:Z.EntityFramework.Extensions.DbInterception">
            <summary>
                This is the registration point for <see cref="T:Z.EntityFramework.Extensions.IDbInterceptor" /> interceptors. Interceptors
                receive notifications when EF performs certain operations such as executing commands against
                the database, opening connection, committed transaction and more.
            </summary>
        </member>
        <member name="M:Z.EntityFramework.Extensions.DbInterception.Add(Z.EntityFramework.Extensions.IDbInterceptor)">
            <summary>Registers a new IDbInterceptor to receive notifications.</summary>
            <param name="interceptor">The interceptor to add.</param>
        </member>
        <member name="T:Z.EntityFramework.Extensions.DbTransactionInterceptionContext">
            <summary>Represents contextual information associated with the call into DbTransactionInterceptor.</summary>
        </member>
        <member name="M:Z.EntityFramework.Extensions.DbTransactionInterceptionContext.#ctor(Microsoft.EntityFrameworkCore.Diagnostics.TransactionEventData,Microsoft.EntityFrameworkCore.DbContext)">
            <summary>Constructor.</summary>
            <param name="eventData">The TransactionEventData associated with this interception context.</param>
            <param name="dbContext">The DbContext instances associated with this interception context.</param>
        </member>
        <member name="T:Z.EntityFramework.Extensions.DbTransactionInterceptor">
            <summary>
                An class that can receive notifications when Entity Framework use a transaction. You must override method from this
                class.
            </summary>
        </member>
        <member name="M:Z.EntityFramework.Extensions.DbTransactionInterceptor.#ctor">
            <summary>Default constructor.</summary>
        </member>
        <member name="M:Z.EntityFramework.Extensions.DbTransactionInterceptor.Committed(System.Data.Common.DbTransaction,Z.EntityFramework.Extensions.DbTransactionInterceptionContext)">
            <summary>This method is called after the transaction is committed.</summary>
            <param name="transaction">The transaction being committed.</param>
            <param name="interceptionContext">Contextual information associated with the call.</param>
        </member>
        <member name="M:Z.EntityFramework.Extensions.DbTransactionInterceptor.Disposed(System.Data.Common.DbTransaction,Z.EntityFramework.Extensions.DbTransactionInterceptionContext)">
            <summary>This method is called after the transaction is disposed.</summary>
            <param name="transaction">The transaction being disposed.</param>
            <param name="interceptionContext">Contextual information associated with the call.</param>
        </member>
        <member name="M:Z.EntityFramework.Extensions.DbTransactionInterceptor.Error(System.Data.Common.DbTransaction,Z.EntityFramework.Extensions.DbTransactionInterceptionContext,System.Exception)">
            <summary>This method is called when an error occurs in the transaction.</summary>
            <param name="transaction">The transaction in error.</param>
            <param name="interceptionContext">Contextual information associated with the call.</param>
            <param name="exception">The exception that occured.</param>
        </member>
        <member name="M:Z.EntityFramework.Extensions.DbTransactionInterceptor.RolledBack(System.Data.Common.DbTransaction,Z.EntityFramework.Extensions.DbTransactionInterceptionContext)">
            <summary>This method is called after the transaction is rolled back.</summary>
            <param name="transaction">The transaction being rolled back.</param>
            <param name="interceptionContext">Contextual information associated with the call.</param>
        </member>
        <member name="M:Z.EntityFramework.Extensions.DbTransactionInterceptor.Started(System.Data.Common.DbTransaction,Z.EntityFramework.Extensions.DbTransactionInterceptionContext)">
            <summary>This method is called after the transaction is started.</summary>
            <param name="transaction">The transaction being started.</param>
            <param name="interceptionContext">Contextual information associated with the call.</param>
        </member>
        <member name="M:Z.EntityFramework.Extensions.DbTransactionInterceptor.Used(System.Data.Common.DbTransaction,Z.EntityFramework.Extensions.DbTransactionInterceptionContext)">
            <summary>This method is called after the transaction is used.</summary>
            <param name="transaction">The transaction being used.</param>
            <param name="interceptionContext">Contextual information associated with the call.</param>
        </member>
        <member name="T:Z.EntityFramework.Extensions.IQueryHook">
            <summary>Interface for query hook.</summary>
        </member>
        <member name="P:Z.EntityFramework.Extensions.IQueryHook.DbContext">
            <summary>Gets or sets the DbContext</summary>
            <value>The DbContext.</value>
        </member>
        <member name="M:Z.EntityFramework.Extensions.IQueryHook.Execute(System.Data.Common.DbCommand,Microsoft.EntityFrameworkCore.DbContext)">
            <summary>Executes.</summary>
            <param name="command">The command.</param>
            <param name="dbContext">Context for the database.</param>
        </member>
        <member name="T:Z.EntityFramework.Extensions.QueryHookCommandInterceptor">
            <summary>A query hook command interceptor.</summary>
        </member>
        <member name="M:Z.EntityFramework.Extensions.QueryHookCommandInterceptor.NonQueryExecuting(System.Data.Common.DbCommand,Z.EntityFramework.Extensions.DbCommandInterceptionContext{System.Int32})">
            <inheritdoc />
        </member>
        <member name="M:Z.EntityFramework.Extensions.QueryHookCommandInterceptor.ReaderExecuting(System.Data.Common.DbCommand,Z.EntityFramework.Extensions.DbCommandInterceptionContext{System.Data.Common.DbDataReader})">
            <inheritdoc />
        </member>
        <member name="M:Z.EntityFramework.Extensions.QueryHookCommandInterceptor.ScalarExecuting(System.Data.Common.DbCommand,Z.EntityFramework.Extensions.DbCommandInterceptionContext{System.Object})">
            <inheritdoc />
        </member>
        <member name="M:Z.EntityFramework.Extensions.QueryHookCommandInterceptor.HookExecuting(System.Data.Common.DbCommand,Microsoft.EntityFrameworkCore.DbContext)">
            <summary>Executes the hook operation.</summary>
            <exception cref="T:System.Exception">Thrown when an exception error condition occurs.</exception>
            <param name="command">The command.</param>
            <param name="dbContext">Context for the database.</param>
        </member>
        <member name="T:Z.EntityFramework.Extensions.QueryHookExecuting">
            <summary>A query hook that apply when a query is executing.</summary>
        </member>
        <member name="P:Z.EntityFramework.Extensions.QueryHookExecuting.DbContext">
            <inheritdoc />
        </member>
        <member name="F:Z.EntityFramework.Extensions.QueryHookExecuting.Action">
            <summary>The action to execute.</summary>
        </member>
        <member name="M:Z.EntityFramework.Extensions.QueryHookExecuting.#ctor(System.Action{System.Data.Common.DbCommand,Microsoft.EntityFrameworkCore.DbContext})">
            <summary>Constructor.</summary>
            <param name="action">The action to execute.</param>
        </member>
        <member name="M:Z.EntityFramework.Extensions.QueryHookExecuting.#ctor(Microsoft.EntityFrameworkCore.DbContext,System.Action{System.Data.Common.DbCommand,Microsoft.EntityFrameworkCore.DbContext})">
            <summary>Constructor.</summary>
            <param name="dbContext">The DbContext.</param>
            <param name="action">The action to execute.</param>
        </member>
        <member name="M:Z.EntityFramework.Extensions.QueryHookExecuting.Execute(System.Data.Common.DbCommand,Microsoft.EntityFrameworkCore.DbContext)">
            <inheritdoc />
        </member>
        <member name="T:Z.EntityFramework.Extensions.QueryHookManager">
            <summary>Manager for query hooks.</summary>
        </member>
        <member name="M:Z.EntityFramework.Extensions.QueryHookManager.#cctor">
            <summary>Static constructor.</summary>
        </member>
        <member name="M:Z.EntityFramework.Extensions.QueryHookManager.AddOrAppendHook``1(System.Linq.IQueryable{``0},Z.EntityFramework.Extensions.IQueryHook)">
            <summary>Adds an or append hook to 'hook'.</summary>
            <exception cref="T:System.Exception">Thrown when an exception error condition occurs.</exception>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="this">this.</param>
            <param name="hook">The hook.</param>
            <returns>An IQueryable&lt;T&gt;</returns>
        </member>
        <member name="T:Z.EntityFramework.Extensions.LicenseManager">
            <summary>Manager for licenses.</summary>
        </member>
        <member name="M:Z.EntityFramework.Extensions.LicenseManager.AddLicense(System.String,System.String)">
            <summary>Adds a license key (Multiple license key can be added).</summary>
            <param name="licenseName">Name of the license.</param>
            <param name="licenseKey">The license key.</param>
        </member>
        <member name="M:Z.EntityFramework.Extensions.LicenseManager.ValidateLicense(Z.BulkOperations.ProviderType)">
            <summary>Validates if license added is valid.</summary>
            <param name="provider">The provider specific for the license.</param>
            <returns>true if it's valid, false if it's invalid.</returns>
        </member>
        <member name="T:Z.EntityFramework.Extensions.DbCommandInterceptor">
            <summary>
                An class that can receive notifications when Entity Framework executes commands. You must override method from this
                class.
            </summary>
        </member>
        <member name="M:Z.EntityFramework.Extensions.DbCommandInterceptor.#ctor">
            <summary>Default constructor.</summary>
        </member>
        <member name="M:Z.EntityFramework.Extensions.DbCommandInterceptor.NonQueryExecuting(System.Data.Common.DbCommand,Z.EntityFramework.Extensions.DbCommandInterceptionContext{System.Int32})">
            <summary>
                This method is called before a call to <see cref="M:System.Data.Common.DbCommand.ExecuteNonQuery" /> or
                one of its async counterparts is made.
            </summary>
            <param name="command">The command being executed.</param>
            <param name="interceptionContext">Contextual information associated with the call.</param>
        </member>
        <member name="M:Z.EntityFramework.Extensions.DbCommandInterceptor.NonQueryExecuted(System.Data.Common.DbCommand,Z.EntityFramework.Extensions.DbCommandInterceptionContext{System.Int32})">
            <summary>
                This method is called after a call to <see cref="M:System.Data.Common.DbCommand.ExecuteNonQuery" />  or
                one of its async counterparts is made.
            </summary>
            <remarks>
                For async operations this method is not called until after the async task has completed
                or failed.
            </remarks>
            <param name="command">The command being executed.</param>
            <param name="interceptionContext">Contextual information associated with the call.</param>
        </member>
        <member name="M:Z.EntityFramework.Extensions.DbCommandInterceptor.NonQueryError(System.Data.Common.DbCommand,Z.EntityFramework.Extensions.DbCommandInterceptionContext{System.Int32},System.Exception)">
            <summary>
                This method is called after a call to <see cref="M:System.Data.Common.DbCommand.ExecuteNonQuery" />  or
                one of its async counterparts is made and an error occurs.
            </summary>
            <param name="command">The command being executed.</param>
            <param name="interceptionContext">Contextual information associated with the call.</param>
            <param name="exception">The exception that occured.</param>
        </member>
        <member name="M:Z.EntityFramework.Extensions.DbCommandInterceptor.ReaderExecuting(System.Data.Common.DbCommand,Z.EntityFramework.Extensions.DbCommandInterceptionContext{System.Data.Common.DbDataReader})">
            <summary>
                This method is called before a call to
                <see cref="M:System.Data.Common.DbCommand.ExecuteReader(System.Data.CommandBehavior)" /> or
                one of its async counterparts is made.
            </summary>
            <param name="command">The command being executed.</param>
            <param name="interceptionContext">Contextual information associated with the call.</param>
        </member>
        <member name="M:Z.EntityFramework.Extensions.DbCommandInterceptor.ReaderExecuted(System.Data.Common.DbCommand,Z.EntityFramework.Extensions.DbCommandInterceptionContext{System.Data.Common.DbDataReader})">
            <summary>
                This method is called after a call to
                <see cref="M:System.Data.Common.DbCommand.ExecuteReader(System.Data.CommandBehavior)" /> or
                one of its async counterparts is made.
            </summary>
            <remarks>
                For async operations this method is not called until after the async task has completed
                or failed.
            </remarks>
            <param name="command">The command being executed.</param>
            <param name="interceptionContext">Contextual information associated with the call.</param>
        </member>
        <member name="M:Z.EntityFramework.Extensions.DbCommandInterceptor.ReaderError(System.Data.Common.DbCommand,Z.EntityFramework.Extensions.DbCommandInterceptionContext{System.Data.Common.DbDataReader},System.Exception)">
            <summary>
                This method is called after a call to
                <see cref="M:System.Data.Common.DbCommand.ExecuteReader(System.Data.CommandBehavior)" /> or
                one of its async counterparts is made and an error occurs.
            </summary>
            <remarks>
                For async operations this method is not called until after the async task has completed
                or failed.
            </remarks>
            <param name="command">The command being executed.</param>
            <param name="interceptionContext">Contextual information associated with the call.</param>
            <param name="exception">The exception that occured.</param>
        </member>
        <member name="M:Z.EntityFramework.Extensions.DbCommandInterceptor.ScalarExecuting(System.Data.Common.DbCommand,Z.EntityFramework.Extensions.DbCommandInterceptionContext{System.Object})">
            <summary>
                This method is called before a call to <see cref="M:System.Data.Common.DbCommand.ExecuteScalar" /> or
                one of its async counterparts is made.
            </summary>
            <param name="command">The command being executed.</param>
            <param name="interceptionContext">Contextual information associated with the call.</param>
        </member>
        <member name="M:Z.EntityFramework.Extensions.DbCommandInterceptor.ScalarExecuted(System.Data.Common.DbCommand,Z.EntityFramework.Extensions.DbCommandInterceptionContext{System.Object})">
            <summary>
                This method is called after a call to <see cref="M:System.Data.Common.DbCommand.ExecuteScalar" /> or
                one of its async counterparts is made.
            </summary>
            <remarks>
                For async operations this method is not called until after the async task has completed
                or failed.
            </remarks>
            <param name="command">The command being executed.</param>
            <param name="interceptionContext">Contextual information associated with the call.</param>
        </member>
        <member name="M:Z.EntityFramework.Extensions.DbCommandInterceptor.ScalarError(System.Data.Common.DbCommand,Z.EntityFramework.Extensions.DbCommandInterceptionContext{System.Object},System.Exception)">
            <summary>
                This method is called after a call to <see cref="M:System.Data.Common.DbCommand.ExecuteScalar" /> or
                one of its async counterparts is made and an error occurs.
            </summary>
            <remarks>
                For async operations this method is not called until after the async task has completed
                or failed.
            </remarks>
            <param name="command">The command being executed.</param>
            <param name="interceptionContext">Contextual information associated with the call.</param>
            <param name="exception">The exception that occured.</param>
        </member>
        <member name="T:Z.BulkOperations.AuditModeType">
            <summary>Values that represent AuditModeType.</summary>
        </member>
        <member name="T:Z.BulkOperations.AuditActionType">
            <summary>Values that represent AuditActionType.</summary>
        </member>
        <member name="F:Z.BulkOperations.AuditActionType.Delete">
            <summary>An enum constant representing the delete option.</summary>
        </member>
        <member name="F:Z.BulkOperations.AuditActionType.Insert">
            <summary>An enum constant representing the insert option.</summary>
        </member>
        <member name="F:Z.BulkOperations.AuditActionType.Update">
            <summary>An enum constant representing the update option.</summary>
        </member>
        <member name="T:Z.BulkOperations.AuditEntry">
            <summary>An audit entry.</summary>
        </member>
        <member name="P:Z.BulkOperations.AuditEntry.Action">
            <summary>Gets or sets the action.</summary>
            <value>The action.</value>
        </member>
        <member name="P:Z.BulkOperations.AuditEntry.Date">
            <summary>Gets or sets the Date/Time of the date.</summary>
            <value>The date.</value>
        </member>
        <member name="P:Z.BulkOperations.AuditEntry.Metas">
            <summary>Gets or sets the metas.</summary>
            <value>The metas.</value>
        </member>
        <member name="P:Z.BulkOperations.AuditEntry.TableName">
            <summary>Gets or sets the name of the table.</summary>
            <value>The name of the table.</value>
        </member>
        <member name="P:Z.BulkOperations.AuditEntry.Values">
            <summary>Gets or sets the values.</summary>
            <value>The values.</value>
        </member>
        <member name="T:Z.BulkOperations.AuditEntryItem">
            <summary>An audit entry item.</summary>
        </member>
        <member name="P:Z.BulkOperations.AuditEntryItem.ColumnName">
            <summary>Gets or sets the name of the column.</summary>
            <value>The name of the column.</value>
        </member>
        <member name="P:Z.BulkOperations.AuditEntryItem.NewValue">
            <summary>Gets or sets the new value.</summary>
            <value>The new value.</value>
        </member>
        <member name="P:Z.BulkOperations.AuditEntryItem.OldValue">
            <summary>Gets or sets the old value.</summary>
            <value>The old value.</value>
        </member>
        <member name="T:Z.BulkOperations.AutoMapType">
            <summary>Values that represent AutoMapType.</summary>
        </member>
        <member name="T:Z.BulkOperations.BasicBulkOperation">
            <summary>A basic bulk operation.</summary>
        </member>
        <member name="M:Z.BulkOperations.BasicBulkOperation.BulkDelete">
            <summary>Bulk delete.</summary>
        </member>
        <member name="M:Z.BulkOperations.BasicBulkOperation.BulkDelete(System.Object)">
            <summary>Bulk delete.</summary>
            <param name="datasource">The datasource.</param>
        </member>
        <member name="M:Z.BulkOperations.BasicBulkOperation.BulkDelete(System.Data.DataTable,System.Data.DataRowState)">
            <summary>Bulk delete.</summary>
            <param name="datasource">The datasource.</param>
            <param name="dataRowState">State of the data row.</param>
        </member>
        <member name="M:Z.BulkOperations.BasicBulkOperation.BulkDeleteAsync(System.Threading.CancellationToken)">
            <summary>Bulk delete.</summary>
            <param name="cancellationToken">The cancellation token.</param>
        </member>
        <member name="M:Z.BulkOperations.BasicBulkOperation.BulkDeleteAsync(System.Object,System.Threading.CancellationToken)">
            <summary>Bulk delete.</summary>
            <param name="datasource">The datasource.</param>
            <param name="cancellationToken">The cancellation token.</param>
        </member>
        <member name="M:Z.BulkOperations.BasicBulkOperation.BulkDeleteAsync(System.Data.DataTable,System.Data.DataRowState,System.Threading.CancellationToken)">
            <summary>Bulk delete.</summary>
            <param name="datasource">The datasource.</param>
            <param name="dataRowState">State of the data row.</param>
            <param name="cancellationToken">The cancellation token.</param>
        </member>
        <member name="M:Z.BulkOperations.BasicBulkOperation.BulkInsert">
            <summary>Bulk insert.</summary>
        </member>
        <member name="M:Z.BulkOperations.BasicBulkOperation.BulkInsert(System.Object)">
            <summary>Bulk insert.</summary>
            <param name="datasource">The datasource.</param>
        </member>
        <member name="M:Z.BulkOperations.BasicBulkOperation.BulkInsert(System.Data.DataTable,System.Data.DataRowState)">
            <summary>Bulk insert.</summary>
            <param name="datasource">The datasource.</param>
            <param name="dataRowState">State of the data row.</param>
        </member>
        <member name="M:Z.BulkOperations.BasicBulkOperation.BulkInsertAsync(System.Threading.CancellationToken)">
            <summary>Bulk insert.</summary>
            <param name="cancellationToken">The cancellation token.</param>
        </member>
        <member name="M:Z.BulkOperations.BasicBulkOperation.BulkInsertAsync(System.Object,System.Threading.CancellationToken)">
            <summary>Bulk insert.</summary>
            <param name="datasource">The datasource.</param>
            <param name="cancellationToken">The cancellation token.</param>
        </member>
        <member name="M:Z.BulkOperations.BasicBulkOperation.BulkInsertAsync(System.Data.DataTable,System.Data.DataRowState,System.Threading.CancellationToken)">
            <summary>Bulk insert.</summary>
            <param name="datasource">The datasource.</param>
            <param name="dataRowState">State of the data row.</param>
            <param name="cancellationToken">The cancellation token.</param>
        </member>
        <member name="M:Z.BulkOperations.BasicBulkOperation.BulkMerge">
            <summary>Bulk merge.</summary>
        </member>
        <member name="M:Z.BulkOperations.BasicBulkOperation.BulkMerge(System.Object)">
            <summary>Bulk merge.</summary>
            <param name="datasource">The datasource.</param>
        </member>
        <member name="M:Z.BulkOperations.BasicBulkOperation.BulkMerge(System.Data.DataTable,System.Data.DataRowState)">
            <summary>Bulk merge.</summary>
            <param name="datasource">The datasource.</param>
            <param name="dataRowState">State of the data row.</param>
        </member>
        <member name="M:Z.BulkOperations.BasicBulkOperation.BulkMergeAsync(System.Threading.CancellationToken)">
            <summary>Bulk merge.</summary>
            <param name="cancellationToken">The cancellation token.</param>
        </member>
        <member name="M:Z.BulkOperations.BasicBulkOperation.BulkMergeAsync(System.Object,System.Threading.CancellationToken)">
            <summary>Bulk merge.</summary>
            <param name="datasource">The datasource.</param>
            <param name="cancellationToken">The cancellation token.</param>
        </member>
        <member name="M:Z.BulkOperations.BasicBulkOperation.BulkMergeAsync(System.Data.DataTable,System.Data.DataRowState,System.Threading.CancellationToken)">
            <summary>Bulk merge.</summary>
            <param name="datasource">The datasource.</param>
            <param name="dataRowState">State of the data row.</param>
            <param name="cancellationToken">The cancellation token.</param>
        </member>
        <member name="M:Z.BulkOperations.BasicBulkOperation.BulkSaveChanges(System.Data.DataTable)">
            <summary>Bulk save changes.</summary>
            <param name="dt">The datatable.</param>
        </member>
        <member name="M:Z.BulkOperations.BasicBulkOperation.BulkSaveChangesAsync(System.Data.DataTable,System.Threading.CancellationToken)">
            <summary>Bulk save changes.</summary>
            <param name="dt">The datatable.</param>
            <param name="cancellationToken">The cancellation token.</param>
        </member>
        <member name="M:Z.BulkOperations.BasicBulkOperation.BulkSynchronize">
            <summary>Bulk synchronize.</summary>
        </member>
        <member name="M:Z.BulkOperations.BasicBulkOperation.BulkSynchronize(System.Object)">
            <summary>Bulk synchronize.</summary>
            <param name="datasource">The datasource.</param>
        </member>
        <member name="M:Z.BulkOperations.BasicBulkOperation.BulkSynchronizeAsync(System.Threading.CancellationToken)">
            <summary>Bulk synchronize.</summary>
            <param name="cancellationToken">The cancellation token.</param>
        </member>
        <member name="M:Z.BulkOperations.BasicBulkOperation.BulkSynchronizeAsync(System.Object,System.Threading.CancellationToken)">
            <summary>Bulk synchronize.</summary>
            <param name="datasource">The datasource.</param>
            <param name="cancellationToken">The cancellation token.</param>
        </member>
        <member name="M:Z.BulkOperations.BasicBulkOperation.BulkUpdate">
            <summary>Bulk update.</summary>
        </member>
        <member name="M:Z.BulkOperations.BasicBulkOperation.BulkUpdate(System.Object)">
            <summary>Bulk update.</summary>
            <param name="datasource">The datasource.</param>
        </member>
        <member name="M:Z.BulkOperations.BasicBulkOperation.BulkUpdate(System.Data.DataTable,System.Data.DataRowState)">
            <summary>Bulk update.</summary>
            <param name="datasource">The datasource.</param>
            <param name="dataRowState">State of the data row.</param>
        </member>
        <member name="M:Z.BulkOperations.BasicBulkOperation.BulkUpdateAsync(System.Threading.CancellationToken)">
            <summary>Bulk update.</summary>
            <param name="cancellationToken">The cancellation token.</param>
        </member>
        <member name="M:Z.BulkOperations.BasicBulkOperation.BulkUpdateAsync(System.Object,System.Threading.CancellationToken)">
            <summary>Bulk update.</summary>
            <param name="datasource">The datasource.</param>
            <param name="cancellationToken">The cancellation token.</param>
        </member>
        <member name="M:Z.BulkOperations.BasicBulkOperation.BulkUpdateAsync(System.Data.DataTable,System.Data.DataRowState,System.Threading.CancellationToken)">
            <summary>Bulk update.</summary>
            <param name="datasource">The datasource.</param>
            <param name="dataRowState">State of the data row.</param>
            <param name="cancellationToken">The cancellation token.</param>
        </member>
        <member name="P:Z.BulkOperations.BasicBulkOperation.Advanced">
            <summary>Gets or sets the advanced.</summary>
            <value>The advanced.</value>
        </member>
        <member name="P:Z.BulkOperations.BasicBulkOperation.BatchSize">
            <summary>Gets or sets the size of the batch.</summary>
            <value>The size of the batch.</value>
        </member>
        <member name="P:Z.BulkOperations.BasicBulkOperation.ColumnMappings">
            <summary>Gets or sets the column mappings.</summary>
            <value>The column mappings.</value>
        </member>
        <member name="P:Z.BulkOperations.BasicBulkOperation.Connection">
            <summary>Gets or sets the connection.</summary>
            <value>The connection.</value>
        </member>
        <member name="P:Z.BulkOperations.BasicBulkOperation.DataSource">
            <summary>Gets or sets the data source.</summary>
            <value>The data source.</value>
        </member>
        <member name="P:Z.BulkOperations.BasicBulkOperation.DestinationTableName">
            <summary>Gets or sets the name of the destination table.</summary>
            <value>The name of the destination table.</value>
        </member>
        <member name="P:Z.BulkOperations.BasicBulkOperation.Transaction">
            <summary>Gets or sets the transaction.</summary>
            <value>The transaction.</value>
        </member>
        <member name="M:Z.BulkOperations.BasicBulkOperation.Dispose">
            <summary>
                Performs application-defined tasks associated with freeing, releasing, or resetting
                unmanaged resources.
            </summary>
        </member>
        <member name="T:Z.BulkOperations.BasicBulkOperation`1">
            <summary>A basic bulk operation.</summary>
            <typeparam name="TEntity">Type of the entity.</typeparam>
        </member>
        <member name="M:Z.BulkOperations.BasicBulkOperation`1.BulkDelete">
            <summary>Bulk delete.</summary>
        </member>
        <member name="M:Z.BulkOperations.BasicBulkOperation`1.BulkDelete(System.Collections.Generic.List{`0})">
            <summary>Bulk delete.</summary>
            <param name="datasource">The datasource.</param>
        </member>
        <member name="M:Z.BulkOperations.BasicBulkOperation`1.BulkDeleteAsync(System.Threading.CancellationToken)">
            <summary>Bulk delete.</summary>
            <param name="cancellationToken">The cancellation token.</param>
        </member>
        <member name="M:Z.BulkOperations.BasicBulkOperation`1.BulkDeleteAsync(System.Collections.Generic.List{`0},System.Threading.CancellationToken)">
            <summary>Bulk delete.</summary>
            <param name="datasource">The datasource.</param>
            <param name="cancellationToken">The cancellation token.</param>
        </member>
        <member name="M:Z.BulkOperations.BasicBulkOperation`1.BulkInsert">
            <summary>Bulk insert.</summary>
        </member>
        <member name="M:Z.BulkOperations.BasicBulkOperation`1.BulkInsert(System.Collections.Generic.List{`0})">
            <summary>Bulk insert.</summary>
            <param name="datasource">The datasource.</param>
        </member>
        <member name="M:Z.BulkOperations.BasicBulkOperation`1.BulkInsertAsync(System.Threading.CancellationToken)">
            <summary>Bulk insert.</summary>
            <param name="cancellationToken">The cancellation token.</param>
        </member>
        <member name="M:Z.BulkOperations.BasicBulkOperation`1.BulkInsertAsync(System.Collections.Generic.List{`0},System.Threading.CancellationToken)">
            <summary>Bulk insert.</summary>
            <param name="datasource">The datasource.</param>
            <param name="cancellationToken">The cancellation token.</param>
        </member>
        <member name="M:Z.BulkOperations.BasicBulkOperation`1.BulkMerge">
            <summary>Bulk merge.</summary>
        </member>
        <member name="M:Z.BulkOperations.BasicBulkOperation`1.BulkMerge(System.Collections.Generic.List{`0})">
            <summary>Bulk merge.</summary>
            <param name="datasource">The datasource.</param>
        </member>
        <member name="M:Z.BulkOperations.BasicBulkOperation`1.BulkMergeAsync(System.Threading.CancellationToken)">
            <summary>Bulk merge.</summary>
            <param name="cancellationToken">The cancellation token.</param>
        </member>
        <member name="M:Z.BulkOperations.BasicBulkOperation`1.BulkMergeAsync(System.Collections.Generic.List{`0},System.Threading.CancellationToken)">
            <summary>Bulk merge.</summary>
            <param name="datasource">The datasource.</param>
            <param name="cancellationToken">The cancellation token.</param>
        </member>
        <member name="M:Z.BulkOperations.BasicBulkOperation`1.BulkSynchronize">
            <summary>Bulk synchronize.</summary>
        </member>
        <member name="M:Z.BulkOperations.BasicBulkOperation`1.BulkSynchronize(System.Collections.Generic.List{`0})">
            <summary>Bulk synchronize.</summary>
            <param name="datasource">The datasource.</param>
        </member>
        <member name="M:Z.BulkOperations.BasicBulkOperation`1.BulkSynchronizeAsync(System.Threading.CancellationToken)">
            <summary>Bulk synchronize.</summary>
            <param name="cancellationToken">The cancellation token.</param>
        </member>
        <member name="M:Z.BulkOperations.BasicBulkOperation`1.BulkSynchronizeAsync(System.Collections.Generic.List{`0},System.Threading.CancellationToken)">
            <summary>Bulk synchronize.</summary>
            <param name="datasource">The datasource.</param>
            <param name="cancellationToken">The cancellation token.</param>
        </member>
        <member name="M:Z.BulkOperations.BasicBulkOperation`1.BulkUpdate">
            <summary>Bulk update.</summary>
        </member>
        <member name="M:Z.BulkOperations.BasicBulkOperation`1.BulkUpdate(System.Collections.Generic.List{`0})">
            <summary>Bulk update.</summary>
            <param name="datasource">The datasource.</param>
        </member>
        <member name="M:Z.BulkOperations.BasicBulkOperation`1.BulkUpdateAsync(System.Threading.CancellationToken)">
            <summary>Bulk update.</summary>
            <param name="cancellationToken">The cancellation token.</param>
        </member>
        <member name="M:Z.BulkOperations.BasicBulkOperation`1.BulkUpdateAsync(System.Collections.Generic.List{`0},System.Threading.CancellationToken)">
            <summary>Bulk update.</summary>
            <param name="datasource">The datasource.</param>
            <param name="cancellationToken">The cancellation token.</param>
        </member>
        <member name="M:Z.BulkOperations.BasicBulkOperation`1.#ctor">
            <summary>None constructor.</summary>
        </member>
        <member name="P:Z.BulkOperations.BasicBulkOperation`1.Advanced">
            <summary>Gets or sets the advanced.</summary>
            <value>The advanced.</value>
        </member>
        <member name="P:Z.BulkOperations.BasicBulkOperation`1.BatchSize">
            <summary>Gets or sets the size of the batch.</summary>
            <value>The size of the batch.</value>
        </member>
        <member name="P:Z.BulkOperations.BasicBulkOperation`1.ColumnMappings">
            <summary>Gets or sets the column mappings.</summary>
            <value>The column mappings.</value>
        </member>
        <member name="P:Z.BulkOperations.BasicBulkOperation`1.ColumnInputExpression">
            <summary>Gets or sets the column input expression.</summary>
            <value>The column input expression.</value>
        </member>
        <member name="P:Z.BulkOperations.BasicBulkOperation`1.ColumnOutputExpression">
            <summary>Gets or sets the column output expression.</summary>
            <value>The column output expression.</value>
        </member>
        <member name="P:Z.BulkOperations.BasicBulkOperation`1.ColumnPrimaryKeyExpression">
            <summary>Gets or sets the column primary key expression.</summary>
            <value>The column primary key expression.</value>
        </member>
        <member name="P:Z.BulkOperations.BasicBulkOperation`1.Connection">
            <summary>Gets or sets the connection.</summary>
            <value>The connection.</value>
        </member>
        <member name="P:Z.BulkOperations.BasicBulkOperation`1.DataSource">
            <summary>Gets or sets the data source.</summary>
            <value>The data source.</value>
        </member>
        <member name="P:Z.BulkOperations.BasicBulkOperation`1.DestinationTableName">
            <summary>Gets or sets the name of the destination table.</summary>
            <value>The name of the destination table.</value>
        </member>
        <member name="P:Z.BulkOperations.BasicBulkOperation`1.Transaction">
            <summary>Gets or sets the transaction.</summary>
            <value>The transaction.</value>
        </member>
        <member name="M:Z.BulkOperations.BasicBulkOperation`1.Dispose">
            <summary>
                Performs application-defined tasks associated with freeing, releasing, or resetting
                unmanaged resources.
            </summary>
        </member>
        <member name="T:Z.BulkOperations.BasicColumnMapping">
            <summary>A column mapping.</summary>
            <summary>A column mapping.</summary>
        </member>
        <member name="M:Z.BulkOperations.BasicColumnMapping.#ctor">
            <summary>Inherit constructor.</summary>
        </member>
        <member name="M:Z.BulkOperations.BasicColumnMapping.#ctor(System.String)">
            <summary>Constructor.</summary>
            <param name="columnName">Name of the column.</param>
        </member>
        <member name="M:Z.BulkOperations.BasicColumnMapping.#ctor(System.String,System.Boolean)">
            <summary>Constructor.</summary>
            <param name="columnName">Name of the column.</param>
            <param name="isPrimaryKey">true if this object is primary key, false if not.</param>
        </member>
        <member name="M:Z.BulkOperations.BasicColumnMapping.#ctor(System.String,Z.BulkOperations.ColumnMappingDirectionType)">
            <summary>Constructor.</summary>
            <param name="columnName">Name of the column.</param>
            <param name="direction">The direction.</param>
        </member>
        <member name="M:Z.BulkOperations.BasicColumnMapping.#ctor(System.String,System.Boolean,Z.BulkOperations.ColumnMappingDirectionType)">
            <summary>Constructor.</summary>
            <param name="columnName">Name of the column.</param>
            <param name="isPrimaryKey">true if this object is primary key, false if not.</param>
            <param name="direction">The direction.</param>
        </member>
        <member name="M:Z.BulkOperations.BasicColumnMapping.#ctor(System.String,System.String)">
            <summary>Constructor.</summary>
            <param name="sourceName">Name of the source.</param>
            <param name="destinationName">Name of the destination.</param>
        </member>
        <member name="M:Z.BulkOperations.BasicColumnMapping.#ctor(System.Int32,System.Int32)">
            <summary>Constructor.</summary>
            <param name="sourceOrdinal">Source ordinal.</param>
            <param name="destinationOrdinal">Destination ordinal.</param>
        </member>
        <member name="M:Z.BulkOperations.BasicColumnMapping.#ctor(System.Int32,System.String)">
            <summary>Constructor.</summary>
            <param name="sourceOrdinal">Source ordinal.</param>
            <param name="destinationName">Name of the destination.</param>
        </member>
        <member name="M:Z.BulkOperations.BasicColumnMapping.#ctor(System.String,System.Int32)">
            <summary>Constructor.</summary>
            <param name="sourceName">Name of the source.</param>
            <param name="destinationOrdinal">Destination ordinal.</param>
        </member>
        <member name="M:Z.BulkOperations.BasicColumnMapping.#ctor(System.String,System.String,System.Boolean)">
            <summary>Constructor.</summary>
            <param name="sourceName">Name of the source.</param>
            <param name="destinationName">Name of the destination.</param>
            <param name="isPrimaryKey">true if this object is primary key, false if not.</param>
        </member>
        <member name="M:Z.BulkOperations.BasicColumnMapping.#ctor(System.Int32,System.Int32,System.Boolean)">
            <summary>Constructor.</summary>
            <param name="sourceOrdinal">Source ordinal.</param>
            <param name="destinationOrdinal">Destination ordinal.</param>
            <param name="isPrimaryKey">true if this object is primary key, false if not.</param>
        </member>
        <member name="M:Z.BulkOperations.BasicColumnMapping.#ctor(System.String,System.String,Z.BulkOperations.ColumnMappingDirectionType)">
            <summary>Constructor.</summary>
            <param name="sourceName">Name of the source.</param>
            <param name="destinationName">Name of the destination.</param>
            <param name="direction">The direction.</param>
        </member>
        <member name="M:Z.BulkOperations.BasicColumnMapping.#ctor(System.Int32,System.Int32,Z.BulkOperations.ColumnMappingDirectionType)">
            <summary>Constructor.</summary>
            <param name="sourceOrdinal">Source ordinal.</param>
            <param name="destinationOrdinal">Destination ordinal.</param>
            <param name="direction">The direction.</param>
        </member>
        <member name="M:Z.BulkOperations.BasicColumnMapping.#ctor(System.String,System.String,System.Boolean,Z.BulkOperations.ColumnMappingDirectionType)">
            <summary>Constructor.</summary>
            <param name="sourceName">Name of the source.</param>
            <param name="destinationName">Name of the destination.</param>
            <param name="isPrimaryKey">true if this object is primary key, false if not.</param>
            <param name="direction">The direction.</param>
        </member>
        <member name="M:Z.BulkOperations.BasicColumnMapping.#ctor(System.Int32,System.Int32,System.Boolean,Z.BulkOperations.ColumnMappingDirectionType)">
            <summary>Constructor.</summary>
            <param name="sourceOrdinal">Source ordinal.</param>
            <param name="destinationOrdinal">Destination ordinal.</param>
            <param name="isPrimaryKey">true if this object is primary key, false if not.</param>
            <param name="direction">The direction.</param>
        </member>
        <member name="P:Z.BulkOperations.BasicColumnMapping.Advanced">
            <summary>Gets the advanced.</summary>
            <value>The advanced.</value>
        </member>
        <member name="P:Z.BulkOperations.BasicColumnMapping.DestinationName">
            <summary>Gets or sets the name of the destination.</summary>
            <value>The name of the destination.</value>
        </member>
        <member name="P:Z.BulkOperations.BasicColumnMapping.DestinationOrdinal">
            <summary>Gets or sets destination ordinal.</summary>
            <value>The destination ordinal.</value>
        </member>
        <member name="P:Z.BulkOperations.BasicColumnMapping.Direction">
            <summary>Gets or sets the direction.</summary>
            <value>The direction.</value>
        </member>
        <member name="P:Z.BulkOperations.BasicColumnMapping.IsPrimaryKey">
            <summary>Gets or sets a value indicating whether this object is primary key.</summary>
            <value>true if this object is primary key, false if not.</value>
        </member>
        <member name="P:Z.BulkOperations.BasicColumnMapping.SourceName">
            <summary>Gets or sets the name of the source.</summary>
            <value>The name of the source.</value>
        </member>
        <member name="P:Z.BulkOperations.BasicColumnMapping.SourceOrdinal">
            <summary>Gets or sets source ordinal.</summary>
            <value>The source ordinal.</value>
        </member>
        <member name="T:Z.BulkOperations.BasicColumnMapping`1">
            <summary>A column mapping.</summary>
            <typeparam name="TEntity">Type of the entity.</typeparam>
        </member>
        <member name="M:Z.BulkOperations.BasicColumnMapping`1.#ctor">
            <summary>Inherit constructor.</summary>
        </member>
        <member name="M:Z.BulkOperations.BasicColumnMapping`1.#ctor(System.String)">
            <summary>Constructor.</summary>
            <param name="columnName">Name of the column.</param>
        </member>
        <member name="M:Z.BulkOperations.BasicColumnMapping`1.#ctor(System.String,System.Boolean)">
            <summary>Constructor.</summary>
            <param name="columnName">Name of the column.</param>
            <param name="isPrimaryKey">true if this object is primary key, false if not.</param>
        </member>
        <member name="M:Z.BulkOperations.BasicColumnMapping`1.#ctor(System.String,Z.BulkOperations.ColumnMappingDirectionType)">
            <summary>Constructor.</summary>
            <param name="columnName">Name of the column.</param>
            <param name="direction">The direction.</param>
        </member>
        <member name="M:Z.BulkOperations.BasicColumnMapping`1.#ctor(System.String,System.Boolean,Z.BulkOperations.ColumnMappingDirectionType)">
            <summary>Constructor.</summary>
            <param name="columnName">Name of the column.</param>
            <param name="isPrimaryKey">true if this object is primary key, false if not.</param>
            <param name="direction">The direction.</param>
        </member>
        <member name="M:Z.BulkOperations.BasicColumnMapping`1.#ctor(System.String,System.String)">
            <summary>Constructor.</summary>
            <param name="sourceName">Name of the source.</param>
            <param name="destinationName">Name of the destination.</param>
        </member>
        <member name="M:Z.BulkOperations.BasicColumnMapping`1.#ctor(System.Int32,System.Int32)">
            <summary>Constructor.</summary>
            <param name="sourceOrdinal">Source ordinal.</param>
            <param name="destinationOrdinal">Destination ordinal.</param>
        </member>
        <member name="M:Z.BulkOperations.BasicColumnMapping`1.#ctor(System.Int32,System.String)">
            <summary>Constructor.</summary>
            <param name="sourceOrdinal">Source ordinal.</param>
            <param name="destinationName">Name of the destination.</param>
        </member>
        <member name="M:Z.BulkOperations.BasicColumnMapping`1.#ctor(System.String,System.Int32)">
            <summary>Constructor.</summary>
            <param name="sourceName">Name of the source.</param>
            <param name="destinationOrdinal">Destination ordinal.</param>
        </member>
        <member name="M:Z.BulkOperations.BasicColumnMapping`1.#ctor(System.String,System.String,System.Boolean)">
            <summary>Constructor.</summary>
            <param name="sourceName">Name of the source.</param>
            <param name="destinationName">Name of the destination.</param>
            <param name="isPrimaryKey">true if this object is primary key, false if not.</param>
        </member>
        <member name="M:Z.BulkOperations.BasicColumnMapping`1.#ctor(System.Int32,System.Int32,System.Boolean)">
            <summary>Constructor.</summary>
            <param name="sourceOrdinal">Source ordinal.</param>
            <param name="destinationOrdinal">Destination ordinal.</param>
            <param name="isPrimaryKey">true if this object is primary key, false if not.</param>
        </member>
        <member name="M:Z.BulkOperations.BasicColumnMapping`1.#ctor(System.String,System.String,Z.BulkOperations.ColumnMappingDirectionType)">
            <summary>Constructor.</summary>
            <param name="sourceName">Name of the source.</param>
            <param name="destinationName">Name of the destination.</param>
            <param name="direction">The direction.</param>
        </member>
        <member name="M:Z.BulkOperations.BasicColumnMapping`1.#ctor(System.Int32,System.Int32,Z.BulkOperations.ColumnMappingDirectionType)">
            <summary>Constructor.</summary>
            <param name="sourceOrdinal">Source ordinal.</param>
            <param name="destinationOrdinal">Destination ordinal.</param>
            <param name="direction">The direction.</param>
        </member>
        <member name="M:Z.BulkOperations.BasicColumnMapping`1.#ctor(System.String,System.String,System.Boolean,Z.BulkOperations.ColumnMappingDirectionType)">
            <summary>Constructor.</summary>
            <param name="sourceName">Name of the source.</param>
            <param name="destinationName">Name of the destination.</param>
            <param name="isPrimaryKey">true if this object is primary key, false if not.</param>
            <param name="direction">The direction.</param>
        </member>
        <member name="M:Z.BulkOperations.BasicColumnMapping`1.#ctor(System.Int32,System.Int32,System.Boolean,Z.BulkOperations.ColumnMappingDirectionType)">
            <summary>Constructor.</summary>
            <param name="sourceOrdinal">Source ordinal.</param>
            <param name="destinationOrdinal">Destination ordinal.</param>
            <param name="isPrimaryKey">true if this object is primary key, false if not.</param>
            <param name="direction">The direction.</param>
        </member>
        <member name="M:Z.BulkOperations.BasicColumnMapping`1.#ctor(System.Linq.Expressions.Expression{System.Func{`0,System.Object}})">
            <summary>Constructor.</summary>
        </member>
        <member name="M:Z.BulkOperations.BasicColumnMapping`1.#ctor(System.Linq.Expressions.Expression{System.Func{`0,System.Object}},System.Boolean)">
            <summary>Constructor.</summary>
        </member>
        <member name="M:Z.BulkOperations.BasicColumnMapping`1.#ctor(System.Linq.Expressions.Expression{System.Func{`0,System.Object}},Z.BulkOperations.ColumnMappingDirectionType)">
            <summary>Constructor.</summary>
        </member>
        <member name="M:Z.BulkOperations.BasicColumnMapping`1.#ctor(System.Linq.Expressions.Expression{System.Func{`0,System.Object}},System.Boolean,Z.BulkOperations.ColumnMappingDirectionType)">
            <summary>Constructor.</summary>
        </member>
        <member name="M:Z.BulkOperations.BasicColumnMapping`1.#ctor(System.Linq.Expressions.Expression{System.Func{`0,System.Object}},System.Int32)">
            <summary>Constructor.</summary>
            <param name="sourceExpression">Source expression.</param>
            <param name="destinationOrdinal">Destination ordinal.</param>
        </member>
        <member name="M:Z.BulkOperations.BasicColumnMapping`1.#ctor(System.Linq.Expressions.Expression{System.Func{`0,System.Object}},System.Int32,System.Boolean)">
            <summary>Constructor.</summary>
            <param name="sourceExpression">Source expression.</param>
            <param name="destinationOrdinal">Destination ordinal.</param>
            <param name="isPrimaryKey">true if this object is primary key.</param>
        </member>
        <member name="M:Z.BulkOperations.BasicColumnMapping`1.#ctor(System.Linq.Expressions.Expression{System.Func{`0,System.Object}},System.Int32,Z.BulkOperations.ColumnMappingDirectionType)">
            <summary>Constructor.</summary>
            <param name="sourceExpression">Source expression.</param>
            <param name="destinationOrdinal">Destination ordinal.</param>
            <param name="direction">The direction.</param>
        </member>
        <member name="M:Z.BulkOperations.BasicColumnMapping`1.#ctor(System.Linq.Expressions.Expression{System.Func{`0,System.Object}},System.Int32,System.Boolean,Z.BulkOperations.ColumnMappingDirectionType)">
            <summary>Constructor.</summary>
            <param name="sourceExpression">Source expression.</param>
            <param name="destinationOrdinal">Destination ordinal.</param>
            <param name="isPrimaryKey">true if this object is primary key.</param>
            <param name="direction">The direction.</param>
        </member>
        <member name="M:Z.BulkOperations.BasicColumnMapping`1.#ctor(System.Linq.Expressions.Expression{System.Func{`0,System.Object}},System.String)">
            <summary>Constructor.</summary>
            <param name="sourceExpression">Source expression.</param>
            <param name="destinationName">Name of the destination.</param>
        </member>
        <member name="M:Z.BulkOperations.BasicColumnMapping`1.#ctor(System.Linq.Expressions.Expression{System.Func{`0,System.Object}},System.String,System.Boolean)">
            <summary>Constructor.</summary>
            <param name="sourceExpression">Source expression.</param>
            <param name="destinationName">Name of the destination.</param>
            <param name="isPrimaryKey">true if this object is primary key.</param>
        </member>
        <member name="M:Z.BulkOperations.BasicColumnMapping`1.#ctor(System.Linq.Expressions.Expression{System.Func{`0,System.Object}},System.String,Z.BulkOperations.ColumnMappingDirectionType)">
            <summary>Constructor.</summary>
            <param name="sourceExpression">Source expression.</param>
            <param name="destinationName">Name of the destination.</param>
            <param name="direction">The direction.</param>
        </member>
        <member name="M:Z.BulkOperations.BasicColumnMapping`1.#ctor(System.Linq.Expressions.Expression{System.Func{`0,System.Object}},System.String,System.Boolean,Z.BulkOperations.ColumnMappingDirectionType)">
            <summary>Constructor.</summary>
            <param name="sourceExpression">Source expression.</param>
            <param name="destinationName">Name of the destination.</param>
            <param name="isPrimaryKey">true if this object is primary key.</param>
            <param name="direction">The direction.</param>
        </member>
        <member name="P:Z.BulkOperations.BasicColumnMapping`1.Advanced">
            <summary>Gets the advanced.</summary>
            <value>The advanced.</value>
        </member>
        <member name="P:Z.BulkOperations.BasicColumnMapping`1.DestinationExpression">
            <summary>Gets or sets destination expression.</summary>
            <value>The destination expression.</value>
        </member>
        <member name="P:Z.BulkOperations.BasicColumnMapping`1.DestinationName">
            <summary>Gets or sets the name of the destination.</summary>
            <value>The name of the destination.</value>
        </member>
        <member name="P:Z.BulkOperations.BasicColumnMapping`1.DestinationOrdinal">
            <summary>Gets or sets destination ordinal.</summary>
            <value>The destination ordinal.</value>
        </member>
        <member name="P:Z.BulkOperations.BasicColumnMapping`1.Direction">
            <summary>Gets or sets the direction.</summary>
            <value>The direction.</value>
        </member>
        <member name="P:Z.BulkOperations.BasicColumnMapping`1.IsPrimaryKey">
            <summary>Gets or sets a value indicating whether this object is primary key.</summary>
            <value>true if this object is primary key, false if not.</value>
        </member>
        <member name="P:Z.BulkOperations.BasicColumnMapping`1.SourceExpression">
            <summary>Gets or sets source expression.</summary>
            <value>The source expression.</value>
        </member>
        <member name="P:Z.BulkOperations.BasicColumnMapping`1.SourceName">
            <summary>Gets or sets the name of the source.</summary>
            <value>The name of the source.</value>
        </member>
        <member name="P:Z.BulkOperations.BasicColumnMapping`1.SourceOrdinal">
            <summary>Gets or sets source ordinal.</summary>
            <value>The source ordinal.</value>
        </member>
        <member name="F:Z.BulkOperations.BulkOperationManager.BulkOperationBuilder">
            <summary>Set the builder that will apply to all bulk operation instance.</summary>
        </member>
        <member name="F:Z.BulkOperations.BulkOperationManager.ColumnMappingBuilder">
            <summary>The column mapping builder.</summary>
        </member>
        <member name="P:Z.BulkOperations.BulkOperationManager.IsCommunity">
            <summary>Gets or sets a value indicating whether the library is in community mode (automatically throw an error for all paid features).</summary>
            <value>True if the library is in community mode (automatically throw an error for all paid features).</value>
        </member>
        <member name="P:Z.BulkOperations.BulkOperationManager.Cache">
            <summary>Gets or sets the cache to use.</summary>
            <value>The cache to use.</value>
        </member>
        <member name="F:Z.BulkOperations.BulkOperationManager.UseOracleArray">
            <summary>Array of use oracles.</summary>
        </member>
        <member name="P:Z.BulkOperations.BulkOperationManager.ForceExpandoAsDictionaryEntryName">
            <summary>
            Gets or sets a value indicating whether the expando as dictionary entry name should be
            forced.
            </summary>
            <value>true if force expando as dictionary entry name, false if not.</value>
        </member>
        <member name="P:Z.BulkOperations.BulkOperationManager.ForceSelectOutput">
            <summary>
            Gets or sets a value indicating whether the select output should be forced.
            </summary>
            <value>true if force select output, false if not.</value>
        </member>
        <member name="P:Z.BulkOperations.BulkOperationManager.CustomProvider">
            <summary>Gets or sets the custom provider.</summary>
            <value>The custom provider.</value>
        </member>
        <member name="P:Z.BulkOperations.BulkOperationManager.ForceTriggerResolution">
            <summary>
            Gets or sets a value indicating whether the trigger resolution should be forced.
            </summary>
            <value>True if force trigger resolution, false if not.</value>
        </member>
        <member name="M:Z.BulkOperations.BulkOperation.BulkDelete">
            <summary>Bulk delete.</summary>
        </member>
        <member name="M:Z.BulkOperations.BulkOperation.BulkDelete(System.Object)">
            <summary>Bulk delete.</summary>
            <param name="datasource">The datasource.</param>
        </member>
        <member name="M:Z.BulkOperations.BulkOperation.BulkDelete(System.Data.DataTable,System.Data.DataRowState)">
            <summary>Bulk delete.</summary>
            <param name="datasource">The datasource.</param>
            <param name="dataRowState">State of the data row.</param>
        </member>
        <member name="M:Z.BulkOperations.BulkOperation.BulkDeleteAsync(System.Threading.CancellationToken)">
            <summary>Bulk delete.</summary>
            <param name="cancellationToken">The cancellation token.</param>
        </member>
        <member name="M:Z.BulkOperations.BulkOperation.BulkDeleteAsync(System.Object,System.Threading.CancellationToken)">
            <summary>Bulk delete.</summary>
            <param name="datasource">The datasource.</param>
            <param name="cancellationToken">The cancellation token.</param>
        </member>
        <member name="M:Z.BulkOperations.BulkOperation.BulkDeleteAsync(System.Data.DataTable,System.Data.DataRowState,System.Threading.CancellationToken)">
            <summary>Bulk delete.</summary>
            <param name="datasource">The datasource.</param>
            <param name="dataRowState">State of the data row.</param>
            <param name="cancellationToken">The cancellation token.</param>
        </member>
        <member name="M:Z.BulkOperations.BulkOperation.BulkInsert">
            <summary>Bulk insert.</summary>
            <example>
                text
                <code>var x = 1+2</code></example>
        </member>
        <member name="M:Z.BulkOperations.BulkOperation.BulkInsert(System.Object)">
            <summary>Bulk insert.</summary>
            <param name="datasource">The datasource.</param>
            <example>
                text
                <code>var x = 1+2</code>
                text2
                <code>var x = 1+3</code></example>
        </member>
        <member name="M:Z.BulkOperations.BulkOperation.BulkInsert(System.Data.DataTable,System.Data.DataRowState)">
            <summary>Bulk insert.</summary>
            <param name="datasource">The datasource.</param>
            <param name="dataRowState">State of the data row.</param>
            <example>
                text
                <code>var x = 1+2</code><code>var x = 1+4</code>
                text2
                <code>var x = 1+3</code>
                text 4
            </example>
        </member>
        <member name="M:Z.BulkOperations.BulkOperation.BulkInsertAsync(System.Threading.CancellationToken)">
            <summary>Bulk insert.</summary>
            <param name="cancellationToken">The cancellation token.</param>
        </member>
        <member name="M:Z.BulkOperations.BulkOperation.BulkInsertAsync(System.Object,System.Threading.CancellationToken)">
            <summary>Bulk insert.</summary>
            <param name="datasource">The datasource.</param>
            <param name="cancellationToken">The cancellation token.</param>
        </member>
        <member name="M:Z.BulkOperations.BulkOperation.BulkInsertAsync(System.Data.DataTable,System.Data.DataRowState,System.Threading.CancellationToken)">
            <summary>Bulk insert.</summary>
            <param name="datasource">The datasource.</param>
            <param name="dataRowState">State of the data row.</param>
            <param name="cancellationToken">The cancellation token.</param>
        </member>
        <member name="M:Z.BulkOperations.BulkOperation.BulkMerge">
            <summary>Bulk merge.</summary>
        </member>
        <member name="M:Z.BulkOperations.BulkOperation.BulkMerge(System.Object)">
            <summary>Bulk merge.</summary>
            <param name="datasource">The datasource.</param>
        </member>
        <member name="M:Z.BulkOperations.BulkOperation.BulkMerge(System.Data.DataTable,System.Data.DataRowState)">
            <summary>Bulk merge.</summary>
            <param name="datasource">The datasource.</param>
            <param name="dataRowState">State of the data row.</param>
        </member>
        <member name="M:Z.BulkOperations.BulkOperation.BulkMergeAsync(System.Threading.CancellationToken)">
            <summary>Bulk merge.</summary>
            <param name="cancellationToken">The cancellation token.</param>
        </member>
        <member name="M:Z.BulkOperations.BulkOperation.BulkMergeAsync(System.Object,System.Threading.CancellationToken)">
            <summary>Bulk merge.</summary>
            <param name="datasource">The datasource.</param>
            <param name="cancellationToken">The cancellation token.</param>
        </member>
        <member name="M:Z.BulkOperations.BulkOperation.BulkMergeAsync(System.Data.DataTable,System.Data.DataRowState,System.Threading.CancellationToken)">
            <summary>Bulk merge.</summary>
            <param name="datasource">The datasource.</param>
            <param name="dataRowState">State of the data row.</param>
            <param name="cancellationToken">The cancellation token.</param>
        </member>
        <member name="M:Z.BulkOperations.BulkOperation.BulkSaveChanges(System.Data.DataTable)">
            <summary>Bulk save changes.</summary>
            <param name="dt">The datatable.</param>
        </member>
        <member name="M:Z.BulkOperations.BulkOperation.BulkSaveChangesAsync(System.Data.DataTable,System.Threading.CancellationToken)">
            <summary>Bulk save changes.</summary>
            <param name="dt">The datatable.</param>
            <param name="cancellationToken">The cancellation token.</param>
        </member>
        <member name="M:Z.BulkOperations.BulkOperation.BulkSynchronize">
            <summary>Bulk synchronize.</summary>
        </member>
        <member name="M:Z.BulkOperations.BulkOperation.BulkSynchronize(System.Object)">
            <summary>Bulk synchronize.</summary>
            <param name="datasource">The datasource.</param>
        </member>
        <member name="M:Z.BulkOperations.BulkOperation.BulkSynchronizeAsync(System.Threading.CancellationToken)">
            <summary>Bulk synchronize.</summary>
            <param name="cancellationToken">The cancellation token.</param>
        </member>
        <member name="M:Z.BulkOperations.BulkOperation.BulkSynchronizeAsync(System.Object,System.Threading.CancellationToken)">
            <summary>Bulk synchronize.</summary>
            <param name="datasource">The datasource.</param>
            <param name="cancellationToken">The cancellation token.</param>
        </member>
        <member name="M:Z.BulkOperations.BulkOperation.BulkUpdate">
            <summary>Bulk update.</summary>
        </member>
        <member name="M:Z.BulkOperations.BulkOperation.BulkUpdate(System.Object)">
            <summary>Bulk update.</summary>
            <param name="datasource">The datasource.</param>
        </member>
        <member name="M:Z.BulkOperations.BulkOperation.BulkUpdate(System.Data.DataTable,System.Data.DataRowState)">
            <summary>Bulk update.</summary>
            <param name="datasource">The datasource.</param>
            <param name="dataRowState">State of the data row.</param>
        </member>
        <member name="M:Z.BulkOperations.BulkOperation.BulkUpdateAsync(System.Threading.CancellationToken)">
            <summary>Bulk update.</summary>
            <param name="cancellationToken">The cancellation token.</param>
        </member>
        <member name="M:Z.BulkOperations.BulkOperation.BulkUpdateAsync(System.Object,System.Threading.CancellationToken)">
            <summary>Bulk update.</summary>
            <param name="datasource">The datasource.</param>
            <param name="cancellationToken">The cancellation token.</param>
        </member>
        <member name="M:Z.BulkOperations.BulkOperation.BulkUpdateAsync(System.Data.DataTable,System.Data.DataRowState,System.Threading.CancellationToken)">
            <summary>Bulk update.</summary>
            <param name="datasource">The datasource.</param>
            <param name="dataRowState">State of the data row.</param>
            <param name="cancellationToken">The cancellation token.</param>
        </member>
        <member name="M:Z.BulkOperations.BulkOperation.Recompile">
            <summary>Recompiles this object.</summary>
        </member>
        <member name="P:Z.BulkOperations.BulkOperation.AuditEntries">
            <summary>Gets or sets the audit entries.</summary>
            <value>The audit entries.</value>
        </member>
        <member name="P:Z.BulkOperations.BulkOperation.AuditMode">
            <summary>Gets or sets the audit mode.</summary>
            <value>The audit mode.</value>
        </member>
        <member name="P:Z.BulkOperations.BulkOperation.UseAudit">
            <summary>Gets or sets a value indicating whether this object use audit.</summary>
            <value>true if use audit, false if not.</value>
        </member>
        <member name="P:Z.BulkOperations.BulkOperation.AutoMap">
            <summary>Gets or sets the automatic map.</summary>
            <value>The automatic map.</value>
        </member>
        <member name="P:Z.BulkOperations.BulkOperation.AutoMapKeyName">
            <summary>Gets or sets the name of the automatic map key.</summary>
            <value>The name of the automatic map key.</value>
        </member>
        <member name="P:Z.BulkOperations.BulkOperation.AutoMapIdentityName">
            <summary>Gets or sets the name of the automatic map identity.</summary>
            <value>The name of the automatic map identity.</value>
        </member>
        <member name="P:Z.BulkOperations.BulkOperation.AutoMapKeyExpression">
            <summary>Gets or sets the automatic map key expression.</summary>
            <value>The automatic map key expression.</value>
        </member>
        <member name="P:Z.BulkOperations.BulkOperation.AutoMapIdentityExpression">
            <summary>Gets or sets the automatic map identity expression.</summary>
            <value>The automatic map identity expression.</value>
        </member>
        <member name="P:Z.BulkOperations.BulkOperation.AutoMapValueFactory">
            <summary>Gets or sets the factory to use in value when AutoMap is used.</summary>
            <value>The factory to use in value when AutoMap is used.</value>
        </member>
        <member name="P:Z.BulkOperations.BulkOperation.BatchDelayInterval">
            <summary>Gets or sets the batch delay interval.</summary>
            <value>The batch delay interval.</value>
        </member>
        <member name="P:Z.BulkOperations.BulkOperation.BatchSize">
            <summary>Gets or sets the size of the batch.</summary>
            <value>The size of the batch.</value>
        </member>
        <member name="P:Z.BulkOperations.BulkOperation.BatchTimeout">
            <summary>Gets or sets the batch timeout.</summary>
            <value>The batch timeout.</value>
        </member>
        <member name="P:Z.BulkOperations.BulkOperation.CaseSensitive">
            <summary>Gets or sets the case sensitive mode.</summary>
            <value>The case sensitive mode.</value>
        </member>
        <member name="P:Z.BulkOperations.BulkOperation.ColumnInputNames">
            <summary>Gets or sets a list of property names to input.</summary>
        </member>
        <member name="P:Z.BulkOperations.BulkOperation.ColumnInputOutputNames">
            <summary>Gets or sets a list of property names to input/output.</summary>
        </member>
        <member name="P:Z.BulkOperations.BulkOperation.ColumnOutputNames">
            <summary>Gets or sets a list of property names to output.</summary>
        </member>
        <member name="P:Z.BulkOperations.BulkOperation.ColumnPrimaryKeyNames">
            <summary>Gets or sets a list of property names of primary key.</summary>
        </member>
        <member name="P:Z.BulkOperations.BulkOperation.ColumnSynchronizeDeleteKeySubsetNames">
            <summary>Gets or sets a list of property names to use in synchronize delete key subset.</summary>
        </member>
        <member name="P:Z.BulkOperations.BulkOperation.IgnoreOnMergeInsertNames">
            <summary>Gets or sets a list of property names to ignore on merge insert.</summary>
        </member>
        <member name="P:Z.BulkOperations.BulkOperation.IgnoreOnMergeUpdateNames">
            <summary>Gets or sets a list of property names to ignore on merge update.</summary>
        </member>
        <member name="P:Z.BulkOperations.BulkOperation.IgnoreOnSynchronizeInsertNames">
            <summary>Gets or sets a list of property names to ignore on synchronize insert.</summary>
        </member>
        <member name="P:Z.BulkOperations.BulkOperation.IgnoreOnSynchronizeUpdateNames">
            <summary>Gets or sets a list of property names to ignore on synchronize update.</summary>
        </member>
        <member name="P:Z.BulkOperations.BulkOperation.IgnoreOnInsertNames">
            <summary>Gets or sets a list of property names to ignore on insert.</summary>
        </member>
        <member name="P:Z.BulkOperations.BulkOperation.IgnoreOnUpdateNames">
            <summary>Gets or sets a list of property names to ignore on update.</summary>
        </member>
        <member name="P:Z.BulkOperations.BulkOperation.MergeMatchedAndConditionNames">
            <summary>Gets or sets a list of property names to use in the `AND CONDITION` when merge update is matched.</summary>
        </member>
        <member name="P:Z.BulkOperations.BulkOperation.MergeMatchedAndOneNotConditionNames">
            <summary>Gets or sets a list of property names to use in the `AND (ONE NOT MEET CONDITION)` when merge update is matched.</summary>
        </member>
        <member name="P:Z.BulkOperations.BulkOperation.UpdateMatchedAndConditionNames">
            <summary>Gets or sets a list of property names to use in the `AND CONDITION` when update is matched.</summary>
        </member>
        <member name="P:Z.BulkOperations.BulkOperation.UpdateMatchedAndOneNotConditionNames">
            <summary>Gets or sets a list of property names to use in the `AND (ONE NOT MEET CONDITION)` when update is matched.</summary>
        </member>
        <member name="P:Z.BulkOperations.BulkOperation.DeleteMatchedAndConditionNames">
            <summary>Gets or sets a list of property names to use in the `AND CONDITION` when delete is matched.</summary>
        </member>
        <member name="P:Z.BulkOperations.BulkOperation.DeleteMatchedAndOneNotConditionNames">
            <summary>Gets or sets a list of property names to use in the `AND (ONE NOT MEET CONDITION)` when delete is matched.</summary>
        </member>
        <member name="P:Z.BulkOperations.BulkOperation.SynchronizeMatchedAndConditionNames">
            <summary>Gets or sets a list of property names to use in the `AND CONDITION` when synchronize (merge) update is matched.</summary>
        </member>
        <member name="P:Z.BulkOperations.BulkOperation.SynchronizeMatchedAndOneNotConditionNames">
            <summary>Gets or sets a list of property names to use in the `AND (ONE NOT MEET CONDITION)` when synchronize (merge) update is matched.</summary>
        </member>
        <member name="P:Z.BulkOperations.BulkOperation.IgnoreOnMergeMatchedAndConditionNames">
            <summary>Gets or sets a list of property names to ignore in the `AND CONDITION` when merge update is matched. All columns are part of the condition except those from the ignore.</summary>
        </member>
        <member name="P:Z.BulkOperations.BulkOperation.IgnoreOnMergeMatchedAndOneNotConditionNames">
            <summary>Gets or sets a list of property names to ignore in the `AND (ONE NOT MEET CONDITION)` when merge update is matched. All columns are part of the condition except those from the ignore.</summary>
        </member>
        <member name="P:Z.BulkOperations.BulkOperation.IgnoreOnUpdateMatchedAndConditionNames">
            <summary>Gets or sets a list of property names to ignore in the `AND CONDITION` when update is matched. All columns are part of the condition except those from the ignore.</summary>
        </member>
        <member name="P:Z.BulkOperations.BulkOperation.IgnoreOnUpdateMatchedAndOneNotConditionNames">
            <summary>Gets or sets a list of property names to ignore in the `AND (ONE NOT MEET CONDITION)` when update is matched. All columns are part of the condition except those from the ignore.</summary>
        </member>
        <member name="P:Z.BulkOperations.BulkOperation.IgnoreOnSynchronizeMatchedAndConditionNames">
            <summary>Gets or sets a list of property names  to ignore in the `AND CONDITION` when synchronize (merge) update is matched. All columns are part of the condition except those from the ignore.</summary>
        </member>
        <member name="P:Z.BulkOperations.BulkOperation.IgnoreOnSynchronizeMatchedAndOneNotConditionNames">
            <summary>Gets or sets a list of property names to ignore in the `AND (ONE NOT MEET CONDITION)` when synchronize (merge) update is matched. All columns are part of the condition except those from the ignore.</summary>
        </member>
        <member name="P:Z.BulkOperations.BulkOperation.CoalesceOnMergeUpdateNames">
            <summary>Gets or sets a list of property names to use for columns to coalesce, ISNULL(StagingValue, DestinationValue).</summary>
        </member>
        <member name="P:Z.BulkOperations.BulkOperation.CoalesceDestinationOnMergeUpdateNames">
            <summary>Gets or sets a list of property names to use for columns to coalesce, ISNULL(DestinationValue, StagingValue).</summary>
        </member>
        <member name="P:Z.BulkOperations.BulkOperation.CoalesceOnUpdateNames">
            <summary>Gets or sets a list of property names to use for columns to coalesce, ISNULL(StagingValue, DestinationValue).</summary>
        </member>
        <member name="P:Z.BulkOperations.BulkOperation.CoalesceDestinationOnUpdateNames">
            <summary>Gets or sets a list of property names to use for columns to coalesce, ISNULL(DestinationValue, StagingValue).</summary>
        </member>
        <member name="P:Z.BulkOperations.BulkOperation.ColumnInputExpression">
            <summary>Gets or sets the column input expression.</summary>
            <value>The column input expression.</value>
        </member>
        <member name="P:Z.BulkOperations.BulkOperation.ColumnInputOutputExpression">
            <summary>Gets or sets the column input/output expression.</summary>
            <value>The column input/output expression.</value>
        </member>
        <member name="P:Z.BulkOperations.BulkOperation.ColumnOutputExpression">
            <summary>Gets or sets the column output expression.</summary>
            <value>The column output expression.</value>
        </member>
        <member name="P:Z.BulkOperations.BulkOperation.ColumnPrimaryKeyExpression">
            <summary>Gets or sets the column primary key expression.</summary>
            <value>The column primary key expression.</value>
        </member>
        <member name="P:Z.BulkOperations.BulkOperation.ColumnSynchronizeDeleteKeySubsetExpression">
            <summary>Gets or sets the column synchronize delete key subset expression.</summary>
            <value>The column synchronize delete key subset expression.</value>
        </member>
        <member name="P:Z.BulkOperations.BulkOperation.IgnoreOnInsertExpression">
            <summary>Gets or sets the ignore on insert expression.</summary>
            <value>The ignore on insert expression.</value>
        </member>
        <member name="P:Z.BulkOperations.BulkOperation.IgnoreOnUpdateExpression">
            <summary>Gets or sets the ignore on update expression.</summary>
            <value>The ignore on update expression.</value>
        </member>
        <member name="P:Z.BulkOperations.BulkOperation.IgnoreOnMergeInsertExpression">
            <summary>Gets or sets the ignore on merge insert expression.</summary>
            <value>The ignore on merge insert expression.</value>
        </member>
        <member name="P:Z.BulkOperations.BulkOperation.IgnoreOnMergeUpdateExpression">
            <summary>Gets or sets the ignore on merge update expression.</summary>
            <value>The ignore on merge update expression.</value>
        </member>
        <member name="P:Z.BulkOperations.BulkOperation.IgnoreOnSynchronizeInsertExpression">
            <summary>Gets or sets the ignore on synchronize insert expression.</summary>
            <value>The ignore on synchronize insert expression.</value>
        </member>
        <member name="P:Z.BulkOperations.BulkOperation.IgnoreOnSynchronizeUpdateExpression">
            <summary>Gets or sets the ignore on synchronize update expression.</summary>
            <value>The ignore on synchronize update expression.</value>
        </member>
        <member name="P:Z.BulkOperations.BulkOperation.MergeMatchedAndConditionExpression">
            <summary>Gets or sets the `AND CONDITION` to add when merge update is matched.</summary>
            <value>The `AND CONDITION` to add when merge update is matched.</value>
        </member>
        <member name="P:Z.BulkOperations.BulkOperation.MergeMatchedAndOneNotConditionExpression">
            <summary>Gets or sets the `AND (ONE NOT MEET CONDITION)` to add when merge update is matched.</summary>
            <value>The `AND (ONE NOT MEET CONDITION)` to add when merge update is matched.</value>
        </member>
        <member name="P:Z.BulkOperations.BulkOperation.UpdateMatchedAndConditionExpression">
            <summary>Gets or sets the `AND CONDITION` to add when update is matched.</summary>
            <value>The `AND CONDITION` to add when update is matched.</value>
        </member>
        <member name="P:Z.BulkOperations.BulkOperation.UpdateMatchedAndOneNotConditionExpression">
            <summary>Gets or sets the `AND (ONE NOT MEET CONDITION)` to add when update is matched.</summary>
            <value>The `AND (ONE NOT MEET CONDITION)` to add when update is matched.</value>
        </member>
        <member name="P:Z.BulkOperations.BulkOperation.DeleteMatchedAndConditionExpression">
            <summary>Gets or sets the `AND CONDITION` to add when delete is matched.</summary>
            <value>The `AND CONDITION` to add when delete is matched.</value>
        </member>
        <member name="P:Z.BulkOperations.BulkOperation.DeleteMatchedAndOneNotConditionExpression">
            <summary>Gets or sets the `AND (ONE NOT MEET CONDITION)` to add when delete is matched.</summary>
            <value>The `AND (ONE NOT MEET CONDITION)` to add when delete is matched.</value>
        </member>
        <member name="P:Z.BulkOperations.BulkOperation.SynchronizeMatchedAndConditionExpression">
            <summary>Gets or sets the `AND CONDITION` to add when synchronize (merge) update is matched.</summary>
            <value>The `AND CONDITION` to add when synchronize (merge) update is matched.</value>
        </member>
        <member name="P:Z.BulkOperations.BulkOperation.SynchronizeMatchedAndOneNotConditionExpression">
            <summary>Gets or sets the `AND (ONE NOT MEET CONDITION)` to add when synchronize (merge) update is matched.</summary>
            <value>The `AND (ONE NOT MEET CONDITION)` to add when synchronize (merge) update is matched.</value>
        </member>
        <member name="P:Z.BulkOperations.BulkOperation.IgnoreOnMergeMatchedAndConditionExpression">
            <summary>Gets or sets the `AND CONDITION` to add when merge update is matched. All columns are part of the condition except those from the ignore expression.</summary>
            <value>The `AND CONDITION` to add when merge update is matched. All columns are part of the condition except those from the ignore expression.</value>
        </member>
        <member name="P:Z.BulkOperations.BulkOperation.IgnoreOnMergeMatchedAndOneNotConditionExpression">
            <summary>Gets or sets the `AND (ONE NOT MEET CONDITION)` to add when merge update is matched. All columns are part of the condition except those from the ignore expression.</summary>
            <value>The `AND (ONE NOT MEET CONDITION)` to add when merge update is matched. All columns are part of the condition except those from the ignore expression.</value>
        </member>
        <member name="P:Z.BulkOperations.BulkOperation.IgnoreOnUpdateMatchedAndConditionExpression">
            <summary>Gets or sets the `AND CONDITION` to add when update is matched. All columns are part of the condition except those from the ignore expression.</summary>
            <value>The `AND CONDITION` to add when update is matched. All columns are part of the condition except those from the ignore expression.</value>
        </member>
        <member name="P:Z.BulkOperations.BulkOperation.IgnoreOnUpdateMatchedAndOneNotConditionExpression">
            <summary>Gets or sets the `AND (ONE NOT MEET CONDITION)` to add when update is matched. All columns are part of the condition except those from the ignore expression.</summary>
            <value>The `AND (ONE NOT MEET CONDITION)` to add when update is matched. All columns are part of the condition except those from the ignore expression.</value>
        </member>
        <member name="P:Z.BulkOperations.BulkOperation.IgnoreOnSynchronizeMatchedAndConditionExpression">
            <summary>Gets or sets the `AND CONDITION` to add when synchronize (merge) update is matched. All columns are part of the condition except those from the ignore expression.</summary>
            <value>The `AND CONDITION` to add when synchronize (merge) update is matched. All columns are part of the condition except those from the ignore expression.</value>
        </member>
        <member name="P:Z.BulkOperations.BulkOperation.IgnoreOnSynchronizeMatchedAndOneNotConditionExpression">
            <summary>Gets or sets the `AND (ONE NOT MEET CONDITION)` to add when synchronize (merge) update is matched. All columns are part of the condition except those from the ignore expression.</summary>
            <value>The `AND (ONE NOT MEET CONDITION)` to add when synchronize (merge) update is matched. All columns are part of the condition except those from the ignore expression.</value>
        </member>
        <member name="P:Z.BulkOperations.BulkOperation.CoalesceOnMergeUpdateExpression">
            <summary>Gets or sets columns to coalesce, ISNULL(StagingValue, DestinationValue).</summary>
            <value>The columns to coalesce, ISNULL(StagingValue, DestinationValue).</value>
        </member>
        <member name="P:Z.BulkOperations.BulkOperation.CoalesceDestinationOnMergeUpdateExpression">
            <summary>Gets or sets columns to coalesce, ISNULL(DestinationValue, StagingValue).</summary>
            <value>The columns to coalesce, ISNULL(DestinationValue, StagingValue).</value>
        </member>
        <member name="P:Z.BulkOperations.BulkOperation.CoalesceOnUpdateExpression">
            <summary>Gets or sets columns to coalesce, ISNULL(StagingValue, DestinationValue).</summary>
            <value>The columns to coalesce, ISNULL(StagingValue, DestinationValue).</value>
        </member>
        <member name="P:Z.BulkOperations.BulkOperation.CoalesceDestinationOnUpdateExpression">
            <summary>Gets or sets columns to coalesce, ISNULL(DestinationValue, StagingValue).</summary>
            <value>The columns to coalesce, ISNULL(DestinationValue, StagingValue).</value>
        </member>
        <member name="P:Z.BulkOperations.BulkOperation.ColumnMappings">
            <summary>Gets or sets the column mappings.</summary>
            <value>The column mappings.</value>
        </member>
        <member name="P:Z.BulkOperations.BulkOperation.OnMergeUpdateUseCoalesce">
            <summary>
            Gets or sets a value indicating whether the on merge update use coalesce.
            </summary>
            <value>True if on merge update use coalesce, false if not.</value>
        </member>
        <member name="P:Z.BulkOperations.BulkOperation.OnUpdateUseCoalesce">
            <summary>
            Gets or sets a value indicating whether the on update use coalesce.
            </summary>
            <value>True if on update use coalesce, false if not.</value>
        </member>
        <member name="P:Z.BulkOperations.BulkOperation.DefaultValueResolution">
            <summary>Gets or sets the default value resolution.</summary>
            <value>The default value resolution.</value>
        </member>
        <member name="P:Z.BulkOperations.BulkOperation.CommandParameterAddRowIndex">
            <summary>Gets or sets a value indicating whether the command parameter add row index.</summary>
            <value>true if command parameter add row index, false if not.</value>
        </member>
        <member name="P:Z.BulkOperations.BulkOperation.CommandParameterPrefix">
            <summary>Gets or sets the command parameter prefix.</summary>
            <value>The command parameter prefix.</value>
        </member>
        <member name="P:Z.BulkOperations.BulkOperation.CommandParameterSuffix">
            <summary>Gets or sets the command parameter suffix.</summary>
            <value>The command parameter suffix.</value>
        </member>
        <member name="P:Z.BulkOperations.BulkOperation.UseCompile">
            <summary>Gets or sets a value indicating whether this object use compile.</summary>
            <value>true if use compile, false if not.</value>
        </member>
        <member name="P:Z.BulkOperations.BulkOperation.Connection">
            <summary>Gets or sets the connection.</summary>
            <value>The connection.</value>
        </member>
        <member name="P:Z.BulkOperations.BulkOperation.ConnectionName">
            <summary>Gets or sets the name of the connection.</summary>
            <value>The name of the connection.</value>
        </member>
        <member name="P:Z.BulkOperations.BulkOperation.ConnectionString">
            <summary>Gets or sets the connection string.</summary>
            <value>The connection string.</value>
        </member>
        <member name="P:Z.BulkOperations.BulkOperation.ConnectionFactory">
            <summary>Gets or sets the connection factory.</summary>
            <value>The connection factory.</value>
        </member>
        <member name="P:Z.BulkOperations.BulkOperation.CustomProvider">
            <summary>Gets or sets the custom provider.</summary>
            <value>The custom provider.</value>
        </member>
        <member name="P:Z.BulkOperations.BulkOperation.DataSource">
            <summary>Gets or sets the data source.</summary>
            <value>The data source.</value>
        </member>
        <member name="P:Z.BulkOperations.BulkOperation.DestinationTableName">
            <summary>Gets or sets the name of the destination table.</summary>
            <value>The name of the destination table.</value>
        </member>
        <member name="F:Z.BulkOperations.BulkOperation.ContextFactory">
            <summary>Gets or sets the context factory function to use when a working context is requested.</summary>
        </member>
        <member name="P:Z.BulkOperations.BulkOperation.ErrorMode">
            <summary>Gets or sets the error mode.</summary>
            <value>The error mode.</value>
        </member>
        <member name="P:Z.BulkOperations.BulkOperation.Errors">
            <summary>Gets or sets the error objects.</summary>
            <value>The error objects.</value>
        </member>
        <member name="P:Z.BulkOperations.BulkOperation.BulkOperationExecuting">
            <summary>Gets or sets the bulk operation executing.</summary>
            <value>The bulk operation executing.</value>
        </member>
        <member name="P:Z.BulkOperations.BulkOperation.BulkOperationExecuted">
            <summary>Gets or sets the bulk operation executed.</summary>
            <value>The bulk operation executed.</value>
        </member>
        <member name="P:Z.BulkOperations.BulkOperation.DeleteFromQueryExecuted">
            <summary>Gets or sets the delete from query executed.</summary>
            <value>The delete from query executed.</value>
        </member>
        <member name="P:Z.BulkOperations.BulkOperation.MergeMatchedAndFormula">
            <summary>Gets or sets the formula to add after the "AND" in the merge statement.</summary>
            <value>The formula to add after the "AND" in the merge statement.</value>
        </member>
        <member name="P:Z.BulkOperations.BulkOperation.SynchronizeMatchedAndFormula">
            <summary>Gets or sets the formula to add after the "AND" in the synchronize (merge) statement.</summary>
            <value>The formula to add after the "AND" in the synchronize (merge) statement.</value>
        </member>
        <member name="P:Z.BulkOperations.BulkOperation.UpdateMatchedAndFormula">
            <summary>Gets or sets the formula to add after the "AND" in the update statement (in the merge part).</summary>
            <value>The formula to add after the "AND" in the update statement (in the merge part).</value>
        </member>
        <member name="P:Z.BulkOperations.BulkOperation.DeleteMatchedAndFormula">
            <summary>Gets or sets the formula to add after the "AND" in the delete statement (in the merge part).</summary>
            <value>The formula to add after the "AND" in the delete statement (in the merge part).</value>
        </member>
        <member name="P:Z.BulkOperations.BulkOperation.UpdatePrimaryKeyAndFormula">
            <summary>Gets or sets the formula to add after the "AND" in the update statement when joining with the key.</summary>
            <value>The formula to add after the "AND" in the update statement  when joining with the key.</value>
        </member>
        <member name="P:Z.BulkOperations.BulkOperation.MergePrimaryKeyAndFormula">
            <summary>Gets or sets the formula to add after the "AND" in the merge statement when joining with the key (WARNING: If the destination table is empty, the condition is always true and rows are always inserted).</summary>
            <value>The formula to add after the "AND" in the merge statement  when joining with the key (WARNING: If the destination table is empty, the condition is always true and rows are always inserted).</value>
        </member>
        <member name="P:Z.BulkOperations.BulkOperation.InsertPrimaryKeyAndFormula">
            <summary>Gets or sets the formula to add after the "AND" in the insert statement when joining with the key (WARNING: If the destination table is empty, the condition is always true and rows are always inserted).</summary>
            <value>The formula to add after the "AND" in the insert statement  when joining with the key (WARNING: If the destination table is empty, the condition is always true and rows are always inserted).</value>
        </member>
        <member name="P:Z.BulkOperations.BulkOperation.DeletePrimaryKeyAndFormula">
            <summary>Gets or sets the formula to add after the "AND" in the delete statement when joining with the key.</summary>
            <value>The formula to add after the "AND" in the delete statement  when joining with the key.</value>
        </member>
        <member name="P:Z.BulkOperations.BulkOperation.SynchronizePrimaryKeyAndFormulaDelete">
            <summary>Gets or sets the formula to add after the "AND" in the delete statement when joining with the key (Use 'SynchronizePrimaryKeyAndFormulaMerge' for INSERT/UPDATE).</summary>
            <value>The formula to add after the "AND" in the delete statement  when joining with the key (Use 'SynchronizePrimaryKeyAndFormulaMerge' for INSERT/UPDATE).</value>
        </member>
        <member name="P:Z.BulkOperations.BulkOperation.SynchronizePrimaryKeyAndFormulaMerge">
            <summary>Gets or sets the formula to add after the "AND" in the merge statement when joining with the key (Use 'SynchronizePrimaryKeyAndFormulaDelete' for the DELETE).</summary>
            <value>The formula to add after the "AND" in the merge statement  when joining with the key (Use 'SynchronizePrimaryKeyAndFormulaDelete' for the DELETE).</value>
        </member>
        <member name="P:Z.BulkOperations.BulkOperation.Log">
            <summary>Gets or sets the log.</summary>
            <value>The log.</value>
        </member>
        <member name="P:Z.BulkOperations.BulkOperation.LogDump">
            <summary>Gets or sets the log dump.</summary>
            <value>The log dump.</value>
        </member>
        <member name="P:Z.BulkOperations.BulkOperation.UseLogDump">
            <summary>Gets or sets a value indicating whether this object use log dump.</summary>
            <value>true if use log dump, false if not.</value>
        </member>
        <member name="P:Z.BulkOperations.BulkOperation.IgnoreOnMergeUpdate">
            <summary>Gets or sets a value indicating whether the UPDATE will be performed for the Merge method.</summary>
        </member>
        <member name="P:Z.BulkOperations.BulkOperation.UseOracleGlobalSequenceIndexTable">
            <summary>
                Gets or sets a value indicating whether this object use oracle global identity index
                table.
            </summary>
            <value>true if use oracle global identity index table, false if not.</value>
        </member>
        <member name="P:Z.BulkOperations.BulkOperation.ForceSelectOutput">
            <summary>
            Gets or sets a value indicating whether the select output should be forced.
            </summary>
            <value>true if force select output, false if not.</value>
        </member>
        <member name="P:Z.BulkOperations.BulkOperation.ParallelBatchByTask">
            <summary>Gets or sets the parallel batch by task.</summary>
            <value>The parallel batch by task.</value>
        </member>
        <member name="P:Z.BulkOperations.BulkOperation.ParallelMinBatch">
            <summary>Gets or sets the parallel minimum batch.</summary>
            <value>The parallel minimum batch.</value>
        </member>
        <member name="P:Z.BulkOperations.BulkOperation.ParallelMinRecord">
            <summary>Gets or sets the parallel minimum record.</summary>
            <value>The parallel minimum record.</value>
        </member>
        <member name="P:Z.BulkOperations.BulkOperation.UseParallel">
            <summary>Gets or sets a value indicating whether this object use parallel.</summary>
            <value>true if use parallel, false if not.</value>
        </member>
        <member name="P:Z.BulkOperations.BulkOperation.AllowDuplicateKeys">
            <summary>Gets or sets a value indicating whether we allow duplicate kyes.</summary>
            <value>true if allow duplicate kyes, false if not.</value>
        </member>
        <member name="P:Z.BulkOperations.BulkOperation.AllowUpdatePrimaryKeys">
            <summary>Gets or sets a value indicating whether we allow update primary keys.</summary>
            <value>true if allow update primary keys, false if not.</value>
        </member>
        <member name="P:Z.BulkOperations.BulkOperation.InsertIfNotExists">
            <summary>Gets or sets a value indicating whether the insert if not exists.</summary>
            <value>true if insert if not exists, false if not.</value>
        </member>
        <member name="P:Z.BulkOperations.BulkOperation.Provider">
            <summary>Gets or sets the provider.</summary>
            <value>The provider.</value>
        </member>
        <member name="P:Z.BulkOperations.BulkOperation.ProviderAssembly">
            <summary>Gets or sets the provider assembly.</summary>
            <value>The provider assembly.</value>
        </member>
        <member name="P:Z.BulkOperations.BulkOperation.Resolution">
            <summary>Gets or sets the resolution mode.</summary>
            <value>The resolution mode.</value>
        </member>
        <member name="P:Z.BulkOperations.BulkOperation.ForceTriggerResolution">
            <summary>
            Gets or sets a value indicating whether the trigger resolution should be forced.
            </summary>
            <value>True if force trigger resolution, false if not.</value>
        </member>
        <member name="P:Z.BulkOperations.BulkOperation.ResultInfo">
            <summary>Gets or sets information describing the result.</summary>
            <value>Information describing the result.</value>
        </member>
        <member name="P:Z.BulkOperations.BulkOperation.RowsAffected">
            <summary>Gets or sets the number of row affected by the last query.</summary>
            <value>The number of row affected by the last query.</value>
        </member>
        <member name="P:Z.BulkOperations.BulkOperation.UseRowsAffected">
            <summary>Gets or sets if the RowAffected should be returned in the ResultInfo (will make the bulk operation slower).</summary>
            <value>True if the RowAffected should be returned in the ResultInfo (will make the bulk operation slower).</value>
        </member>
        <member name="P:Z.BulkOperations.BulkOperation.AutoTruncate">
            <summary>Gets or sets a value indicating whether string value are automatic truncated.</summary>
            <value>True if string value are automatic truncated, false if not.</value>
        </member>
        <member name="P:Z.BulkOperations.BulkOperation.IsReadOnly">
            <summary>Gets or sets a value indicating whether this object is read only.</summary>
            <value>True if this object is read only, false if not.</value>
        </member>
        <member name="P:Z.BulkOperations.BulkOperation.IsCheckConstraintOnInsertDisabled">
            <summary>
            Gets or sets is Check Constraint is disabled on Insert. **DANGER**: This option force a SqlBulkCopy and is incompatible with almost all options.
            </summary>
        </member>
        <member name="P:Z.BulkOperations.BulkOperation.SqlBulkCopyOptions">
            <summary>Gets or sets the provider.</summary>
            <value>The provider.</value>
        </member>
        <member name="P:Z.BulkOperations.BulkOperation.MergeKeepIdentity">
            <summary>Gets or sets a value indicating whether the merge keep identity.</summary>
            <value>true if merge keep identity, false if not.</value>
        </member>
        <member name="P:Z.BulkOperations.BulkOperation.SynchronizeKeepidentity">
            <summary>Gets or sets a value indicating whether the synchronize keep identity.</summary>
            <value>true if synchronize keep identity, false if not.</value>
        </member>
        <member name="P:Z.BulkOperations.BulkOperation.InsertKeepIdentity">
            <summary>Gets or sets a value indicating whether the insert keep identity.</summary>
            <value>true if insert keep identity, false if not.</value>
        </member>
        <member name="P:Z.BulkOperations.BulkOperation.HasColumnEncrypted">
            <summary>
                Gets or sets a value indicating whether this object has column encrypted.
            </summary>
            <value>true if this object has column encrypted, false if not.</value>
        </member>
        <member name="P:Z.BulkOperations.BulkOperation.SynchronizeOnlyDelete">
            <summary>
                Gets or sets a value indicating whether the synchronize operation should only do the delete part.
            </summary>
            <value>true if the synchronize operation should only do the delete part, false if not.</value>
        </member>
        <member name="P:Z.BulkOperations.BulkOperation.SynchronizeIgnoreUpdate">
            <summary>Gets or sets a value indicating whether the synchronize ignore the update part.</summary>
            <value>True if synchronize ignore the update part, false if not.</value>
        </member>
        <member name="P:Z.BulkOperations.BulkOperation.TemporaryTableBatchByTable">
            <summary>Gets or sets the temporary table batch by table.</summary>
            <value>The temporary table batch by table.</value>
        </member>
        <member name="P:Z.BulkOperations.BulkOperation.TemporaryTableInsertBatchSize">
            <summary>Gets or sets the size of the temporary table insert batch.</summary>
            <value>The size of the temporary table insert batch.</value>
        </member>
        <member name="P:Z.BulkOperations.BulkOperation.TemporaryTableMinRecord">
            <summary>Gets or sets the temporary table minimum record.</summary>
            <value>The temporary table minimum record.</value>
        </member>
        <member name="P:Z.BulkOperations.BulkOperation.TemporaryTableUseTableLock">
            <summary>Gets or sets a value indicating whether the temporary table use table is locked.</summary>
            <value>true if temporary table use table lock, false if not.</value>
        </member>
        <member name="P:Z.BulkOperations.BulkOperation.UseTableLock">
            <summary>Gets or sets a value indicating whether the destination table should be locked.</summary>
            <value>true if the destination table should be locked.</value>
        </member>
        <member name="P:Z.BulkOperations.BulkOperation.TemporaryTableSchemaName">
            <summary>Gets or sets the name of the temporary table schema.</summary>
            <value>The name of the temporary table schema.</value>
        </member>
        <member name="P:Z.BulkOperations.BulkOperation.UsePermanentTable">
            <summary>Gets or sets if the code should use permanent table instead of temporary table.</summary>
            <value>if the code should use permanent table instead of temporary table.</value>
        </member>
        <member name="P:Z.BulkOperations.BulkOperation.TemporaryTableName">
            <summary>Gets or sets the name of the temporary table.</summary>
            <value>The name of the temporary table.</value>
        </member>
        <member name="P:Z.BulkOperations.BulkOperation.TemporaryTablePersist">
            <summary>Gets or sets a value indicating whether the temporary table persist.</summary>
            <value>True if temporary table persist, false if not.</value>
        </member>
        <member name="P:Z.BulkOperations.BulkOperation.TemporaryTableIsMemory">
            <summary>Gets or sets a value indicating whether the temporary table is memory.</summary>
            <value>True if temporary table is memory, false if not.</value>
        </member>
        <member name="P:Z.BulkOperations.BulkOperation.Transaction">
            <summary>Gets or sets the transaction.</summary>
            <value>The transaction.</value>
        </member>
        <member name="P:Z.BulkOperations.BulkOperation.InternalTransaction">
            <summary>Gets or sets the internal transaction.</summary>
            <value>The internal transaction.</value>
        </member>
        <member name="P:Z.BulkOperations.BulkOperation.RetryCount">
            <summary>Gets or sets the number of retries.</summary>
            <value>The number of retries.</value>
        </member>
        <member name="P:Z.BulkOperations.BulkOperation.RetryInterval">
            <summary>Gets or sets the retry interval.</summary>
            <value>The retry interval.</value>
        </member>
        <member name="P:Z.BulkOperations.BulkOperation.UnsafeMode">
            <summary>Gets or sets a value indicating whether the unsafe mode is activated.</summary>
            <value>True if unsafe mode, false if not.</value>
        </member>
        <member name="P:Z.BulkOperations.BulkOperation.ValidateAllSourceMapped">
            <summary>
            Gets or sets a value indicating whether or not to validate all source members are mapped.
            </summary>
            <value>True if validate all source members are mapped, false if not.</value>
        </member>
        <member name="P:Z.BulkOperations.BulkOperation.ValidateAllDestinationMapped">
            <summary>
            Gets or sets a value indicating whether or not to validate all destination columns are mapped.
            </summary>
            <value>True if validate all destination columns are mapped, false if not.</value>
        </member>
        <member name="M:Z.BulkOperations.BulkOperation`1.BulkDelete(System.Collections.Generic.List{`0})">
            <summary>Bulk delete.</summary>
            <param name="datasource">The datasource.</param>
        </member>
        <member name="M:Z.BulkOperations.BulkOperation`1.BulkDeleteAsync(System.Collections.Generic.List{`0},System.Threading.CancellationToken)">
            <summary>Bulk delete.</summary>
            <param name="datasource">The datasource.</param>
            <param name="cancellationToken">The cancellation token.</param>
        </member>
        <member name="M:Z.BulkOperations.BulkOperation`1.BulkInsert(System.Collections.Generic.List{`0})">
            <summary>Bulk insert.</summary>
            <param name="datasource">The datasource.</param>
        </member>
        <member name="M:Z.BulkOperations.BulkOperation`1.BulkInsertAsync(System.Collections.Generic.List{`0},System.Threading.CancellationToken)">
            <summary>Bulk insert.</summary>
            <param name="datasource">The datasource.</param>
            <param name="cancellationToken">The cancellation token.</param>
        </member>
        <member name="M:Z.BulkOperations.BulkOperation`1.BulkMerge(System.Collections.Generic.List{`0})">
            <summary>Bulk merge.</summary>
            <param name="datasource">The datasource.</param>
        </member>
        <member name="M:Z.BulkOperations.BulkOperation`1.BulkMergeAsync(System.Collections.Generic.List{`0},System.Threading.CancellationToken)">
            <summary>Bulk merge.</summary>
            <param name="datasource">The datasource.</param>
            <param name="cancellationToken">The cancellation token.</param>
        </member>
        <member name="M:Z.BulkOperations.BulkOperation`1.BulkSynchronize(System.Collections.Generic.List{`0})">
            <summary>Bulk synchronize.</summary>
            <param name="datasource">The datasource.</param>
        </member>
        <member name="M:Z.BulkOperations.BulkOperation`1.BulkSynchronizeAsync(System.Collections.Generic.List{`0},System.Threading.CancellationToken)">
            <summary>Bulk synchronize.</summary>
            <param name="datasource">The datasource.</param>
            <param name="cancellationToken">The cancellation token.</param>
        </member>
        <member name="M:Z.BulkOperations.BulkOperation`1.BulkUpdate(System.Collections.Generic.List{`0})">
            <summary>Bulk update.</summary>
            <param name="datasource">The datasource.</param>
        </member>
        <member name="M:Z.BulkOperations.BulkOperation`1.BulkUpdateAsync(System.Collections.Generic.List{`0},System.Threading.CancellationToken)">
            <summary>Bulk update.</summary>
            <param name="datasource">The datasource.</param>
            <param name="cancellationToken">The cancellation token.</param>
        </member>
        <member name="P:Z.BulkOperations.BulkOperation`1.ColumnMappings">
            <summary>Gets or sets the column mappings.</summary>
            <value>The column mappings.</value>
        </member>
        <member name="P:Z.BulkOperations.BulkOperation`1.ColumnInputExpression">
            <summary>Gets or sets the column input expression.</summary>
            <value>The column input expression.</value>
        </member>
        <member name="P:Z.BulkOperations.BulkOperation`1.ColumnInputOutputExpression">
            <summary>Gets or sets the column input/output expression.</summary>
            <value>The column input/output expression.</value>
        </member>
        <member name="P:Z.BulkOperations.BulkOperation`1.ColumnOutputExpression">
            <summary>Gets or sets the column output expression.</summary>
            <value>The column output expression.</value>
        </member>
        <member name="P:Z.BulkOperations.BulkOperation`1.AutoMapKeyExpression">
            <summary>Gets or sets the automatic map key expression.</summary>
            <value>The automatic map key expression.</value>
        </member>
        <member name="P:Z.BulkOperations.BulkOperation`1.AutoMapIdentityExpression">
            <summary>Gets or sets the automatic map identity expression.</summary>
            <value>The automatic map identity expression.</value>
        </member>
        <member name="P:Z.BulkOperations.BulkOperation`1.ColumnPrimaryKeyExpression">
            <summary>Gets or sets the column primary key expression.</summary>
            <value>The column primary key expression.</value>
        </member>
        <member name="P:Z.BulkOperations.BulkOperation`1.ColumnSynchronizeDeleteKeySubsetExpression">
            <summary>Gets or sets the column primary key expression.</summary>
            <value>The column primary key expression.</value>
        </member>
        <member name="P:Z.BulkOperations.BulkOperation`1.IgnoreOnInsertExpression">
            <summary>Gets or sets the ignore on insert expression.</summary>
            <value>The ignore on insert expression.</value>
        </member>
        <member name="P:Z.BulkOperations.BulkOperation`1.IgnoreOnUpdateExpression">
            <summary>Gets or sets the ignore on update expression.</summary>
            <value>The ignore on update expression.</value>
        </member>
        <member name="P:Z.BulkOperations.BulkOperation`1.IgnoreOnMergeInsertExpression">
            <summary>Gets or sets the ignore on merge insert expression.</summary>
            <value>The ignore on merge insert expression.</value>
        </member>
        <member name="P:Z.BulkOperations.BulkOperation`1.IgnoreOnMergeUpdateExpression">
            <summary>Gets or sets the ignore on merge update expression.</summary>
            <value>The ignore on merge update expression.</value>
        </member>
        <member name="P:Z.BulkOperations.BulkOperation`1.IgnoreOnSynchronizeInsertExpression">
            <summary>Gets or sets the ignore on synchronize insert expression.</summary>
            <value>The ignore on synchronize insert expression.</value>
        </member>
        <member name="P:Z.BulkOperations.BulkOperation`1.IgnoreOnSynchronizeUpdateExpression">
            <summary>Gets or sets the ignore on synchronize update expression.</summary>
            <value>The ignore on synchronize update expression.</value>
        </member>
        <member name="P:Z.BulkOperations.BulkOperation`1.MergeMatchedAndConditionExpression">
            <summary>Gets or sets the `AND CONDITION` to add when merge update is matched.</summary>
            <value>The `AND CONDITION` to add when merge update is matched.</value>
        </member>
        <member name="P:Z.BulkOperations.BulkOperation`1.MergeMatchedAndOneNotConditionExpression">
            <summary>Gets or sets the `AND (ONE NOT MEET CONDITION)` to add when merge update is matched.</summary>
            <value>The `AND (ONE NOT MEET CONDITION)` to add when merge update is matched.</value>
        </member>
        <member name="P:Z.BulkOperations.BulkOperation`1.UpdateMatchedAndConditionExpression">
            <summary>Gets or sets the `AND CONDITION` to add when update is matched.</summary>
            <value>The `AND CONDITION` to add when update is matched.</value>
        </member>
        <member name="P:Z.BulkOperations.BulkOperation`1.UpdateMatchedAndOneNotConditionExpression">
            <summary>Gets or sets the `AND (ONE NOT MEET CONDITION)` to add when update is matched.</summary>
            <value>The `AND (ONE NOT MEET CONDITION)` to add when update is matched.</value>
        </member>
        <member name="P:Z.BulkOperations.BulkOperation`1.DeleteMatchedAndConditionExpression">
            <summary>Gets or sets the `AND CONDITION` to add when update is matched.</summary>
            <value>The `AND CONDITION` to add when update is matched.</value>
        </member>
        <member name="P:Z.BulkOperations.BulkOperation`1.DeleteMatchedAndOneNotConditionExpression">
            <summary>Gets or sets the `AND (ONE NOT MEET CONDITION)` to add when update is matched.</summary>
            <value>The `AND (ONE NOT MEET CONDITION)` to add when update is matched.</value>
        </member>
        <member name="P:Z.BulkOperations.BulkOperation`1.SynchronizeMatchedAndConditionExpression">
            <summary>Gets or sets the `AND CONDITION` to add when merge update is matched.</summary>
            <value>The `AND CONDITION` to add when merge update is matched.</value>
        </member>
        <member name="P:Z.BulkOperations.BulkOperation`1.SynchronizeMatchedAndOneNotConditionExpression">
            <summary>Gets or sets the `AND (ONE NOT MEET CONDITION)` to add when merge update is matched.</summary>
            <value>The `AND (ONE NOT MEET CONDITION)` to add when merge update is matched.</value>
        </member>
        <member name="P:Z.BulkOperations.BulkOperation`1.IgnoreOnMergeMatchedAndConditionExpression">
            <summary>Gets or sets the `AND CONDITION` to add when merge update is matched. All columns are part of the condition except those from the ignore expression.</summary>
            <value>The `AND CONDITION` to add when merge update is matched. All columns are part of the condition except those from the ignore expression.</value>
        </member>
        <member name="P:Z.BulkOperations.BulkOperation`1.IgnoreOnMergeMatchedAndOneNotConditionExpression">
            <summary>Gets or sets the `AND (ONE NOT MEET CONDITION)` to add when merge update is matched. All columns are part of the condition except those from the ignore expression.</summary>
            <value>The `AND (ONE NOT MEET CONDITION)` to add when merge update is matched. All columns are part of the condition except those from the ignore expression.</value>
        </member>
        <member name="P:Z.BulkOperations.BulkOperation`1.IgnoreOnUpdateMatchedAndConditionExpression">
            <summary>Gets or sets the `AND CONDITION` to add when update is matched. All columns are part of the condition except those from the ignore expression.</summary>
            <value>The `AND CONDITION` to add when update is matched. All columns are part of the condition except those from the ignore expression.</value>
        </member>
        <member name="P:Z.BulkOperations.BulkOperation`1.IgnoreOnUpdateMatchedAndOneNotConditionExpression">
            <summary>Gets or sets the `AND (ONE NOT MEET CONDITION)` to add when update is matched. All columns are part of the condition except those from the ignore expression.</summary>
            <value>The `AND (ONE NOT MEET CONDITION)` to add when update is matched. All columns are part of the condition except those from the ignore expression.</value>
        </member>
        <member name="P:Z.BulkOperations.BulkOperation`1.IgnoreOnSynchronizeMatchedAndConditionExpression">
            <summary>Gets or sets the `AND CONDITION` to add when merge update is matched. All columns are part of the condition except those from the ignore expression.</summary>
            <value>The `AND CONDITION` to add when merge update is matched. All columns are part of the condition except those from the ignore expression.</value>
        </member>
        <member name="P:Z.BulkOperations.BulkOperation`1.IgnoreOnSynchronizeMatchedAndOneNotConditionExpression">
            <summary>Gets or sets the `AND (ONE NOT MEET CONDITION)` to add when merge update is matched. All columns are part of the condition except those from the ignore expression.</summary>
            <value>The `AND (ONE NOT MEET CONDITION)` to add when merge update is matched. All columns are part of the condition except those from the ignore expression.</value>
        </member>
        <member name="P:Z.BulkOperations.BulkOperation`1.CoalesceOnMergeUpdateExpression">
            <summary>Gets or sets columns to coalesce, ISNULL(StagingValue, DestinationValue).</summary>
            <value>The columns to coalesce, ISNULL(StagingValue, DestinationValue).</value>
        </member>
        <member name="P:Z.BulkOperations.BulkOperation`1.CoalesceDestinationOnMergeUpdateExpression">
            <summary>Gets or sets columns to coalesce, ISNULL(DestinationValue, StagingValue).</summary>
            <value>The columns to coalesce, ISNULL(DestinationValue, StagingValue).</value>
        </member>
        <member name="P:Z.BulkOperations.BulkOperation`1.CoalesceOnUpdateExpression">
            <summary>Gets or sets columns to coalesce, ISNULL(StagingValue, DestinationValue).</summary>
            <value>The columns to coalesce, ISNULL(StagingValue, DestinationValue).</value>
        </member>
        <member name="P:Z.BulkOperations.BulkOperation`1.CoalesceDestinationOnUpdateExpression">
            <summary>Gets or sets columns to coalesce, ISNULL(DestinationValue, StagingValue).</summary>
            <value>The columns to coalesce, ISNULL(DestinationValue, StagingValue).</value>
        </member>
        <member name="T:Z.BulkOperations.DefaultValueResolutionType">
            <summary>Values that represent ColumnMappingFormulaType.</summary>
        </member>
        <member name="T:Z.BulkOperations.ColumnMapping">
            <summary>An advanced column mapping.</summary>
        </member>
        <member name="P:Z.BulkOperations.ColumnMapping.CoalesceOnMergeUpdate">
            <summary>Gets or sets a value indicating whether the coalesce on merge update.</summary>
            <value>True if coalesce on merge update, false if not.</value>
        </member>
        <member name="P:Z.BulkOperations.ColumnMapping.CoalesceDestinationOnMergeUpdate">
            <summary>
            Gets or sets a value indicating whether the coalesce destination merge update.
            </summary>
            <value>True if coalesce destination merge update, false if not.</value>
        </member>
        <member name="P:Z.BulkOperations.ColumnMapping.IsOptional">
            <summary>Gets or sets a value indicating whether this object is optional.</summary>
            <value>True if this object is optional, false if not.</value>
        </member>
        <member name="P:Z.BulkOperations.ColumnMapping.AuditMode">
            <summary>Gets or sets the audit mode.</summary>
            <value>The audit mode.</value>
        </member>
        <member name="P:Z.BulkOperations.ColumnMapping.CaseSensitive">
            <summary>Gets or sets the case sensitive mode.</summary>
            <value>The case sensitive mode.</value>
        </member>
        <member name="P:Z.BulkOperations.ColumnMapping.IsConcurrencyColumn">
            <summary>Gets or sets a value indicating whether this object is concurrency column.</summary>
            <value>true if this object is concurrency column, false if not.</value>
        </member>
        <member name="P:Z.BulkOperations.ColumnMapping.DestinationAlias">
            <summary>Gets or sets destination alias.</summary>
            <value>The destination alias.</value>
        </member>
        <member name="P:Z.BulkOperations.ColumnMapping.DestinationExpression">
            <summary>Gets or sets destination expression.</summary>
            <value>The destination expression.</value>
        </member>
        <member name="P:Z.BulkOperations.ColumnMapping.DestinationName">
            <summary>Gets or sets the name of the destination.</summary>
            <value>The name of the destination.</value>
        </member>
        <member name="P:Z.BulkOperations.ColumnMapping.DestinationOrdinal">
            <summary>Gets or sets destination ordinal.</summary>
            <value>The destination ordinal.</value>
        </member>
        <member name="P:Z.BulkOperations.ColumnMapping.Direction">
            <summary>Gets or sets the direction.</summary>
            <value>The direction.</value>
        </member>
        <member name="P:Z.BulkOperations.ColumnMapping.FormulaInsert">
            <summary>Gets or sets the formula insert.</summary>
            <value>The formula insert.</value>
        </member>
        <member name="P:Z.BulkOperations.ColumnMapping.FormulaType">
            <summary>Gets or sets the type of the formula.</summary>
            <value>The type of the formula.</value>
        </member>
        <member name="P:Z.BulkOperations.ColumnMapping.FormulaUpdate">
            <summary>Gets or sets the formula update.</summary>
            <value>The formula update.</value>
        </member>
        <member name="P:Z.BulkOperations.ColumnMapping.FormulaPrimaryKeyDelete">
            <summary>Gets or sets the formula update.</summary>
            <value>The formula update.</value>
        </member>
        <member name="P:Z.BulkOperations.ColumnMapping.FormulaPrimaryKeyMerge">
            <summary>Gets or sets the formula update.</summary>
            <value>The formula update.</value>
        </member>
        <member name="P:Z.BulkOperations.ColumnMapping.FormulaPrimaryKeySynchronize">
            <summary>
                Gets or sets the formula primary key synchronize.
            </summary>
            <value>The formula primary key synchronize.</value>
        </member>
        <member name="P:Z.BulkOperations.ColumnMapping.FormulaPrimaryKeyUpdate">
            <summary>Gets or sets the formula update.</summary>
            <value>The formula update.</value>
        </member>
        <member name="P:Z.BulkOperations.ColumnMapping.IsIdentity">
            <summary>Gets or sets a value indicating whether this object is identity.</summary>
            <value>true if this object is identity, false if not.</value>
        </member>
        <member name="P:Z.BulkOperations.ColumnMapping.IsPrimaryKey">
            <summary>Gets or sets a value indicating whether this object is primary key.</summary>
            <value>true if this object is primary key, false if not.</value>
        </member>
        <member name="P:Z.BulkOperations.ColumnMapping.SourceName">
            <summary>Gets or sets the name of the source.</summary>
            <value>The name of the source.</value>
        </member>
        <member name="P:Z.BulkOperations.ColumnMapping.SourceOrdinal">
            <summary>Gets or sets source ordinal.</summary>
            <value>The source ordinal.</value>
        </member>
        <member name="P:Z.BulkOperations.ColumnMapping.SourceExpression">
            <summary>Gets or sets source expression.</summary>
            <value>The source expression.</value>
        </member>
        <member name="P:Z.BulkOperations.ColumnMapping.SourceValue">
            <summary>Gets or sets source value.</summary>
            <value>The source value.</value>
        </member>
        <member name="P:Z.BulkOperations.ColumnMapping.SourceValueFactory">
            <summary>Gets or sets source value factory.</summary>
            <value>The source value factory.</value>
        </member>
        <member name="P:Z.BulkOperations.ColumnMapping.DefaultValueResolution">
            <summary>Gets or sets the default value resolution.</summary>
            <value>The default value resolution.</value>
        </member>
        <member name="P:Z.BulkOperations.ColumnMapping.DefaultValue">
            <summary>Gets or sets the default value.</summary>
            <value>The default value.</value>
        </member>
        <member name="P:Z.BulkOperations.ColumnMapping.DefaultValueSql">
            <summary>Gets or sets the default value SQL.</summary>
            <value>The default value SQL.</value>
        </member>
        <member name="M:Z.BulkOperations.ColumnMapping.#ctor">
            <summary>Inherit constructor.</summary>
        </member>
        <member name="M:Z.BulkOperations.ColumnMapping.#ctor(System.String)">
            <summary>Constructor.</summary>
            <param name="columnName">Name of the column.</param>
        </member>
        <member name="M:Z.BulkOperations.ColumnMapping.#ctor(System.String,System.Boolean)">
            <summary>Constructor.</summary>
            <param name="columnName">Name of the column.</param>
            <param name="isPrimaryKey">true if this object is primary key, false if not.</param>
        </member>
        <member name="M:Z.BulkOperations.ColumnMapping.#ctor(System.String,Z.BulkOperations.ColumnMappingDirectionType)">
            <summary>Constructor.</summary>
            <param name="columnName">Name of the column.</param>
            <param name="direction">The direction.</param>
        </member>
        <member name="M:Z.BulkOperations.ColumnMapping.#ctor(System.String,System.Boolean,Z.BulkOperations.ColumnMappingDirectionType)">
            <summary>Constructor.</summary>
            <param name="columnName">Name of the column.</param>
            <param name="isPrimaryKey">true if this object is primary key, false if not.</param>
            <param name="direction">The direction.</param>
        </member>
        <member name="M:Z.BulkOperations.ColumnMapping.#ctor(System.String,System.String)">
            <summary>Constructor.</summary>
            <param name="sourceName">Name of the source.</param>
            <param name="destinationName">Name of the destination.</param>
        </member>
        <member name="M:Z.BulkOperations.ColumnMapping.#ctor(System.Int32,System.Int32)">
            <summary>Constructor.</summary>
            <param name="sourceOrdinal">Source ordinal.</param>
            <param name="destinationOrdinal">Destination ordinal.</param>
        </member>
        <member name="M:Z.BulkOperations.ColumnMapping.#ctor(System.Int32,System.String)">
            <summary>Constructor.</summary>
            <param name="sourceOrdinal">Source ordinal.</param>
            <param name="destinationName">Name of the destination.</param>
        </member>
        <member name="M:Z.BulkOperations.ColumnMapping.#ctor(System.String,System.Int32)">
            <summary>Constructor.</summary>
            <param name="sourceName">Name of the source.</param>
            <param name="destinationOrdinal">Destination ordinal.</param>
        </member>
        <member name="M:Z.BulkOperations.ColumnMapping.#ctor(System.String,System.String,System.Boolean)">
            <summary>Constructor.</summary>
            <param name="sourceName">Name of the source.</param>
            <param name="destinationName">Name of the destination.</param>
            <param name="isPrimaryKey">true if this object is primary key, false if not.</param>
        </member>
        <member name="M:Z.BulkOperations.ColumnMapping.#ctor(System.Int32,System.Int32,System.Boolean)">
            <summary>Constructor.</summary>
            <param name="sourceOrdinal">Source ordinal.</param>
            <param name="destinationOrdinal">Destination ordinal.</param>
            <param name="isPrimaryKey">true if this object is primary key, false if not.</param>
        </member>
        <member name="M:Z.BulkOperations.ColumnMapping.#ctor(System.String,System.String,Z.BulkOperations.ColumnMappingDirectionType)">
            <summary>Constructor.</summary>
            <param name="sourceName">Name of the source.</param>
            <param name="destinationName">Name of the destination.</param>
            <param name="direction">The direction.</param>
        </member>
        <member name="M:Z.BulkOperations.ColumnMapping.#ctor(System.Int32,System.Int32,Z.BulkOperations.ColumnMappingDirectionType)">
            <summary>Constructor.</summary>
            <param name="sourceOrdinal">Source ordinal.</param>
            <param name="destinationOrdinal">Destination ordinal.</param>
            <param name="direction">The direction.</param>
        </member>
        <member name="M:Z.BulkOperations.ColumnMapping.#ctor(System.String,System.String,System.Boolean,Z.BulkOperations.ColumnMappingDirectionType)">
            <summary>Constructor.</summary>
            <param name="sourceName">Name of the source.</param>
            <param name="destinationName">Name of the destination.</param>
            <param name="isPrimaryKey">true if this object is primary key, false if not.</param>
            <param name="direction">The direction.</param>
        </member>
        <member name="M:Z.BulkOperations.ColumnMapping.#ctor(System.Int32,System.Int32,System.Boolean,Z.BulkOperations.ColumnMappingDirectionType)">
            <summary>Constructor.</summary>
            <param name="sourceOrdinal">Source ordinal.</param>
            <param name="destinationOrdinal">Destination ordinal.</param>
            <param name="isPrimaryKey">true if this object is primary key, false if not.</param>
            <param name="direction">The direction.</param>
        </member>
        <member name="T:Z.BulkOperations.ErrorModeType">
            <summary>Values that represent error mode types.</summary>
        </member>
        <member name="F:Z.BulkOperations.ErrorModeType.ThrowException">
            <summary>An enum constant representing the throw exception option.</summary>
        </member>
        <member name="F:Z.BulkOperations.ErrorModeType.IgnoreAndContinue">
            <summary>An enum constant representing the ignore and continue option.</summary>
        </member>
        <member name="F:Z.BulkOperations.ErrorModeType.RetrySingleAndContinue">
            <summary>An enum constant representing the retry single and continue option.</summary>
        </member>
        <member name="T:Z.BulkOperations.BulkOperationError">
            <summary>A bulk operation error.</summary>
        </member>
        <member name="P:Z.BulkOperations.BulkOperationError.Exception">
            <summary>Gets or sets the exception.</summary>
            <value>The exception.</value>
        </member>
        <member name="P:Z.BulkOperations.BulkOperationError.Record">
            <summary>Gets or sets the record.</summary>
            <value>The record.</value>
        </member>
        <member name="T:Z.BulkOperations.ColumnMappingAuditModeType">
            <summary>Values that represent ColumnMappingAuditModeType.</summary>
        </member>
        <member name="F:Z.BulkOperations.ColumnMappingAuditModeType.Inherit">
            <summary>An enum constant representing the inherit option.</summary>
        </member>
        <member name="F:Z.BulkOperations.ColumnMappingAuditModeType.Include">
            <summary>An enum constant representing the include option.</summary>
        </member>
        <member name="F:Z.BulkOperations.ColumnMappingAuditModeType.Exclude">
            <summary>An enum constant representing the exclude option.</summary>
        </member>
        <member name="T:Z.BulkOperations.ColumnMappingDirectionType">
            <summary>Values that represent ColumnMappingDirectionType.</summary>
        </member>
        <member name="T:Z.BulkOperations.ColumnMappingFormulaType">
            <summary>Values that represent ColumnMappingFormulaType.</summary>
        </member>
        <member name="T:Z.BulkOperations.ColumnMapping`1">
            <summary>An advanced column mapping.</summary>
            <typeparam name="TEntity">Type of the entity.</typeparam>
        </member>
        <member name="M:Z.BulkOperations.ColumnMapping`1.#ctor">
            <summary>Inherit constructor.</summary>
        </member>
        <member name="M:Z.BulkOperations.ColumnMapping`1.#ctor(System.String)">
            <summary>Constructor.</summary>
            <param name="columnName">Name of the column.</param>
        </member>
        <member name="M:Z.BulkOperations.ColumnMapping`1.#ctor(System.String,System.Boolean)">
            <summary>Constructor.</summary>
            <param name="columnName">Name of the column.</param>
            <param name="isPrimaryKey">true if this object is primary key, false if not.</param>
        </member>
        <member name="M:Z.BulkOperations.ColumnMapping`1.#ctor(System.String,Z.BulkOperations.ColumnMappingDirectionType)">
            <summary>Constructor.</summary>
            <param name="columnName">Name of the column.</param>
            <param name="direction">The direction.</param>
        </member>
        <member name="M:Z.BulkOperations.ColumnMapping`1.#ctor(System.String,System.Boolean,Z.BulkOperations.ColumnMappingDirectionType)">
            <summary>Constructor.</summary>
            <param name="columnName">Name of the column.</param>
            <param name="isPrimaryKey">true if this object is primary key, false if not.</param>
            <param name="direction">The direction.</param>
        </member>
        <member name="M:Z.BulkOperations.ColumnMapping`1.#ctor(System.String,System.String)">
            <summary>Constructor.</summary>
            <param name="sourceName">Name of the source.</param>
            <param name="destinationName">Name of the destination.</param>
        </member>
        <member name="M:Z.BulkOperations.ColumnMapping`1.#ctor(System.Int32,System.Int32)">
            <summary>Constructor.</summary>
            <param name="sourceOrdinal">Source ordinal.</param>
            <param name="destinationOrdinal">Destination ordinal.</param>
        </member>
        <member name="M:Z.BulkOperations.ColumnMapping`1.#ctor(System.Int32,System.String)">
            <summary>Constructor.</summary>
            <param name="sourceOrdinal">Source ordinal.</param>
            <param name="destinationName">Name of the destination.</param>
        </member>
        <member name="M:Z.BulkOperations.ColumnMapping`1.#ctor(System.String,System.Int32)">
            <summary>Constructor.</summary>
            <param name="sourceName">Name of the source.</param>
            <param name="destinationOrdinal">Destination ordinal.</param>
        </member>
        <member name="M:Z.BulkOperations.ColumnMapping`1.#ctor(System.String,System.String,System.Boolean)">
            <summary>Constructor.</summary>
            <param name="sourceName">Name of the source.</param>
            <param name="destinationName">Name of the destination.</param>
            <param name="isPrimaryKey">true if this object is primary key, false if not.</param>
        </member>
        <member name="M:Z.BulkOperations.ColumnMapping`1.#ctor(System.Int32,System.Int32,System.Boolean)">
            <summary>Constructor.</summary>
            <param name="sourceOrdinal">Source ordinal.</param>
            <param name="destinationOrdinal">Destination ordinal.</param>
            <param name="isPrimaryKey">true if this object is primary key, false if not.</param>
        </member>
        <member name="M:Z.BulkOperations.ColumnMapping`1.#ctor(System.String,System.String,Z.BulkOperations.ColumnMappingDirectionType)">
            <summary>Constructor.</summary>
            <param name="sourceName">Name of the source.</param>
            <param name="destinationName">Name of the destination.</param>
            <param name="direction">The direction.</param>
        </member>
        <member name="M:Z.BulkOperations.ColumnMapping`1.#ctor(System.Int32,System.Int32,Z.BulkOperations.ColumnMappingDirectionType)">
            <summary>Constructor.</summary>
            <param name="sourceOrdinal">Source ordinal.</param>
            <param name="destinationOrdinal">Destination ordinal.</param>
            <param name="direction">The direction.</param>
        </member>
        <member name="M:Z.BulkOperations.ColumnMapping`1.#ctor(System.String,System.String,System.Boolean,Z.BulkOperations.ColumnMappingDirectionType)">
            <summary>Constructor.</summary>
            <param name="sourceName">Name of the source.</param>
            <param name="destinationName">Name of the destination.</param>
            <param name="isPrimaryKey">true if this object is primary key, false if not.</param>
            <param name="direction">The direction.</param>
        </member>
        <member name="M:Z.BulkOperations.ColumnMapping`1.#ctor(System.Int32,System.Int32,System.Boolean,Z.BulkOperations.ColumnMappingDirectionType)">
            <summary>Constructor.</summary>
            <param name="sourceOrdinal">Source ordinal.</param>
            <param name="destinationOrdinal">Destination ordinal.</param>
            <param name="isPrimaryKey">true if this object is primary key, false if not.</param>
            <param name="direction">The direction.</param>
        </member>
        <member name="M:Z.BulkOperations.ColumnMapping`1.#ctor(System.Linq.Expressions.Expression{System.Func{`0,System.Object}})">
            <summary>Constructor.</summary>
        </member>
        <member name="M:Z.BulkOperations.ColumnMapping`1.#ctor(System.Linq.Expressions.Expression{System.Func{`0,System.Object}},System.Boolean)">
            <summary>Constructor.</summary>
        </member>
        <member name="M:Z.BulkOperations.ColumnMapping`1.#ctor(System.Linq.Expressions.Expression{System.Func{`0,System.Object}},Z.BulkOperations.ColumnMappingDirectionType)">
            <summary>Constructor.</summary>
        </member>
        <member name="M:Z.BulkOperations.ColumnMapping`1.#ctor(System.Linq.Expressions.Expression{System.Func{`0,System.Object}},System.Boolean,Z.BulkOperations.ColumnMappingDirectionType)">
            <summary>Constructor.</summary>
        </member>
        <member name="M:Z.BulkOperations.ColumnMapping`1.#ctor(System.Linq.Expressions.Expression{System.Func{`0,System.Object}},System.Int32)">
            <summary>Constructor.</summary>
            <param name="sourceExpression">Source expression.</param>
            <param name="destinationOrdinal">Destination ordinal.</param>
        </member>
        <member name="M:Z.BulkOperations.ColumnMapping`1.#ctor(System.Linq.Expressions.Expression{System.Func{`0,System.Object}},System.Int32,System.Boolean)">
            <summary>Constructor.</summary>
            <param name="sourceExpression">Source expression.</param>
            <param name="destinationOrdinal">Destination ordinal.</param>
            <param name="isPrimaryKey">true if this object is primary key.</param>
        </member>
        <member name="M:Z.BulkOperations.ColumnMapping`1.#ctor(System.Linq.Expressions.Expression{System.Func{`0,System.Object}},System.Int32,Z.BulkOperations.ColumnMappingDirectionType)">
            <summary>Constructor.</summary>
            <param name="sourceExpression">Source expression.</param>
            <param name="destinationOrdinal">Destination ordinal.</param>
            <param name="direction">The direction.</param>
        </member>
        <member name="M:Z.BulkOperations.ColumnMapping`1.#ctor(System.Linq.Expressions.Expression{System.Func{`0,System.Object}},System.Int32,System.Boolean,Z.BulkOperations.ColumnMappingDirectionType)">
            <summary>Constructor.</summary>
            <param name="sourceExpression">Source expression.</param>
            <param name="destinationOrdinal">Destination ordinal.</param>
            <param name="isPrimaryKey">true if this object is primary key.</param>
            <param name="direction">The direction.</param>
        </member>
        <member name="M:Z.BulkOperations.ColumnMapping`1.#ctor(System.Linq.Expressions.Expression{System.Func{`0,System.Object}},System.String)">
            <summary>Constructor.</summary>
            <param name="sourceExpression">Source expression.</param>
            <param name="destinationName">Name of the destination.</param>
        </member>
        <member name="M:Z.BulkOperations.ColumnMapping`1.#ctor(System.Linq.Expressions.Expression{System.Func{`0,System.Object}},System.String,System.Boolean)">
            <summary>Constructor.</summary>
            <param name="sourceExpression">Source expression.</param>
            <param name="destinationName">Name of the destination.</param>
            <param name="isPrimaryKey">true if this object is primary key.</param>
        </member>
        <member name="M:Z.BulkOperations.ColumnMapping`1.#ctor(System.Linq.Expressions.Expression{System.Func{`0,System.Object}},System.String,Z.BulkOperations.ColumnMappingDirectionType)">
            <summary>Constructor.</summary>
            <param name="sourceExpression">Source expression.</param>
            <param name="destinationName">Name of the destination.</param>
            <param name="direction">The direction.</param>
        </member>
        <member name="M:Z.BulkOperations.ColumnMapping`1.#ctor(System.Linq.Expressions.Expression{System.Func{`0,System.Object}},System.String,System.Boolean,Z.BulkOperations.ColumnMappingDirectionType)">
            <summary>Constructor.</summary>
            <param name="sourceExpression">Source expression.</param>
            <param name="destinationName">Name of the destination.</param>
            <param name="isPrimaryKey">true if this object is primary key.</param>
            <param name="direction">The direction.</param>
        </member>
        <member name="P:Z.BulkOperations.ColumnMapping`1.SourceExpression">
            <summary>Gets or sets source expression.</summary>
            <value>The source expression.</value>
        </member>
        <member name="P:Z.BulkOperations.ColumnMapping`1.DestinationExpression">
            <summary>Gets or sets destination expression.</summary>
            <value>The destination expression.</value>
        </member>
        <member name="M:Z.BulkOperations.CustomProvider.#ctor(Z.BulkOperations.ProviderType)">
            <summary>Constructor.</summary>
            <param name="provider">The provider.</param>
        </member>
        <member name="P:Z.BulkOperations.CustomProvider.SetBindByName">
            <summary>Gets or sets the name of the set bind by.</summary>
            <value>The name of the set bind by.</value>
        </member>
        <member name="P:Z.BulkOperations.CustomProvider.ExecuteArray">
            <summary>Gets or sets an array of executes.</summary>
            <value>An Array of executes.</value>
        </member>
        <member name="P:Z.BulkOperations.CustomProvider.SetArrayBindCount">
            <summary>Gets or sets the number of set array binds.</summary>
            <value>The number of set array binds.</value>
        </member>
        <member name="M:Z.BulkOperations.ColumnMappingExtensions.Add(System.Collections.Generic.List{Z.BulkOperations.BasicColumnMapping},System.String)">
            <summary>A List&lt;ColumnMapping&gt; extension method that adds list.</summary>
            <param name="list">The list to act on.</param>
            <param name="columnName">Name of the column.</param>
        </member>
        <member name="M:Z.BulkOperations.ColumnMappingExtensions.Add(System.Collections.Generic.List{Z.BulkOperations.BasicColumnMapping},System.String,System.Boolean)">
            <summary>A List&lt;ColumnMapping&gt; extension method that adds list.</summary>
            <param name="list">The list to act on.</param>
            <param name="columnName">Name of the column.</param>
            <param name="isPrimaryKey">true if this object is primary key.</param>
        </member>
        <member name="M:Z.BulkOperations.ColumnMappingExtensions.Add(System.Collections.Generic.List{Z.BulkOperations.BasicColumnMapping},System.String,Z.BulkOperations.ColumnMappingDirectionType)">
            <summary>A List&lt;ColumnMapping&gt; extension method that adds list.</summary>
            <param name="list">The list to act on.</param>
            <param name="columnName">Name of the column.</param>
            <param name="direction">The direction.</param>
        </member>
        <member name="M:Z.BulkOperations.ColumnMappingExtensions.Add(System.Collections.Generic.List{Z.BulkOperations.BasicColumnMapping},System.String,System.Boolean,Z.BulkOperations.ColumnMappingDirectionType)">
            <summary>A List&lt;ColumnMapping&gt; extension method that adds list.</summary>
            <param name="list">The list to act on.</param>
            <param name="columnName">Name of the column.</param>
            <param name="isPrimaryKey">true if this object is primary key.</param>
            <param name="direction">The direction.</param>
        </member>
        <member name="M:Z.BulkOperations.ColumnMappingExtensions.Add(System.Collections.Generic.List{Z.BulkOperations.BasicColumnMapping},System.String,System.String)">
            <summary>A List&lt;ColumnMapping&gt; extension method that adds list.</summary>
            <param name="list">The list to act on.</param>
            <param name="sourceName">Name of the source.</param>
            <param name="destinationName">Name of the destination.</param>
        </member>
        <member name="M:Z.BulkOperations.ColumnMappingExtensions.Add(System.Collections.Generic.List{Z.BulkOperations.BasicColumnMapping},System.Int32,System.Int32)">
            <summary>A List&lt;ColumnMapping&gt; extension method that adds list.</summary>
            <param name="list">The list to act on.</param>
            <param name="sourceOrdinal">Source ordinal.</param>
            <param name="destinationOrdinal">Destination ordinal.</param>
        </member>
        <member name="M:Z.BulkOperations.ColumnMappingExtensions.Add(System.Collections.Generic.List{Z.BulkOperations.BasicColumnMapping},System.Int32,System.String)">
            <summary>Constructor.</summary>
            <param name="list">The list to act on.</param>
            <param name="sourceOrdinal">Source ordinal.</param>
            <param name="destinationName">Name of the destination.</param>
        </member>
        <member name="M:Z.BulkOperations.ColumnMappingExtensions.Add(System.Collections.Generic.List{Z.BulkOperations.BasicColumnMapping},System.String,System.Int32)">
            <summary>Constructor.</summary>
            <param name="list">The list to act on.</param>
            <param name="sourceName">Name of the source.</param>
            <param name="destinationOrdinal">Destination ordinal.</param>
        </member>
        <member name="M:Z.BulkOperations.ColumnMappingExtensions.Add(System.Collections.Generic.List{Z.BulkOperations.BasicColumnMapping},System.String,System.String,System.Boolean)">
            <summary>A List&lt;ColumnMapping&gt; extension method that adds list.</summary>
            <param name="list">The list to act on.</param>
            <param name="sourceName">Name of the source.</param>
            <param name="destinationName">Name of the destination.</param>
            <param name="isPrimaryKey">true if this object is primary key.</param>
        </member>
        <member name="M:Z.BulkOperations.ColumnMappingExtensions.Add(System.Collections.Generic.List{Z.BulkOperations.BasicColumnMapping},System.Int32,System.Int32,System.Boolean)">
            <summary>A List&lt;ColumnMapping&gt; extension method that adds list.</summary>
            <param name="list">The list to act on.</param>
            <param name="sourceOrdinal">Source ordinal.</param>
            <param name="destinationOrdinal">Destination ordinal.</param>
            <param name="isPrimaryKey">true if this object is primary key.</param>
        </member>
        <member name="M:Z.BulkOperations.ColumnMappingExtensions.Add(System.Collections.Generic.List{Z.BulkOperations.BasicColumnMapping},System.String,System.String,Z.BulkOperations.ColumnMappingDirectionType)">
            <summary>A List&lt;ColumnMapping&gt; extension method that adds list.</summary>
            <param name="list">The list to act on.</param>
            <param name="sourceName">Name of the source.</param>
            <param name="destinationName">Name of the destination.</param>
            <param name="direction">The direction.</param>
        </member>
        <member name="M:Z.BulkOperations.ColumnMappingExtensions.Add(System.Collections.Generic.List{Z.BulkOperations.BasicColumnMapping},System.Int32,System.Int32,Z.BulkOperations.ColumnMappingDirectionType)">
            <summary>A List&lt;ColumnMapping&gt; extension method that adds list.</summary>
            <param name="list">The list to act on.</param>
            <param name="sourceOrdinal">Source ordinal.</param>
            <param name="destinationOrdinal">Destination ordinal.</param>
            <param name="direction">The direction.</param>
        </member>
        <member name="M:Z.BulkOperations.ColumnMappingExtensions.Add(System.Collections.Generic.List{Z.BulkOperations.BasicColumnMapping},System.String,System.String,System.Boolean,Z.BulkOperations.ColumnMappingDirectionType)">
            <summary>A List&lt;ColumnMapping&gt; extension method that adds list.</summary>
            <param name="list">The list to act on.</param>
            <param name="sourceName">Name of the source.</param>
            <param name="destinationName">Name of the destination.</param>
            <param name="isPrimaryKey">true if this object is primary key.</param>
            <param name="direction">The direction.</param>
        </member>
        <member name="M:Z.BulkOperations.ColumnMappingExtensions.Add(System.Collections.Generic.List{Z.BulkOperations.BasicColumnMapping},System.Int32,System.Int32,System.Boolean,Z.BulkOperations.ColumnMappingDirectionType)">
            <summary>A List&lt;ColumnMapping&gt; extension method that adds list.</summary>
            <param name="list">The list to act on.</param>
            <param name="sourceOrdinal">Source ordinal.</param>
            <param name="destinationOrdinal">Destination ordinal.</param>
            <param name="isPrimaryKey">true if this object is primary key.</param>
            <param name="direction">The direction.</param>
        </member>
        <member name="M:Z.BulkOperations.ColumnMappingExtensions.Add``1(System.Collections.Generic.List{Z.BulkOperations.BasicColumnMapping{``0}},System.String)">
            <summary>A List&lt;ColumnMapping&gt; extension method that adds list.</summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="list">The list to act on.</param>
            <param name="columnName">Name of the column.</param>
        </member>
        <member name="M:Z.BulkOperations.ColumnMappingExtensions.Add``1(System.Collections.Generic.List{Z.BulkOperations.BasicColumnMapping{``0}},System.String,System.Boolean)">
            <summary>A List&lt;ColumnMapping&gt; extension method that adds list.</summary>
            <param name="list">The list to act on.</param>
            <param name="columnName">Name of the column.</param>
            <param name="isPrimaryKey">true if this object is primary key.</param>
        </member>
        <member name="M:Z.BulkOperations.ColumnMappingExtensions.Add``1(System.Collections.Generic.List{Z.BulkOperations.BasicColumnMapping{``0}},System.String,Z.BulkOperations.ColumnMappingDirectionType)">
            <summary>A List&lt;ColumnMapping&gt; extension method that adds list.</summary>
            <param name="list">The list to act on.</param>
            <param name="columnName">Name of the column.</param>
            <param name="direction">The direction.</param>
        </member>
        <member name="M:Z.BulkOperations.ColumnMappingExtensions.Add``1(System.Collections.Generic.List{Z.BulkOperations.BasicColumnMapping{``0}},System.String,System.Boolean,Z.BulkOperations.ColumnMappingDirectionType)">
            <summary>A List&lt;ColumnMapping&gt; extension method that adds list.</summary>
            <param name="list">The list to act on.</param>
            <param name="columnName">Name of the column.</param>
            <param name="isPrimaryKey">true if this object is primary key.</param>
            <param name="direction">The direction.</param>
        </member>
        <member name="M:Z.BulkOperations.ColumnMappingExtensions.Add``1(System.Collections.Generic.List{Z.BulkOperations.BasicColumnMapping{``0}},System.String,System.String)">
            <summary>A List&lt;ColumnMapping&gt; extension method that adds list.</summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="list">The list to act on.</param>
            <param name="sourceName">Name of the source.</param>
            <param name="destinationName">Name of the destination.</param>
        </member>
        <member name="M:Z.BulkOperations.ColumnMappingExtensions.Add``1(System.Collections.Generic.List{Z.BulkOperations.BasicColumnMapping{``0}},System.Int32,System.Int32)">
            <summary>A List&lt;ColumnMapping&gt; extension method that adds list.</summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="list">The list to act on.</param>
            <param name="sourceOrdinal">Source ordinal.</param>
            <param name="destinationOrdinal">Destination ordinal.</param>
        </member>
        <member name="M:Z.BulkOperations.ColumnMappingExtensions.Add``1(System.Collections.Generic.List{Z.BulkOperations.BasicColumnMapping{``0}},System.Int32,System.String)">
            <summary>Constructor.</summary>
            <param name="list">The list to act on.</param>
            <param name="sourceOrdinal">Source ordinal.</param>
            <param name="destinationName">Name of the destination.</param>
        </member>
        <member name="M:Z.BulkOperations.ColumnMappingExtensions.Add``1(System.Collections.Generic.List{Z.BulkOperations.BasicColumnMapping{``0}},System.String,System.Int32)">
            <summary>Constructor.</summary>
            <param name="list">The list to act on.</param>
            <param name="sourceName">Name of the source.</param>
            <param name="destinationOrdinal">Destination ordinal.</param>
        </member>
        <member name="M:Z.BulkOperations.ColumnMappingExtensions.Add``1(System.Collections.Generic.List{Z.BulkOperations.BasicColumnMapping{``0}},System.String,System.String,System.Boolean)">
            <summary>A List&lt;ColumnMapping&gt; extension method that adds list.</summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="list">The list to act on.</param>
            <param name="sourceName">Name of the source.</param>
            <param name="destinationName">Name of the destination.</param>
            <param name="isPrimaryKey">true if this object is primary key.</param>
        </member>
        <member name="M:Z.BulkOperations.ColumnMappingExtensions.Add``1(System.Collections.Generic.List{Z.BulkOperations.BasicColumnMapping{``0}},System.Int32,System.Int32,System.Boolean)">
            <summary>A List&lt;ColumnMapping&gt; extension method that adds list.</summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="list">The list to act on.</param>
            <param name="sourceOrdinal">Source ordinal.</param>
            <param name="destinationOrdinal">Destination ordinal.</param>
            <param name="isPrimaryKey">true if this object is primary key.</param>
        </member>
        <member name="M:Z.BulkOperations.ColumnMappingExtensions.Add``1(System.Collections.Generic.List{Z.BulkOperations.BasicColumnMapping{``0}},System.String,System.String,Z.BulkOperations.ColumnMappingDirectionType)">
            <summary>A List&lt;ColumnMapping&gt; extension method that adds list.</summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="list">The list to act on.</param>
            <param name="sourceName">Name of the source.</param>
            <param name="destinationName">Name of the destination.</param>
            <param name="direction">The direction.</param>
        </member>
        <member name="M:Z.BulkOperations.ColumnMappingExtensions.Add``1(System.Collections.Generic.List{Z.BulkOperations.BasicColumnMapping{``0}},System.Int32,System.Int32,Z.BulkOperations.ColumnMappingDirectionType)">
            <summary>A List&lt;ColumnMapping&gt; extension method that adds list.</summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="list">The list to act on.</param>
            <param name="sourceOrdinal">Source ordinal.</param>
            <param name="destinationOrdinal">Destination ordinal.</param>
            <param name="direction">The direction.</param>
        </member>
        <member name="M:Z.BulkOperations.ColumnMappingExtensions.Add``1(System.Collections.Generic.List{Z.BulkOperations.BasicColumnMapping{``0}},System.String,System.String,System.Boolean,Z.BulkOperations.ColumnMappingDirectionType)">
            <summary>A List&lt;ColumnMapping&gt; extension method that adds list.</summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="list">The list to act on.</param>
            <param name="sourceName">Name of the source.</param>
            <param name="destinationName">Name of the destination.</param>
            <param name="isPrimaryKey">true if this object is primary key.</param>
            <param name="direction">The direction.</param>
        </member>
        <member name="M:Z.BulkOperations.ColumnMappingExtensions.Add``1(System.Collections.Generic.List{Z.BulkOperations.BasicColumnMapping{``0}},System.Int32,System.Int32,System.Boolean,Z.BulkOperations.ColumnMappingDirectionType)">
            <summary>A List&lt;ColumnMapping&gt; extension method that adds list.</summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="list">The list to act on.</param>
            <param name="sourceOrdinal">Source ordinal.</param>
            <param name="destinationOrdinal">Destination ordinal.</param>
            <param name="isPrimaryKey">true if this object is primary key.</param>
            <param name="direction">The direction.</param>
        </member>
        <member name="M:Z.BulkOperations.ColumnMappingExtensions.Add``1(System.Collections.Generic.List{Z.BulkOperations.BasicColumnMapping{``0}},System.Linq.Expressions.Expression{System.Func{``0,System.Object}})">
            <summary>A List&lt;ColumnMapping&lt;T&gt;&gt; extension method that adds list.</summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="list">The list to act on.</param>
            <param name="columnExpression">The column expression.</param>
        </member>
        <member name="M:Z.BulkOperations.ColumnMappingExtensions.Add``1(System.Collections.Generic.List{Z.BulkOperations.BasicColumnMapping{``0}},System.Linq.Expressions.Expression{System.Func{``0,System.Object}},System.Boolean)">
            <summary>A List&lt;ColumnMapping&lt;T&gt;&gt; extension method that adds list.</summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="list">The list to act on.</param>
            <param name="columnExpression">The column expression.</param>
            <param name="isPrimaryKey">true if this object is primary key.</param>
        </member>
        <member name="M:Z.BulkOperations.ColumnMappingExtensions.Add``1(System.Collections.Generic.List{Z.BulkOperations.BasicColumnMapping{``0}},System.Linq.Expressions.Expression{System.Func{``0,System.Object}},Z.BulkOperations.ColumnMappingDirectionType)">
            <summary>A List&lt;ColumnMapping&lt;T&gt;&gt; extension method that adds list.</summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="list">The list to act on.</param>
            <param name="columnExpression">The column expression.</param>
            <param name="direction">The direction.</param>
        </member>
        <member name="M:Z.BulkOperations.ColumnMappingExtensions.Add``1(System.Collections.Generic.List{Z.BulkOperations.BasicColumnMapping{``0}},System.Linq.Expressions.Expression{System.Func{``0,System.Object}},System.Boolean,Z.BulkOperations.ColumnMappingDirectionType)">
            <summary>A List&lt;ColumnMapping&lt;T&gt;&gt; extension method that adds list.</summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="list">The list to act on.</param>
            <param name="columnExpression">The column expression.</param>
            <param name="isPrimaryKey">true if this object is primary key.</param>
            <param name="direction">The direction.</param>
        </member>
        <member name="M:Z.BulkOperations.ColumnMappingExtensions.Add``1(System.Collections.Generic.List{Z.BulkOperations.BasicColumnMapping{``0}},System.Linq.Expressions.Expression{System.Func{``0,System.Object}},System.Int32)">
            <summary>A List&lt;ColumnMapping&lt;T&gt;&gt; extension method that adds list.</summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="list">The list to act on.</param>
            <param name="sourceExpression">Source expression.</param>
            <param name="destinationOrdinal">Destination ordinal.</param>
        </member>
        <member name="M:Z.BulkOperations.ColumnMappingExtensions.Add``1(System.Collections.Generic.List{Z.BulkOperations.BasicColumnMapping{``0}},System.Linq.Expressions.Expression{System.Func{``0,System.Object}},System.Int32,System.Boolean)">
            <summary>A List&lt;ColumnMapping&lt;T&gt;&gt; extension method that adds list.</summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="list">The list to act on.</param>
            <param name="sourceExpression">Source expression.</param>
            <param name="destinationOrdinal">Destination ordinal.</param>
            <param name="isPrimaryKey">true if this object is primary key.</param>
        </member>
        <member name="M:Z.BulkOperations.ColumnMappingExtensions.Add``1(System.Collections.Generic.List{Z.BulkOperations.BasicColumnMapping{``0}},System.Linq.Expressions.Expression{System.Func{``0,System.Object}},System.Int32,Z.BulkOperations.ColumnMappingDirectionType)">
            <summary>A List&lt;ColumnMapping&lt;T&gt;&gt; extension method that adds list.</summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="list">The list to act on.</param>
            <param name="sourceExpression">Source expression.</param>
            <param name="destinationOrdinal">Destination ordinal.</param>
            <param name="direction">The direction.</param>
        </member>
        <member name="M:Z.BulkOperations.ColumnMappingExtensions.Add``1(System.Collections.Generic.List{Z.BulkOperations.BasicColumnMapping{``0}},System.Linq.Expressions.Expression{System.Func{``0,System.Object}},System.Int32,System.Boolean,Z.BulkOperations.ColumnMappingDirectionType)">
            <summary>A List&lt;ColumnMapping&lt;T&gt;&gt; extension method that adds list.</summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="list">The list to act on.</param>
            <param name="sourceExpression">Source expression.</param>
            <param name="destinationOrdinal">Destination ordinal.</param>
            <param name="isPrimaryKey">true if this object is primary key.</param>
            <param name="direction">The direction.</param>
        </member>
        <member name="M:Z.BulkOperations.ColumnMappingExtensions.Add``1(System.Collections.Generic.List{Z.BulkOperations.BasicColumnMapping{``0}},System.Linq.Expressions.Expression{System.Func{``0,System.Object}},System.String)">
            <summary>A List&lt;ColumnMapping&lt;T&gt;&gt; extension method that adds list.</summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="list">The list to act on.</param>
            <param name="sourceExpression">Source expression.</param>
            <param name="destinationName">Name of the destination.</param>
        </member>
        <member name="M:Z.BulkOperations.ColumnMappingExtensions.Add``1(System.Collections.Generic.List{Z.BulkOperations.BasicColumnMapping{``0}},System.Linq.Expressions.Expression{System.Func{``0,System.Object}},System.String,System.Boolean)">
            <summary>A List&lt;ColumnMapping&lt;T&gt;&gt; extension method that adds list.</summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="list">The list to act on.</param>
            <param name="sourceExpression">Source expression.</param>
            <param name="destinationName">Name of the destination.</param>
            <param name="isPrimaryKey">true if this object is primary key.</param>
        </member>
        <member name="M:Z.BulkOperations.ColumnMappingExtensions.Add``1(System.Collections.Generic.List{Z.BulkOperations.BasicColumnMapping{``0}},System.Linq.Expressions.Expression{System.Func{``0,System.Object}},System.String,Z.BulkOperations.ColumnMappingDirectionType)">
            <summary>A List&lt;ColumnMapping&lt;T&gt;&gt; extension method that adds list.</summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="list">The list to act on.</param>
            <param name="sourceExpression">Source expression.</param>
            <param name="destinationName">Name of the destination.</param>
            <param name="direction">The direction.</param>
        </member>
        <member name="M:Z.BulkOperations.ColumnMappingExtensions.Add``1(System.Collections.Generic.List{Z.BulkOperations.BasicColumnMapping{``0}},System.Linq.Expressions.Expression{System.Func{``0,System.Object}},System.String,System.Boolean,Z.BulkOperations.ColumnMappingDirectionType)">
            <summary>A List&lt;ColumnMapping&lt;T&gt;&gt; extension method that adds list.</summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="list">The list to act on.</param>
            <param name="sourceExpression">Source expression.</param>
            <param name="destinationName">Name of the destination.</param>
            <param name="isPrimaryKey">true if this object is primary key.</param>
            <param name="direction">The direction.</param>
        </member>
        <member name="M:Z.BulkOperations.ColumnMappingExtensions.Add(System.Collections.Generic.List{Z.BulkOperations.ColumnMapping},System.String)">
            <summary>A List&lt;ColumnMapping&gt; extension method that adds list.</summary>
            <param name="list">The list to act on.</param>
            <param name="columnName">Name of the column.</param>
        </member>
        <member name="M:Z.BulkOperations.ColumnMappingExtensions.Add(System.Collections.Generic.List{Z.BulkOperations.ColumnMapping},System.String,System.Boolean)">
            <summary>A List&lt;ColumnMapping&gt; extension method that adds list.</summary>
            <param name="list">The list to act on.</param>
            <param name="columnName">Name of the column.</param>
            <param name="isPrimaryKey">true if this object is primary key.</param>
        </member>
        <member name="M:Z.BulkOperations.ColumnMappingExtensions.Add(System.Collections.Generic.List{Z.BulkOperations.ColumnMapping},System.String,Z.BulkOperations.ColumnMappingDirectionType)">
            <summary>A List&lt;ColumnMapping&gt; extension method that adds list.</summary>
            <param name="list">The list to act on.</param>
            <param name="columnName">Name of the column.</param>
            <param name="direction">The direction.</param>
        </member>
        <member name="M:Z.BulkOperations.ColumnMappingExtensions.Add(System.Collections.Generic.List{Z.BulkOperations.ColumnMapping},System.String,System.Boolean,Z.BulkOperations.ColumnMappingDirectionType)">
            <summary>A List&lt;ColumnMapping&gt; extension method that adds list.</summary>
            <param name="list">The list to act on.</param>
            <param name="columnName">Name of the column.</param>
            <param name="isPrimaryKey">true if this object is primary key.</param>
            <param name="direction">The direction.</param>
        </member>
        <member name="M:Z.BulkOperations.ColumnMappingExtensions.Add(System.Collections.Generic.List{Z.BulkOperations.ColumnMapping},System.String,System.String)">
            <summary>A List&lt;ColumnMapping&gt; extension method that adds list.</summary>
            <param name="list">The list to act on.</param>
            <param name="sourceName">Name of the source.</param>
            <param name="destinationName">Name of the destination.</param>
        </member>
        <member name="M:Z.BulkOperations.ColumnMappingExtensions.Add(System.Collections.Generic.List{Z.BulkOperations.ColumnMapping},System.Int32,System.Int32)">
            <summary>A List&lt;ColumnMapping&gt; extension method that adds list.</summary>
            <param name="list">The list to act on.</param>
            <param name="sourceOrdinal">Source ordinal.</param>
            <param name="destinationOrdinal">Destination ordinal.</param>
        </member>
        <member name="M:Z.BulkOperations.ColumnMappingExtensions.Add(System.Collections.Generic.List{Z.BulkOperations.ColumnMapping},System.Int32,System.String)">
            <summary>Constructor.</summary>
            <param name="list">The list to act on.</param>
            <param name="sourceOrdinal">Source ordinal.</param>
            <param name="destinationName">Name of the destination.</param>
        </member>
        <member name="M:Z.BulkOperations.ColumnMappingExtensions.Add(System.Collections.Generic.List{Z.BulkOperations.ColumnMapping},System.String,System.Int32)">
            <summary>Constructor.</summary>
            <param name="list">The list to act on.</param>
            <param name="sourceName">Name of the source.</param>
            <param name="destinationOrdinal">Destination ordinal.</param>
        </member>
        <member name="M:Z.BulkOperations.ColumnMappingExtensions.Add(System.Collections.Generic.List{Z.BulkOperations.ColumnMapping},System.String,System.String,System.Boolean)">
            <summary>A List&lt;ColumnMapping&gt; extension method that adds list.</summary>
            <param name="list">The list to act on.</param>
            <param name="sourceName">Name of the source.</param>
            <param name="destinationName">Name of the destination.</param>
            <param name="isPrimaryKey">true if this object is primary key.</param>
        </member>
        <member name="M:Z.BulkOperations.ColumnMappingExtensions.Add(System.Collections.Generic.List{Z.BulkOperations.ColumnMapping},System.Int32,System.Int32,System.Boolean)">
            <summary>A List&lt;ColumnMapping&gt; extension method that adds list.</summary>
            <param name="list">The list to act on.</param>
            <param name="sourceOrdinal">Source ordinal.</param>
            <param name="destinationOrdinal">Destination ordinal.</param>
            <param name="isPrimaryKey">true if this object is primary key.</param>
        </member>
        <member name="M:Z.BulkOperations.ColumnMappingExtensions.Add(System.Collections.Generic.List{Z.BulkOperations.ColumnMapping},System.String,System.String,Z.BulkOperations.ColumnMappingDirectionType)">
            <summary>A List&lt;ColumnMapping&gt; extension method that adds list.</summary>
            <param name="list">The list to act on.</param>
            <param name="sourceName">Name of the source.</param>
            <param name="destinationName">Name of the destination.</param>
            <param name="direction">The direction.</param>
        </member>
        <member name="M:Z.BulkOperations.ColumnMappingExtensions.Add(System.Collections.Generic.List{Z.BulkOperations.ColumnMapping},System.Int32,System.Int32,Z.BulkOperations.ColumnMappingDirectionType)">
            <summary>A List&lt;ColumnMapping&gt; extension method that adds list.</summary>
            <param name="list">The list to act on.</param>
            <param name="sourceOrdinal">Source ordinal.</param>
            <param name="destinationOrdinal">Destination ordinal.</param>
            <param name="direction">The direction.</param>
        </member>
        <member name="M:Z.BulkOperations.ColumnMappingExtensions.Add(System.Collections.Generic.List{Z.BulkOperations.ColumnMapping},System.String,System.String,System.Boolean,Z.BulkOperations.ColumnMappingDirectionType)">
            <summary>A List&lt;ColumnMapping&gt; extension method that adds list.</summary>
            <param name="list">The list to act on.</param>
            <param name="sourceName">Name of the source.</param>
            <param name="destinationName">Name of the destination.</param>
            <param name="isPrimaryKey">true if this object is primary key.</param>
            <param name="direction">The direction.</param>
        </member>
        <member name="M:Z.BulkOperations.ColumnMappingExtensions.Add(System.Collections.Generic.List{Z.BulkOperations.ColumnMapping},System.Int32,System.Int32,System.Boolean,Z.BulkOperations.ColumnMappingDirectionType)">
            <summary>A List&lt;ColumnMapping&gt; extension method that adds list.</summary>
            <param name="list">The list to act on.</param>
            <param name="sourceOrdinal">Source ordinal.</param>
            <param name="destinationOrdinal">Destination ordinal.</param>
            <param name="isPrimaryKey">true if this object is primary key.</param>
            <param name="direction">The direction.</param>
        </member>
        <member name="M:Z.BulkOperations.ColumnMappingExtensions.Add``1(System.Collections.Generic.List{Z.BulkOperations.ColumnMapping{``0}},System.String)">
            <summary>A List&lt;ColumnMapping&gt; extension method that adds list.</summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="list">The list to act on.</param>
            <param name="columnName">Name of the column.</param>
        </member>
        <member name="M:Z.BulkOperations.ColumnMappingExtensions.Add``1(System.Collections.Generic.List{Z.BulkOperations.ColumnMapping{``0}},System.String,System.Boolean)">
            <summary>A List&lt;ColumnMapping&gt; extension method that adds list.</summary>
            <param name="list">The list to act on.</param>
            <param name="columnName">Name of the column.</param>
            <param name="isPrimaryKey">true if this object is primary key.</param>
        </member>
        <member name="M:Z.BulkOperations.ColumnMappingExtensions.Add``1(System.Collections.Generic.List{Z.BulkOperations.ColumnMapping{``0}},System.String,Z.BulkOperations.ColumnMappingDirectionType)">
            <summary>A List&lt;ColumnMapping&gt; extension method that adds list.</summary>
            <param name="list">The list to act on.</param>
            <param name="columnName">Name of the column.</param>
            <param name="direction">The direction.</param>
        </member>
        <member name="M:Z.BulkOperations.ColumnMappingExtensions.Add``1(System.Collections.Generic.List{Z.BulkOperations.ColumnMapping{``0}},System.String,System.Boolean,Z.BulkOperations.ColumnMappingDirectionType)">
            <summary>A List&lt;ColumnMapping&gt; extension method that adds list.</summary>
            <param name="list">The list to act on.</param>
            <param name="columnName">Name of the column.</param>
            <param name="isPrimaryKey">true if this object is primary key.</param>
            <param name="direction">The direction.</param>
        </member>
        <member name="M:Z.BulkOperations.ColumnMappingExtensions.Add``1(System.Collections.Generic.List{Z.BulkOperations.ColumnMapping{``0}},System.String,System.String)">
            <summary>A List&lt;ColumnMapping&gt; extension method that adds list.</summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="list">The list to act on.</param>
            <param name="sourceName">Name of the source.</param>
            <param name="destinationName">Name of the destination.</param>
        </member>
        <member name="M:Z.BulkOperations.ColumnMappingExtensions.Add``1(System.Collections.Generic.List{Z.BulkOperations.ColumnMapping{``0}},System.Int32,System.Int32)">
            <summary>A List&lt;ColumnMapping&gt; extension method that adds list.</summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="list">The list to act on.</param>
            <param name="sourceOrdinal">Source ordinal.</param>
            <param name="destinationOrdinal">Destination ordinal.</param>
        </member>
        <member name="M:Z.BulkOperations.ColumnMappingExtensions.Add``1(System.Collections.Generic.List{Z.BulkOperations.ColumnMapping{``0}},System.Int32,System.String)">
            <summary>Constructor.</summary>
            <param name="list">The list to act on.</param>
            <param name="sourceOrdinal">Source ordinal.</param>
            <param name="destinationName">Name of the destination.</param>
        </member>
        <member name="M:Z.BulkOperations.ColumnMappingExtensions.Add``1(System.Collections.Generic.List{Z.BulkOperations.ColumnMapping{``0}},System.String,System.Int32)">
            <summary>Constructor.</summary>
            <param name="list">The list to act on.</param>
            <param name="sourceName">Name of the source.</param>
            <param name="destinationOrdinal">Destination ordinal.</param>
        </member>
        <member name="M:Z.BulkOperations.ColumnMappingExtensions.Add``1(System.Collections.Generic.List{Z.BulkOperations.ColumnMapping{``0}},System.String,System.String,System.Boolean)">
            <summary>A List&lt;ColumnMapping&gt; extension method that adds list.</summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="list">The list to act on.</param>
            <param name="sourceName">Name of the source.</param>
            <param name="destinationName">Name of the destination.</param>
            <param name="isPrimaryKey">true if this object is primary key.</param>
        </member>
        <member name="M:Z.BulkOperations.ColumnMappingExtensions.Add``1(System.Collections.Generic.List{Z.BulkOperations.ColumnMapping{``0}},System.Int32,System.Int32,System.Boolean)">
            <summary>A List&lt;ColumnMapping&gt; extension method that adds list.</summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="list">The list to act on.</param>
            <param name="sourceOrdinal">Source ordinal.</param>
            <param name="destinationOrdinal">Destination ordinal.</param>
            <param name="isPrimaryKey">true if this object is primary key.</param>
        </member>
        <member name="M:Z.BulkOperations.ColumnMappingExtensions.Add``1(System.Collections.Generic.List{Z.BulkOperations.ColumnMapping{``0}},System.String,System.String,Z.BulkOperations.ColumnMappingDirectionType)">
            <summary>A List&lt;ColumnMapping&gt; extension method that adds list.</summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="list">The list to act on.</param>
            <param name="sourceName">Name of the source.</param>
            <param name="destinationName">Name of the destination.</param>
            <param name="direction">The direction.</param>
        </member>
        <member name="M:Z.BulkOperations.ColumnMappingExtensions.Add``1(System.Collections.Generic.List{Z.BulkOperations.ColumnMapping{``0}},System.Int32,System.Int32,Z.BulkOperations.ColumnMappingDirectionType)">
            <summary>A List&lt;ColumnMapping&gt; extension method that adds list.</summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="list">The list to act on.</param>
            <param name="sourceOrdinal">Source ordinal.</param>
            <param name="destinationOrdinal">Destination ordinal.</param>
            <param name="direction">The direction.</param>
        </member>
        <member name="M:Z.BulkOperations.ColumnMappingExtensions.Add``1(System.Collections.Generic.List{Z.BulkOperations.ColumnMapping{``0}},System.String,System.String,System.Boolean,Z.BulkOperations.ColumnMappingDirectionType)">
            <summary>A List&lt;ColumnMapping&gt; extension method that adds list.</summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="list">The list to act on.</param>
            <param name="sourceName">Name of the source.</param>
            <param name="destinationName">Name of the destination.</param>
            <param name="isPrimaryKey">true if this object is primary key.</param>
            <param name="direction">The direction.</param>
        </member>
        <member name="M:Z.BulkOperations.ColumnMappingExtensions.Add``1(System.Collections.Generic.List{Z.BulkOperations.ColumnMapping{``0}},System.Int32,System.Int32,System.Boolean,Z.BulkOperations.ColumnMappingDirectionType)">
            <summary>A List&lt;ColumnMapping&gt; extension method that adds list.</summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="list">The list to act on.</param>
            <param name="sourceOrdinal">Source ordinal.</param>
            <param name="destinationOrdinal">Destination ordinal.</param>
            <param name="isPrimaryKey">true if this object is primary key.</param>
            <param name="direction">The direction.</param>
        </member>
        <member name="M:Z.BulkOperations.ColumnMappingExtensions.Add``1(System.Collections.Generic.List{Z.BulkOperations.ColumnMapping{``0}},System.Linq.Expressions.Expression{System.Func{``0,System.Object}})">
            <summary>A List&lt;ColumnMapping&lt;T&gt;&gt; extension method that adds list.</summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="list">The list to act on.</param>
            <param name="columnExpression">The column expression.</param>
        </member>
        <member name="M:Z.BulkOperations.ColumnMappingExtensions.Add``1(System.Collections.Generic.List{Z.BulkOperations.ColumnMapping{``0}},System.Linq.Expressions.Expression{System.Func{``0,System.Object}},System.Boolean)">
            <summary>A List&lt;ColumnMapping&lt;T&gt;&gt; extension method that adds list.</summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="list">The list to act on.</param>
            <param name="columnExpression">The column expression.</param>
            <param name="isPrimaryKey">true if this object is primary key.</param>
        </member>
        <member name="M:Z.BulkOperations.ColumnMappingExtensions.Add``1(System.Collections.Generic.List{Z.BulkOperations.ColumnMapping{``0}},System.Linq.Expressions.Expression{System.Func{``0,System.Object}},Z.BulkOperations.ColumnMappingDirectionType)">
            <summary>A List&lt;ColumnMapping&lt;T&gt;&gt; extension method that adds list.</summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="list">The list to act on.</param>
            <param name="columnExpression">The column expression.</param>
            <param name="direction">The direction.</param>
        </member>
        <member name="M:Z.BulkOperations.ColumnMappingExtensions.Add``1(System.Collections.Generic.List{Z.BulkOperations.ColumnMapping{``0}},System.Linq.Expressions.Expression{System.Func{``0,System.Object}},System.Boolean,Z.BulkOperations.ColumnMappingDirectionType)">
            <summary>A List&lt;ColumnMapping&lt;T&gt;&gt; extension method that adds list.</summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="list">The list to act on.</param>
            <param name="columnExpression">The column expression.</param>
            <param name="isPrimaryKey">true if this object is primary key.</param>
            <param name="direction">The direction.</param>
        </member>
        <member name="M:Z.BulkOperations.ColumnMappingExtensions.Add``1(System.Collections.Generic.List{Z.BulkOperations.ColumnMapping{``0}},System.Linq.Expressions.Expression{System.Func{``0,System.Object}},System.Int32)">
            <summary>A List&lt;ColumnMapping&lt;T&gt;&gt; extension method that adds list.</summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="list">The list to act on.</param>
            <param name="sourceExpression">Source expression.</param>
            <param name="destinationOrdinal">Destination ordinal.</param>
        </member>
        <member name="M:Z.BulkOperations.ColumnMappingExtensions.Add``1(System.Collections.Generic.List{Z.BulkOperations.ColumnMapping{``0}},System.Linq.Expressions.Expression{System.Func{``0,System.Object}},System.Int32,System.Boolean)">
            <summary>A List&lt;ColumnMapping&lt;T&gt;&gt; extension method that adds list.</summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="list">The list to act on.</param>
            <param name="sourceExpression">Source expression.</param>
            <param name="destinationOrdinal">Destination ordinal.</param>
            <param name="isPrimaryKey">true if this object is primary key.</param>
        </member>
        <member name="M:Z.BulkOperations.ColumnMappingExtensions.Add``1(System.Collections.Generic.List{Z.BulkOperations.ColumnMapping{``0}},System.Linq.Expressions.Expression{System.Func{``0,System.Object}},System.Int32,Z.BulkOperations.ColumnMappingDirectionType)">
            <summary>A List&lt;ColumnMapping&lt;T&gt;&gt; extension method that adds list.</summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="list">The list to act on.</param>
            <param name="sourceExpression">Source expression.</param>
            <param name="destinationOrdinal">Destination ordinal.</param>
            <param name="direction">The direction.</param>
        </member>
        <member name="M:Z.BulkOperations.ColumnMappingExtensions.Add``1(System.Collections.Generic.List{Z.BulkOperations.ColumnMapping{``0}},System.Linq.Expressions.Expression{System.Func{``0,System.Object}},System.Int32,System.Boolean,Z.BulkOperations.ColumnMappingDirectionType)">
            <summary>A List&lt;ColumnMapping&lt;T&gt;&gt; extension method that adds list.</summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="list">The list to act on.</param>
            <param name="sourceExpression">Source expression.</param>
            <param name="destinationOrdinal">Destination ordinal.</param>
            <param name="isPrimaryKey">true if this object is primary key.</param>
            <param name="direction">The direction.</param>
        </member>
        <member name="M:Z.BulkOperations.ColumnMappingExtensions.Add``1(System.Collections.Generic.List{Z.BulkOperations.ColumnMapping{``0}},System.Linq.Expressions.Expression{System.Func{``0,System.Object}},System.String)">
            <summary>A List&lt;ColumnMapping&lt;T&gt;&gt; extension method that adds list.</summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="list">The list to act on.</param>
            <param name="sourceExpression">Source expression.</param>
            <param name="destinationName">Name of the destination.</param>
        </member>
        <member name="M:Z.BulkOperations.ColumnMappingExtensions.Add``1(System.Collections.Generic.List{Z.BulkOperations.ColumnMapping{``0}},System.Linq.Expressions.Expression{System.Func{``0,System.Object}},System.String,System.Boolean)">
            <summary>A List&lt;ColumnMapping&lt;T&gt;&gt; extension method that adds list.</summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="list">The list to act on.</param>
            <param name="sourceExpression">Source expression.</param>
            <param name="destinationName">Name of the destination.</param>
            <param name="isPrimaryKey">true if this object is primary key.</param>
        </member>
        <member name="M:Z.BulkOperations.ColumnMappingExtensions.Add``1(System.Collections.Generic.List{Z.BulkOperations.ColumnMapping{``0}},System.Linq.Expressions.Expression{System.Func{``0,System.Object}},System.String,Z.BulkOperations.ColumnMappingDirectionType)">
            <summary>A List&lt;ColumnMapping&lt;T&gt;&gt; extension method that adds list.</summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="list">The list to act on.</param>
            <param name="sourceExpression">Source expression.</param>
            <param name="destinationName">Name of the destination.</param>
            <param name="direction">The direction.</param>
        </member>
        <member name="M:Z.BulkOperations.ColumnMappingExtensions.Add``1(System.Collections.Generic.List{Z.BulkOperations.ColumnMapping{``0}},System.Linq.Expressions.Expression{System.Func{``0,System.Object}},System.String,System.Boolean,Z.BulkOperations.ColumnMappingDirectionType)">
            <summary>A List&lt;ColumnMapping&lt;T&gt;&gt; extension method that adds list.</summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="list">The list to act on.</param>
            <param name="sourceExpression">Source expression.</param>
            <param name="destinationName">Name of the destination.</param>
            <param name="isPrimaryKey">true if this object is primary key.</param>
            <param name="direction">The direction.</param>
        </member>
        <member name="T:Z.BulkOperations.InternalTransactionType">
            <summary>Values that represent InternalTransactionType.</summary>
        </member>
        <member name="T:Z.BulkOperations.LicenseManager">
            <summary>Manager for licenses.</summary>
        </member>
        <member name="M:Z.BulkOperations.LicenseManager.ValidateLicense(Z.BulkOperations.ProviderType)">
            <summary>Validates the license.</summary>
            <param name="provider">The provider.</param>
            <returns>true if it succeeds, false if it fails.</returns>
        </member>
        <member name="M:Z.BulkOperations.LicenseManager.ValidateLicense(System.String@,Z.BulkOperations.ProviderType,System.Boolean,System.Boolean,System.Boolean)">
            <summary>Validates the license.</summary>
            <param name="provider">The provider.</param>
            <param name="isEntityFramework">true if this object is entity framework.</param>
            <param name="isDapper">true if this object is dapper.</param>
            <returns>true if it succeeds, false if it fails.</returns>
        </member>
        <member name="M:Z.BulkOperations.LicenseManager.AddLicense(System.String,System.String)">
            <summary>Adds a license key (Multiple license key can be added to activate different product or provider).</summary>
            <param name="licenseName">Name of the license.</param>
            <param name="licenseKey">The license key.</param>
        </member>
        <member name="T:Z.BulkOperations.ProviderType">
            <summary>Values that represent Provider.</summary>
        </member>
        <member name="T:Z.BulkOperations.ResolutionType">
            <summary>Values that represent ResolutionType.</summary>
        </member>
        <member name="T:Z.BulkOperations.ResultInfo">
            <summary>Represents the results from executing a bulk operation.</summary>
        </member>
        <member name="P:Z.BulkOperations.ResultInfo.RowsAffected">
            <summary>Gets or sets the number of rows that are affected by the bulk operation.</summary>
            <value>The number of rows that are affected by the bulk operation.</value>
        </member>
        <member name="P:Z.BulkOperations.ResultInfo.RowsAffectedInserted">
            <summary>Gets or sets the number of rows INSERTED by the bulk operations.</summary>
            <value>The number of rows INSERTED by the bulk operations.</value>
        </member>
        <member name="P:Z.BulkOperations.ResultInfo.RowsAffectedUpdated">
            <summary>Gets or sets the number of rows UPDATED by the bulk operations.</summary>
            <value>The number of rows UPDATED by the bulk operations.</value>
        </member>
        <member name="P:Z.BulkOperations.ResultInfo.RowsAffectedDeleted">
            <summary>Gets or sets the number of rows DELETED by the bulk operations.</summary>
            <value>The number of rows DELETED by the bulk operations.</value>
        </member>
        <member name="M:BatchDeleteExtensions.DeleteFromQuery``1(System.Linq.IQueryable{``0})">
            <summary>
                An IQueryable&lt;T&gt; extension method that deletes all rows from the query without
                retrieving entities.
            </summary>
            <typeparam name="T">The type of elements of the query.</typeparam>
            <param name="query">The query to delete rows from without retrieving entities.</param>
            <returns>The number of rows affected.</returns>
        </member>
        <member name="M:BatchDeleteExtensions.DeleteFromQuery``1(System.Linq.IQueryable{``0},System.Action{Z.EntityFramework.Extensions.BatchDelete})">
            <summary>
                An IQueryable&lt;T&gt; extension method that deletes all rows from the query without
                retrieving entities.
            </summary>
            <typeparam name="T">The type of elements of the query.</typeparam>
            <param name="query">The query to delete rows from without retrieving entities.</param>
            <param name="batchDeleteBuilder">The batch builder action to change default configuration.</param>
            <returns>The number of rows affected.</returns>
        </member>
        <member name="M:BatchDeleteExtensions.DeleteFromQueryAsync``1(System.Linq.IQueryable{``0},System.Threading.CancellationToken)">
            <summary>
                An IQueryable&lt;T&gt; extension method that deletes all rows asynchronously from the query
                without retrieving entities.
            </summary>
            <typeparam name="T">The type of elements of the query.</typeparam>
            <param name="query">The query to delete rows from without retrieving entities.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>A task with the number of rows affected.</returns>
        </member>
        <member name="M:BatchDeleteExtensions.DeleteFromQueryAsync``1(System.Linq.IQueryable{``0},System.Action{Z.EntityFramework.Extensions.BatchDelete},System.Threading.CancellationToken)">
            <summary>
                An IQueryable&lt;T&gt; extension method that deletes all rows from the query without
                retrieving entities.
            </summary>
            <typeparam name="T">The type of elements of the query.</typeparam>
            <param name="query">The query to delete rows from without retrieving entities.</param>
            <param name="batchDeleteBuilder">The batch delete builder to change default configuration.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>A task with the number of rows affected.</returns>
        </member>
        <member name="M:BatchUpdateExtensions.UpdateFromQuery``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``0}})">
            <summary>
                An IQueryable&lt;T&gt; extension method that updates all rows from the query using an
                expression without retrieving entities.
            </summary>
            <typeparam name="T">The type of elements of the query.</typeparam>
            <param name="query">The query to update rows from without retrieving entities.</param>
            <param name="updateFactory">The update expression.</param>
            <returns>The number of rows affected.</returns>
        </member>
        <member name="M:BatchUpdateExtensions.UpdateFromQuery``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``0}},System.Action{Z.EntityFramework.Extensions.BatchUpdate})">
            <summary>
                An IQueryable&lt;T&gt; extension method that updates all rows from the query using an
                expression without retrieving entities.
            </summary>
            <typeparam name="T">The type of elements of the query.</typeparam>
            <param name="query">The query to update rows from without retrieving entities.</param>
            <param name="updateFactory">The update expression.</param>
            <param name="batchUpdateBuilder">The batch builder action to change default configuration.</param>
            <returns>The number of rows affected.</returns>
        </member>
        <member name="M:BatchUpdateExtensions.UpdateFromQuery``1(System.Linq.IQueryable{``0},System.Dynamic.ExpandoObject)">
            <summary>
                An IQueryable&lt;T&gt; extension method that updates all rows from the query using an
                expression without retrieving entities.
            </summary>
            <typeparam name="T">The type of elements of the query.</typeparam>
            <param name="query">The query to update rows from without retrieving entities.</param>
            <param name="expandoObject">The expandoObject.</param>
        </member>
        <member name="M:BatchUpdateExtensions.UpdateFromQuery``1(System.Linq.IQueryable{``0},System.Dynamic.ExpandoObject,System.Action{Z.EntityFramework.Extensions.BatchUpdate})">
            <summary>
                An IQueryable&lt;T&gt; extension method that updates all rows from the query using an
                expression without retrieving entities.
            </summary>
            <typeparam name="T">The type of elements of the query.</typeparam>
            <param name="query">The query to update rows from without retrieving entities.</param>
            <param name="expandoObject">The expandoObject.</param>
            <param name="batchUpdateBuilder">The batch builder action to change default configuration.</param>
        </member>
        <member name="M:BatchUpdateExtensions.UpdateFromQuery``1(System.Linq.IQueryable{``0},System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
                An IQueryable&lt;T&gt; extension method that updates all rows from the query using an
                expression without retrieving entities.
            </summary>
            <typeparam name="T">The type of elements of the query.</typeparam>
            <param name="query">The query to update rows from without retrieving entities.</param>
            <param name="dictionary">The dictionary.</param>
        </member>
        <member name="M:BatchUpdateExtensions.UpdateFromQuery``1(System.Linq.IQueryable{``0},System.Collections.Generic.IDictionary{System.String,System.Object},System.Action{Z.EntityFramework.Extensions.BatchUpdate})">
            <summary>
                An IQueryable&lt;T&gt; extension method that updates all rows from the query using an
                expression without retrieving entities.
            </summary>
            <typeparam name="T">The type of elements of the query.</typeparam>
            <param name="query">The query to update rows from without retrieving entities.</param>
            <param name="dictionary">The dictionary.</param>
            <param name="batchUpdateBuilder">The batch builder action to change default configuration.</param>
        </member>
        <member name="M:BatchUpdateExtensions.UpdateFromQuery``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Object}})">
            <summary>An IQueryable&lt;TEntity&gt; extension method that updates from query.</summary>
            <typeparam name="TEntity">Type of the entity.</typeparam>
            <param name="query">The query to act on.</param>
            <param name="updateExpression">The update expression.</param>
            <returns>The number of row affected.</returns>
        </member>
        <member name="M:BatchUpdateExtensions.UpdateFromQuery``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Object}},System.Action{Z.EntityFramework.Extensions.BatchUpdate})">
            <summary>An IQueryable&lt;TEntity&gt; extension method that updates from query.</summary>
            <typeparam name="TEntity">Type of the entity.</typeparam>
            <param name="query">The query to act on.</param>
            <param name="updateExpression">The update expression.</param>
            <param name="bulkOperationFactory">The bulk operation factory.</param>
            <returns>The number of row affected.</returns>
        </member>
        <member name="M:BatchUpdateExtensions.UpdateFromQueryAsync``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``0}},System.Threading.CancellationToken)">
            <summary>
                An IQueryable&lt;T&gt; extension method that updates all rows asynchronously from the query
                using an expression without retrieving entities.
            </summary>
            <typeparam name="T">The type of elements of the query.</typeparam>
            <param name="query">The query to update rows from without retrieving entities.</param>
            <param name="updateFactory">The update factory.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>A task with the number of rows affected.</returns>
        </member>
        <member name="M:BatchUpdateExtensions.UpdateFromQueryAsync``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``0}},System.Action{Z.EntityFramework.Extensions.BatchUpdate},System.Threading.CancellationToken)">
            <summary>
                An IQueryable&lt;T&gt; extension method that updates all rows from the query using an
                expression  without retrieving entities.
            </summary>
            <typeparam name="T">The type of elements of the query.</typeparam>
            <param name="query">The query to update rows from without retrieving entities.</param>
            <param name="updateFactory">The update factory.</param>
            <param name="batchUpdateBuilder">The batch delete builder to change default configuration.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>A task with the number of rows affected.</returns>
        </member>
        <member name="M:BatchUpdateExtensions.UpdateFromQueryAsync``1(System.Linq.IQueryable{``0},System.Dynamic.ExpandoObject)">
            <summary>
                An IQueryable&lt;T&gt; extension method that updates all rows asynchronously from the query
                using an expression without retrieving entities.
            </summary>
            <typeparam name="T">The type of elements of the query.</typeparam>
            <param name="query">The query to update rows from without retrieving entities.</param>
            <param name="expandoObject">The expandoObject.</param>
            <returns>A Task.</returns>
        </member>
        <member name="M:BatchUpdateExtensions.UpdateFromQueryAsync``1(System.Linq.IQueryable{``0},System.Dynamic.ExpandoObject,System.Threading.CancellationToken)">
            <summary>
                An IQueryable&lt;T&gt; extension method that updates all rows asynchronously from the query
                using an expression without retrieving entities.
            </summary>
            <typeparam name="T">The type of elements of the query.</typeparam>
            <param name="query">The query to update rows from without retrieving entities.</param>
            <param name="expandoObject">The expandoObject.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>A Task.</returns>
        </member>
        <member name="M:BatchUpdateExtensions.UpdateFromQueryAsync``1(System.Linq.IQueryable{``0},System.Dynamic.ExpandoObject,System.Action{Z.EntityFramework.Extensions.BatchUpdate})">
            <summary>
                An IQueryable&lt;T&gt; extension method that updates all rows asynchronously from the query
                using an expression without retrieving entities.
            </summary>
            <typeparam name="T">The type of elements of the query.</typeparam>
            <param name="query">The query to update rows from without retrieving entities.</param>
            <param name="expandoObject">The expandoObject.</param>
            <param name="batchUpdateBuilder">The batch builder action to change default configuration.</param>
            <returns>A Task.</returns>
        </member>
        <member name="M:BatchUpdateExtensions.UpdateFromQueryAsync``1(System.Linq.IQueryable{``0},System.Dynamic.ExpandoObject,System.Action{Z.EntityFramework.Extensions.BatchUpdate},System.Threading.CancellationToken)">
            <summary>
                An IQueryable&lt;T&gt; extension method that updates all rows asynchronously from the query
                using an expression without retrieving entities.
            </summary>
            <typeparam name="T">The type of elements of the query.</typeparam>
            <param name="query">The query to update rows from without retrieving entities.</param>
            <param name="expandoObject">The expandoObject.</param>
            <param name="batchUpdateBuilder">The batch builder action to change default configuration.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>A Task.</returns>
        </member>
        <member name="M:BatchUpdateExtensions.UpdateFromQueryAsync``1(System.Linq.IQueryable{``0},System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
                An IQueryable&lt;T&gt; extension method that updates all rows asynchronously from the query
                using an expression without retrieving entities.
            </summary>
            <typeparam name="T">The type of elements of the query.</typeparam>
            <param name="query">The query to update rows from without retrieving entities.</param>
            <param name="dictionary">The dictionary.</param>
            <returns>A Task.</returns>
        </member>
        <member name="M:BatchUpdateExtensions.UpdateFromQueryAsync``1(System.Linq.IQueryable{``0},System.Collections.Generic.IDictionary{System.String,System.Object},System.Threading.CancellationToken)">
            <summary>
                An IQueryable&lt;T&gt; extension method that updates all rows asynchronously from the query
                using an expression without retrieving entities.
            </summary>
            <typeparam name="T">The type of elements of the query.</typeparam>
            <param name="query">The query to update rows from without retrieving entities.</param>
            <param name="dictionary">The dictionary.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>A Task.</returns>
        </member>
        <member name="M:BatchUpdateExtensions.UpdateFromQueryAsync``1(System.Linq.IQueryable{``0},System.Collections.Generic.IDictionary{System.String,System.Object},System.Action{Z.EntityFramework.Extensions.BatchUpdate})">
            <summary>
                An IQueryable&lt;T&gt; extension method that updates all rows asynchronously from the query
                using an expression without retrieving entities.
            </summary>
            <typeparam name="T">The type of elements of the query.</typeparam>
            <param name="query">The query to update rows from without retrieving entities.</param>
            <param name="dictionary">The dictionary.</param>
            <param name="batchUpdateBuilder">The batch builder action to change default configuration.</param>
            <returns>A Task.</returns>
        </member>
        <member name="M:BatchUpdateExtensions.UpdateFromQueryAsync``1(System.Linq.IQueryable{``0},System.Collections.Generic.IDictionary{System.String,System.Object},System.Action{Z.EntityFramework.Extensions.BatchUpdate},System.Threading.CancellationToken)">
            <summary>
                An IQueryable&lt;T&gt; extension method that updates all rows asynchronously from the query
                using an expression without retrieving entities.
            </summary>
            <typeparam name="T">The type of elements of the query.</typeparam>
            <param name="query">The query to update rows from without retrieving entities.</param>
            <param name="dictionary">The dictionary.</param>
            <param name="batchUpdateBuilder">The batch builder action to change default configuration.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>A Task.</returns>
        </member>
        <member name="M:BatchUpdateExtensions.UpdateFromQueryAsync``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Object}})">
            <summary>An IQueryable&lt;TEntity&gt; extension method that updates from query.</summary>
            <typeparam name="TEntity">Type of the entity.</typeparam>
            <param name="query">The query to act on.</param>
            <param name="updateExpression">The update expression.</param>
            <returns>The number of row affected.</returns>
        </member>
        <member name="M:BatchUpdateExtensions.UpdateFromQueryAsync``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Object}},System.Threading.CancellationToken)">
            <summary>An IQueryable&lt;TEntity&gt; extension method that updates from query.</summary>
            <typeparam name="TEntity">Type of the entity.</typeparam>
            <param name="query">The query to act on.</param>
            <param name="updateExpression">The update expression.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>The number of row affected.</returns>
        </member>
        <member name="M:BatchUpdateExtensions.UpdateFromQueryAsync``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Object}},System.Action{Z.EntityFramework.Extensions.BatchUpdate})">
            <summary>An IQueryable&lt;TEntity&gt; extension method that updates from query.</summary>
            <typeparam name="TEntity">Type of the entity.</typeparam>
            <param name="query">The query to act on.</param>
            <param name="updateExpression">The update expression.</param>
            <param name="bulkOperationFactory">The bulk operation factory.</param>
            <returns>The number of row affected.</returns>
        </member>
        <member name="M:BatchUpdateExtensions.UpdateFromQueryAsync``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Object}},System.Action{Z.EntityFramework.Extensions.BatchUpdate},System.Threading.CancellationToken)">
            <summary>An IQueryable&lt;TEntity&gt; extension method that updates from query.</summary>
            <typeparam name="TEntity">Type of the entity.</typeparam>
            <param name="query">The query to act on.</param>
            <param name="updateExpression">The update expression.</param>
            <param name="bulkOperationFactory">The bulk operation factory.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>The number of row affected.</returns>
        </member>
        <member name="M:BindInterceptorExtensions.BindInterceptor(Microsoft.EntityFrameworkCore.DbContext,Z.EntityFramework.Extensions.DbCommandInterceptor)">
            <summary>
                Bind a context to an interceptor. Multiples context can be bound to the same interceptor if using a different
                connection instance.
            </summary>
            <param name="dbContext">The DbContext to bind to the interceptor.</param>
            <param name="interceptor">The DbCommandInterceptor interceptor.</param>
        </member>
        <member name="M:BindInterceptorExtensions.BindInterceptor(Microsoft.EntityFrameworkCore.DbContext,Z.EntityFramework.Extensions.DbConnectionInterceptor)">
            <summary>A DbContext extension method that bind interceptor.</summary>
            <param name="dbContext">The DbContext to bind to the interceptor.</param>
            <param name="interceptor">The DbConnectionInterceptor interceptor.</param>
        </member>
        <member name="M:BindInterceptorExtensions.BindInterceptor(Microsoft.EntityFrameworkCore.DbContext,Z.EntityFramework.Extensions.DbTransactionInterceptor)">
            <summary>A DbContext extension method that bind interceptor.</summary>
            <param name="dbContext">The DbContext to bind to the interceptor.</param>
            <param name="interceptor">The DbTransactionInterceptor interceptor.</param>
        </member>
        <member name="M:QueryHookExtensions.Hook``1(System.Linq.IQueryable{``0},Z.EntityFramework.Extensions.IQueryHook)">
            <summary>An IQueryable&lt;T&gt; extension method that add an hook to the current query.</summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="this">The query to act on.</param>
            <param name="hook">The hook that inherit from IQueryHook.</param>
            <returns>The IQueryable&lt;T&gt; with the hook added.</returns>
        </member>
        <member name="M:QueryHookExtensions.HookExecuting``1(System.Linq.IQueryable{``0},System.Action{System.Data.Common.DbCommand,Microsoft.EntityFrameworkCore.DbContext})">
            <summary>An IQueryable&lt;T&gt; extension method that add an executing hook to the current query.</summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="this">The query to act on.</param>
            <param name="action">The executing action.</param>
            <returns>The IQueryable&lt;T&gt; with the executing hook added.</returns>
        </member>
    </members>
</doc>